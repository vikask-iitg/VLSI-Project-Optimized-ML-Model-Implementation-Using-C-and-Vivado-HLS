-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity k2c_dot_dense_13_hbi_rom is 
    generic(
             DWIDTH     : integer := 32; 
             AWIDTH     : integer := 9; 
             MEM_SIZE    : integer := 320
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of k2c_dot_dense_13_hbi_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "10111110010101101101010000101001", 
    1 => "00111101010111100100110000001100", 
    2 => "10111101001101100001101111010001", 
    3 => "10111101001101111100111110010100", 
    4 => "10111011111110111111101011010111", 
    5 => "10111110010010000111001010011110", 
    6 => "10111110000101000010111110110101", 
    7 => "10111101010001010011110001110000", 
    8 => "10111101111010001100011011110100", 
    9 => "00111011111000011110110100000110", 
    10 => "00111101111010010110101111010011", 
    11 => "10111101101110111010000111010011", 
    12 => "00111110001001000000001010000011", 
    13 => "10111101100111110000011110111001", 
    14 => "10111101101110101110111010001101", 
    15 => "00111110010110100111100000000111", 
    16 => "10111110001111111000010010001010", 
    17 => "00111110010000000110110010001111", 
    18 => "00111010101010110110001101000100", 
    19 => "00111110001110101001011011101111", 
    20 => "00111101111010100100001000000100", 
    21 => "10111101100011110100010110111011", 
    22 => "00111110001001101111010011011100", 
    23 => "00111101010000101010100111101110", 
    24 => "00111101101010010100100100100100", 
    25 => "00111110000001101111100110101100", 
    26 => "00111101111101110001101111100111", 
    27 => "00111101100111010001101011111100", 
    28 => "00111101101010010001010010101111", 
    29 => "10111101111001111001100100000011", 
    30 => "10111101101111001100000011100000", 
    31 => "00111100101010011001100000110111", 
    32 => "00111110001101101111101110100100", 
    33 => "00111101100110101010101110110000", 
    34 => "00111011000110000101000010100100", 
    35 => "10111101110000111111000101110010", 
    36 => "00111101100000011010010000000000", 
    37 => "00111110000010101100000000010110", 
    38 => "10111110000100001100001111010000", 
    39 => "10111110001001111111010000001001", 
    40 => "00111101010111000100101010110000", 
    41 => "00111101110011100110001111011110", 
    42 => "00111101010100010000000110101000", 
    43 => "10111110010010011100100111001101", 
    44 => "10111101111001100110111111101110", 
    45 => "10111110000110000011001001011000", 
    46 => "00111101101000011010011110000001", 
    47 => "00111110000010111100100010101000", 
    48 => "10111101011100000111010101010110", 
    49 => "10111110000111001100011110000111", 
    50 => "00111110001100110101111110100011", 
    51 => "10111101110010100111000111111111", 
    52 => "10111110001011000100001001111000", 
    53 => "10111101010101010100001000000001", 
    54 => "10111101001011100000101110110101", 
    55 => "10111110001011010101011010111011", 
    56 => "10111110010101110111110000100010", 
    57 => "00111101000111101001010111001000", 
    58 => "10111110001011110111010011101110", 
    59 => "10111110001100100111110001110111", 
    60 => "10111101000010011101100010011100", 
    61 => "10111101010000000101000100010001", 
    62 => "00111101111101010011110011000110", 
    63 => "00111110000111000001101110000001", 
    64 => "10111110000111100000010000100010", 
    65 => "00111100101000000110000110010010", 
    66 => "10111100101011111110100001110001", 
    67 => "10111100000110000000111010110110", 
    68 => "00111110010000101011011111001001", 
    69 => "00111101110010101010111100000000", 
    70 => "00111101111001101100110111010101", 
    71 => "10111110010000100111011100000000", 
    72 => "00111101100001101110000011100010", 
    73 => "00111110000011001010001000110001", 
    74 => "00111100111101100001001010001010", 
    75 => "00111101110010101101011011100101", 
    76 => "00111110000011100111000111000101", 
    77 => "00111110010110000100001100111000", 
    78 => "10111110000110001001110000010111", 
    79 => "10111101110100100110011001000000", 
    80 => "00111101010100101001000001111000", 
    81 => "00111101001100110011110101100111", 
    82 => "10111101111011100011011100010000", 
    83 => "10111110010111110000011100001100", 
    84 => "10111110001111011011001111111000", 
    85 => "00111110000001100001111111101001", 
    86 => "00111110011011011100010110001011", 
    87 => "00111101101000111110100001110101", 
    88 => "00111110001111100010111001100101", 
    89 => "00111110000000010001101101010010", 
    90 => "00111101111000101001000000101001", 
    91 => "10111110000010001010100001101010", 
    92 => "00111100110001111101111111110000", 
    93 => "10111101010010101101101101000100", 
    94 => "10111110100010110000010000111010", 
    95 => "00111101110101001010000100110000", 
    96 => "10111100100001001010001000001111", 
    97 => "00111110000111000000001010011001", 
    98 => "10111110000110100110001110000011", 
    99 => "10111101001011101111100100101110", 
    100 => "10111110000001111000101101010100", 
    101 => "10111100100010000011101010001010", 
    102 => "00111110010001101101101101111111", 
    103 => "00111101101110101000100101100101", 
    104 => "00111100101110000010010011001111", 
    105 => "00111101111100001110000011100010", 
    106 => "10111110001000101101110100111101", 
    107 => "10111110001110010000011111010000", 
    108 => "00111101110001101101001000100011", 
    109 => "00111110000101111010111101011101", 
    110 => "10111110000001011000000011011100", 
    111 => "00111110000101010110110100010101", 
    112 => "10111101101101110101100111111111", 
    113 => "00111101001001011001110100111111", 
    114 => "00111110001100110110111011001101", 
    115 => "00111101100101110100011001011001", 
    116 => "10111101111011000001111011010100", 
    117 => "00111101011100110010001001100011", 
    118 => "00111110000100110011111100000001", 
    119 => "00111010111000011001101010101000", 
    120 => "00111101100001010111100110101111", 
    121 => "00111101111000000110101010111010", 
    122 => "10111110000011001100111001100111", 
    123 => "00111101110111101110010001100011", 
    124 => "00111101111101011001001111110110", 
    125 => "00111011111101010100100110110101", 
    126 => "00111100111100000111000000001110", 
    127 => "00111110010010101001111110110100", 
    128 => "10111110001010101100100001111010", 
    129 => "10111110001011010010011011000101", 
    130 => "10111110001001000110000000000111", 
    131 => "10111101011101001001111100110011", 
    132 => "00111110001110110001001100110100", 
    133 => "10111110000110100010010001101000", 
    134 => "00111110000110101000100110100111", 
    135 => "10111110000100101110111010001111", 
    136 => "10111110010101010011100001001000", 
    137 => "10111110001000110111100000111101", 
    138 => "00111101110100101010101011101000", 
    139 => "10111100110000001100101101111101", 
    140 => "10111101100000110101001100000100", 
    141 => "00111110000100111111001110011001", 
    142 => "10111101010101101100000100101000", 
    143 => "10111110001000001010101100111100", 
    144 => "00111110010110000101000001101000", 
    145 => "10111100100000101111101101101100", 
    146 => "00111101101101110010010001111101", 
    147 => "10111101100001111001111001110100", 
    148 => "10111110010010101011010011010101", 
    149 => "10111101101001101001010100111100", 
    150 => "10111101011111100011110001110110", 
    151 => "00111110000100000111001000010011", 
    152 => "10111101101001010101011100000000", 
    153 => "00111101000001010011011100010000", 
    154 => "00111110001011000100101111101000", 
    155 => "10111101100001000011101011111000", 
    156 => "00111110000010110000000101110101", 
    157 => "10111110000011011110011010101110", 
    158 => "10111101110010001000010000000000", 
    159 => "10111110000000110010111000000011", 
    160 => "00111100000111011101111010100101", 
    161 => "00111101111001101000011011111010", 
    162 => "10111011111000110111100100100101", 
    163 => "10111110000101000011100101011011", 
    164 => "10111101111110000110111100111010", 
    165 => "10111110001011110011010111000000", 
    166 => "10111110010100011001010000100000", 
    167 => "10111010111000001100101111100100", 
    168 => "00111101010011001000111010111010", 
    169 => "10111101100111010101101011101001", 
    170 => "00111100010100001011101111100110", 
    171 => "10111110000111000001011111111101", 
    172 => "00111101101010000000101110110000", 
    173 => "10111101101000010111101100010111", 
    174 => "10111101100110101111010111010000", 
    175 => "10111101100000111001101011010011", 
    176 => "00111101011111010110111110010001", 
    177 => "00111101111111001011001000111000", 
    178 => "10111101101100110000000010000111", 
    179 => "00111110001100001101110000100101", 
    180 => "00111101110000011111011110010111", 
    181 => "00111110001100100001110110110011", 
    182 => "10111100001101011011100100011111", 
    183 => "00111011111101001000011100011100", 
    184 => "00111011110101010110000001101100", 
    185 => "10111101101001011100010000011101", 
    186 => "10111110000001001111100011000100", 
    187 => "10111110001100101000100110100100", 
    188 => "00111110001010101111111100011000", 
    189 => "10111101001110100110000000100001", 
    190 => "00111101110011000101011011000011", 
    191 => "10111110000101011100101010101111", 
    192 => "10111110000100111000111111110000", 
    193 => "00111110000011010001010100111111", 
    194 => "00111101110000101011110100001101", 
    195 => "00111110001010101001100010110001", 
    196 => "00111101110101010111001011110110", 
    197 => "10111101110011110101111000000011", 
    198 => "00111101110001001000110101110110", 
    199 => "00111101101100100100101001110111", 
    200 => "10111110000110000000011011101110", 
    201 => "00111100110001000111010110110001", 
    202 => "10111100110111001000100000010100", 
    203 => "10111110001010001011111101010010", 
    204 => "10111110001011111011001100001100", 
    205 => "10111101100111001000011110011110", 
    206 => "10111101101110011101001100110011", 
    207 => "10111101011011011110011100001100", 
    208 => "10111110000110110001001001000111", 
    209 => "00111101110111010110001000000101", 
    210 => "00111110000110100100010011100011", 
    211 => "10111101111000101101101010111101", 
    212 => "10111110000000010110110010000111", 
    213 => "10111101100100110000101010100110", 
    214 => "00111110000011101010101101111000", 
    215 => "10111110001111010110011000100011", 
    216 => "10111101001100011101101010011001", 
    217 => "10111110000100101000000110000110", 
    218 => "00111110001111101010010001110001", 
    219 => "10111101001000010111101001100000", 
    220 => "00111110001011010100100010000000", 
    221 => "00111101101000111000000111100110", 
    222 => "00111100101011110111001001101010", 
    223 => "00111101000001110100001110011111", 
    224 => "10111110000100001111001000000011", 
    225 => "10111101011011001110110010101101", 
    226 => "00111101111000111101101110101001", 
    227 => "10111101110100111101000010011111", 
    228 => "10111101111000111011111010011001", 
    229 => "10111101100111110111110110110100", 
    230 => "10111110010110001001111000000110", 
    231 => "10111101001101010000101011000100", 
    232 => "10111101001100011110110111011000", 
    233 => "00111110010100101011000000000111", 
    234 => "10111101100000000110011011100101", 
    235 => "00111110000001100101011101110111", 
    236 => "10111011000101001111100000100010", 
    237 => "10111110000110010101100011101000", 
    238 => "00111110010101111110001100011100", 
    239 => "10111100111101010000000110100000", 
    240 => "00111110001010101000100000100010", 
    241 => "10111101000100101001101010110101", 
    242 => "00111101010101010010001011001111", 
    243 => "10111110010100110111011101000100", 
    244 => "10111100110010101111110001111111", 
    245 => "10111101011100000100001111111011", 
    246 => "00111101101100011100101100001010", 
    247 => "10111101001011001100111001111111", 
    248 => "00111110000110110111010100101100", 
    249 => "00111101111101011001110011101001", 
    250 => "00111110000111111111010101010111", 
    251 => "00111110000011000110001111111011", 
    252 => "10111100100000100110111110110010", 
    253 => "00111101100001001110001001111100", 
    254 => "10111110010011100101010101000011", 
    255 => "00111110001110101100100100101011", 
    256 => "00111101010110100011100000001111", 
    257 => "10111101110100110011010110100111", 
    258 => "00111101011011100000101011010110", 
    259 => "10111110001100010011010110000010", 
    260 => "10111101101000101100110100001100", 
    261 => "00111110010001010011001011110000", 
    262 => "00111101100100111110011011100100", 
    263 => "10111101110100001101101100000100", 
    264 => "00111101111110010010101011001101", 
    265 => "10111110001111101111101111100000", 
    266 => "00111110000000101111001000111000", 
    267 => "10111101011110111111111111101000", 
    268 => "00111101110101010111001110011111", 
    269 => "10111110000100101001111011010100", 
    270 => "10111011000100000110000110001011", 
    271 => "10111101101001001010101110010010", 
    272 => "10111101000011001001001010111000", 
    273 => "10111101011001100000110011001010", 
    274 => "10111101111110001010011001101101", 
    275 => "10111110001100111001011011010100", 
    276 => "00111110001010011110100011110001", 
    277 => "00111110000111001111011100110010", 
    278 => "00111110000111001110000111101101", 
    279 => "10111100001001110001000010010001", 
    280 => "10111101101100100001100101010010", 
    281 => "00111110000011001000100001011111", 
    282 => "00111101101010101011000110110110", 
    283 => "10111110000001110110110100001001", 
    284 => "00111110001110100010110111100101", 
    285 => "10111110000101001100111011111100", 
    286 => "10111100110111111000110000000000", 
    287 => "10111101011100101010101111000100", 
    288 => "10111110000001111100100001001000", 
    289 => "10111101110010111000101000010001", 
    290 => "00111101001111101111010000001110", 
    291 => "00111101000000010100010000110010", 
    292 => "10111101111011110100101110111100", 
    293 => "00111101010110111000111000011101", 
    294 => "00111011001010010001000010100011", 
    295 => "00111110001010101011010000011111", 
    296 => "00111100101101000011111100010010", 
    297 => "00111110001110010110001001100100", 
    298 => "10111110000010011101011011111101", 
    299 => "00111101110001100111000101001110", 
    300 => "10111110000011010110011000101110", 
    301 => "10111101100000010110011100001110", 
    302 => "00111110100000100001111100000100", 
    303 => "10111110001010110101011110110001", 
    304 => "00111100110000010001110101000010", 
    305 => "00111101110100100010101111110001", 
    306 => "10111110010100101011010111000001", 
    307 => "00111100100111011010111011100110", 
    308 => "10111101010110111100111100011011", 
    309 => "00111101010111100011010000111000", 
    310 => "00111101101101110001100001100011", 
    311 => "00111110001010111100011000001110", 
    312 => "10111101110111000101101011101111", 
    313 => "10111110000100101111101001101010", 
    314 => "10111110001110010001011010100011", 
    315 => "10111110010010001011100001101000", 
    316 => "10111110000001100111110000101010", 
    317 => "00111110000101100101100101000101", 
    318 => "00111110001000111000010010000100", 
    319 => "00111010010110100111111011100011" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity k2c_dot_dense_13_hbi is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 320;
        AddressWidth : INTEGER := 9);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of k2c_dot_dense_13_hbi is
    component k2c_dot_dense_13_hbi_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    k2c_dot_dense_13_hbi_rom_U :  component k2c_dot_dense_13_hbi_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


