// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef __k2c_dot_2_dense_1UhA_H__
#define __k2c_dot_2_dense_1UhA_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct k2c_dot_2_dense_1UhA_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 64;
  static const unsigned AddressWidth = 6;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(k2c_dot_2_dense_1UhA_ram) {
        ram[0] = "0b10111110011101101010001110011111";
        ram[1] = "0b10111110000100100010011000110010";
        ram[2] = "0b00111110011101000111010001001000";
        ram[3] = "0b10111100001000110000101110100111";
        ram[4] = "0b00111110110011011010111101101000";
        ram[5] = "0b00111110011000101001111101010001";
        ram[6] = "0b00111110101101011101000111000001";
        ram[7] = "0b10111110100001111100111001101101";
        ram[8] = "0b00111110100101110010110011011010";
        ram[9] = "0b00111110100011111100011111000100";
        ram[10] = "0b10111110100001100100101111010101";
        ram[11] = "0b00111110100101111110111001010101";
        ram[12] = "0b00111110101011001111101100010100";
        ram[13] = "0b00111101101111001010000101010111";
        ram[14] = "0b10111110100010100010111101110101";
        ram[15] = "0b10111101100110010111000001000100";
        ram[16] = "0b00111110110000100000100110000100";
        ram[17] = "0b00111101100110111010110100011000";
        ram[18] = "0b00111110010110101010011000100100";
        ram[19] = "0b00111110010111001111011110110000";
        ram[20] = "0b10111101100001000100111100100011";
        ram[21] = "0b10111110001110111010101111110000";
        ram[22] = "0b10111101101101110011100110110001";
        ram[23] = "0b10111101001111111011011000101111";
        ram[24] = "0b10111110101010010010011000111010";
        ram[25] = "0b00111101011111101110110010101101";
        ram[26] = "0b00111110011010010001110111011001";
        ram[27] = "0b10111101101001101010001101100000";
        ram[28] = "0b00111110101110010001000011111100";
        ram[29] = "0b10111110000110110110111001101110";
        ram[30] = "0b10111110001001100001000011100011";
        ram[31] = "0b10111110101001111001100110010010";
        ram[32] = "0b00111101110011100111110100100011";
        ram[33] = "0b00111110101100001110010101000111";
        ram[34] = "0b00111110100111100000100010111010";
        ram[35] = "0b00111101100111110001100100101111";
        ram[36] = "0b10111101000000000010000110010001";
        ram[37] = "0b10111011011100000000011111000100";
        ram[38] = "0b10111101110100010101000010100100";
        ram[39] = "0b10111100111001010010001011110000";
        ram[40] = "0b10111110001111100001100101001010";
        ram[41] = "0b00111110100100011010010000011110";
        ram[42] = "0b10111101111001000000001101110110";
        ram[43] = "0b10111110100010001000001111110111";
        ram[44] = "0b10111110100110101010101011111000";
        ram[45] = "0b00111110001001110000010011111100";
        ram[46] = "0b00111110100101110001100111110111";
        ram[47] = "0b10111110100000010000000111110011";
        ram[48] = "0b10111100111110000010110000011001";
        ram[49] = "0b00111100111110111100110000000001";
        ram[50] = "0b00111101001100000111000010000110";
        ram[51] = "0b10111110100100010101101000110110";
        ram[52] = "0b00111110010000011011101000010110";
        ram[53] = "0b10111101011011001111101111000010";
        ram[54] = "0b10111110011010001001011100111001";
        ram[55] = "0b10111110001010100100011110110101";
        ram[56] = "0b00111110010010111001100101000001";
        ram[57] = "0b00111110100110011101010101010001";
        ram[58] = "0b00111101001001000010001010001010";
        ram[59] = "0b00111101110010000000001000010101";
        ram[60] = "0b10111110100110101101111011001100";
        ram[61] = "0b00111110101001111000111011011111";
        ram[62] = "0b00111110001101101011100000001100";
        ram[63] = "0b00111110000110001010001011101011";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(k2c_dot_2_dense_1UhA) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 64;
static const unsigned AddressWidth = 6;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


k2c_dot_2_dense_1UhA_ram* meminst;


SC_CTOR(k2c_dot_2_dense_1UhA) {
meminst = new k2c_dot_2_dense_1UhA_ram("k2c_dot_2_dense_1UhA_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~k2c_dot_2_dense_1UhA() {
    delete meminst;
}


};//endmodule
#endif
