// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef __k2c_dot_2_dense_1Yie_H__
#define __k2c_dot_2_dense_1Yie_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct k2c_dot_2_dense_1Yie_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 64;
  static const unsigned AddressWidth = 6;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(k2c_dot_2_dense_1Yie_ram) {
        ram[0] = "0b00111100100000000100000011110101";
        ram[1] = "0b00111110001101001101011010001111";
        ram[2] = "0b10111110101110110011101011000111";
        ram[3] = "0b10111110100111011100010111101111";
        ram[4] = "0b00111110101010101010000100010101";
        ram[5] = "0b10111110001110100101011110101011";
        ram[6] = "0b10111110010110000001100011010001";
        ram[7] = "0b10111110100100010010100010011011";
        ram[8] = "0b00111110100111011100100100001011";
        ram[9] = "0b00111101001100010001010110000101";
        ram[10] = "0b10111100101011010101010001100010";
        ram[11] = "0b10111110100111111010100101111100";
        ram[12] = "0b00111110001101010001011100111001";
        ram[13] = "0b10111110100110000101100001111010";
        ram[14] = "0b00111110010101010011101010011010";
        ram[15] = "0b00111110100010001111000010100110";
        ram[16] = "0b00111110110001011010001000110101";
        ram[17] = "0b10111110100001001010111111100101";
        ram[18] = "0b00111110001000000100001001010110";
        ram[19] = "0b00111110001101011000010000010010";
        ram[20] = "0b10111110000100111011011001101010";
        ram[21] = "0b10111110101001111011101010010010";
        ram[22] = "0b00111110011010100111111001011000";
        ram[23] = "0b10111110010111110110100001010111";
        ram[24] = "0b10111110100001100000010101110011";
        ram[25] = "0b10111110001100010111000100111011";
        ram[26] = "0b00111110000000001001011100101000";
        ram[27] = "0b00111110011100101110111110100101";
        ram[28] = "0b00111101000111010100101010011101";
        ram[29] = "0b10111100101010101100110110001010";
        ram[30] = "0b00111011100010001100100100110011";
        ram[31] = "0b00111110010111111101101000001011";
        ram[32] = "0b10111110000011110001111111010011";
        ram[33] = "0b10111101110111011001001010111111";
        ram[34] = "0b00111101011101111111111111001001";
        ram[35] = "0b00111101101010101011000000111011";
        ram[36] = "0b00111101110111111101111000110000";
        ram[37] = "0b10111101001111000001011001111110";
        ram[38] = "0b00111101001100010001111001101000";
        ram[39] = "0b00111110011000110111110101101110";
        ram[40] = "0b00111110100010100111001011100100";
        ram[41] = "0b00111110010010100111101010111110";
        ram[42] = "0b00111110101001010110111110001101";
        ram[43] = "0b10111110100011101111111000010001";
        ram[44] = "0b10111110101100011110110011100100";
        ram[45] = "0b10111110100110110110100010101101";
        ram[46] = "0b00111110100000011110100010101010";
        ram[47] = "0b10111101111010111101011011010011";
        ram[48] = "0b10111100101101001001011100001000";
        ram[49] = "0b10111110010010111110111101100101";
        ram[50] = "0b10111110000000001000100010011000";
        ram[51] = "0b10111110001011000100011110010000";
        ram[52] = "0b10111110011000001100000111100001";
        ram[53] = "0b10111100100000010001111111100111";
        ram[54] = "0b10111110011110111010001001110111";
        ram[55] = "0b10111110000101011111110100001101";
        ram[56] = "0b00111110101010010011100101000010";
        ram[57] = "0b10111101101001111001110000111011";
        ram[58] = "0b10111101000100100000100111000111";
        ram[59] = "0b00111101111100111110001011100111";
        ram[60] = "0b10111110100101011101011011011101";
        ram[61] = "0b10111110101000110001011011100101";
        ram[62] = "0b10111110000010110000110111111000";
        ram[63] = "0b00111110101011110010001110010001";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(k2c_dot_2_dense_1Yie) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 64;
static const unsigned AddressWidth = 6;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


k2c_dot_2_dense_1Yie_ram* meminst;


SC_CTOR(k2c_dot_2_dense_1Yie) {
meminst = new k2c_dot_2_dense_1Yie_ram("k2c_dot_2_dense_1Yie_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~k2c_dot_2_dense_1Yie() {
    delete meminst;
}


};//endmodule
#endif
