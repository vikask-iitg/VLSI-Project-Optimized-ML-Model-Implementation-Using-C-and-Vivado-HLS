// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module k2c_dot_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        C_array_address0,
        C_array_ce0,
        C_array_we0,
        C_array_d0,
        C_array_q0,
        C_array1_address0,
        C_array1_ce0,
        C_array1_we0,
        C_array1_d0,
        C_array1_q0,
        C_array2_address0,
        C_array2_ce0,
        C_array2_we0,
        C_array2_d0,
        C_array2_q0,
        C_array3_address0,
        C_array3_ce0,
        C_array3_we0,
        C_array3_d0,
        C_array3_q0,
        C_array4_address0,
        C_array4_ce0,
        C_array4_we0,
        C_array4_d0,
        C_array4_q0,
        C_array5_address0,
        C_array5_ce0,
        C_array5_we0,
        C_array5_d0,
        C_array5_q0,
        C_array6_address0,
        C_array6_ce0,
        C_array6_we0,
        C_array6_d0,
        C_array6_q0,
        C_array7_address0,
        C_array7_ce0,
        C_array7_we0,
        C_array7_d0,
        C_array7_q0,
        A_array_address0,
        A_array_ce0,
        A_array_q0,
        A_array8_address0,
        A_array8_ce0,
        A_array8_q0,
        A_array9_address0,
        A_array9_ce0,
        A_array9_q0,
        A_array10_address0,
        A_array10_ce0,
        A_array10_q0,
        A_array11_address0,
        A_array11_ce0,
        A_array11_q0,
        A_array12_address0,
        A_array12_ce0,
        A_array12_q0,
        A_array13_address0,
        A_array13_ce0,
        A_array13_q0,
        A_array14_address0,
        A_array14_ce0,
        A_array14_q0,
        A_dim,
        A_numel_read,
        B_dim,
        B_numel_read,
        p_read2
);

parameter    ap_ST_fsm_state1 = 154'd1;
parameter    ap_ST_fsm_state2 = 154'd2;
parameter    ap_ST_fsm_state3 = 154'd4;
parameter    ap_ST_fsm_state4 = 154'd8;
parameter    ap_ST_fsm_state5 = 154'd16;
parameter    ap_ST_fsm_state6 = 154'd32;
parameter    ap_ST_fsm_state7 = 154'd64;
parameter    ap_ST_fsm_state8 = 154'd128;
parameter    ap_ST_fsm_state9 = 154'd256;
parameter    ap_ST_fsm_state10 = 154'd512;
parameter    ap_ST_fsm_state11 = 154'd1024;
parameter    ap_ST_fsm_state12 = 154'd2048;
parameter    ap_ST_fsm_state13 = 154'd4096;
parameter    ap_ST_fsm_state14 = 154'd8192;
parameter    ap_ST_fsm_state15 = 154'd16384;
parameter    ap_ST_fsm_state16 = 154'd32768;
parameter    ap_ST_fsm_state17 = 154'd65536;
parameter    ap_ST_fsm_state18 = 154'd131072;
parameter    ap_ST_fsm_state19 = 154'd262144;
parameter    ap_ST_fsm_state20 = 154'd524288;
parameter    ap_ST_fsm_state21 = 154'd1048576;
parameter    ap_ST_fsm_state22 = 154'd2097152;
parameter    ap_ST_fsm_state23 = 154'd4194304;
parameter    ap_ST_fsm_state24 = 154'd8388608;
parameter    ap_ST_fsm_state25 = 154'd16777216;
parameter    ap_ST_fsm_state26 = 154'd33554432;
parameter    ap_ST_fsm_state27 = 154'd67108864;
parameter    ap_ST_fsm_state28 = 154'd134217728;
parameter    ap_ST_fsm_state29 = 154'd268435456;
parameter    ap_ST_fsm_state30 = 154'd536870912;
parameter    ap_ST_fsm_state31 = 154'd1073741824;
parameter    ap_ST_fsm_state32 = 154'd2147483648;
parameter    ap_ST_fsm_state33 = 154'd4294967296;
parameter    ap_ST_fsm_state34 = 154'd8589934592;
parameter    ap_ST_fsm_state35 = 154'd17179869184;
parameter    ap_ST_fsm_state36 = 154'd34359738368;
parameter    ap_ST_fsm_state37 = 154'd68719476736;
parameter    ap_ST_fsm_state38 = 154'd137438953472;
parameter    ap_ST_fsm_state39 = 154'd274877906944;
parameter    ap_ST_fsm_state40 = 154'd549755813888;
parameter    ap_ST_fsm_state41 = 154'd1099511627776;
parameter    ap_ST_fsm_state42 = 154'd2199023255552;
parameter    ap_ST_fsm_state43 = 154'd4398046511104;
parameter    ap_ST_fsm_state44 = 154'd8796093022208;
parameter    ap_ST_fsm_state45 = 154'd17592186044416;
parameter    ap_ST_fsm_state46 = 154'd35184372088832;
parameter    ap_ST_fsm_state47 = 154'd70368744177664;
parameter    ap_ST_fsm_state48 = 154'd140737488355328;
parameter    ap_ST_fsm_state49 = 154'd281474976710656;
parameter    ap_ST_fsm_state50 = 154'd562949953421312;
parameter    ap_ST_fsm_state51 = 154'd1125899906842624;
parameter    ap_ST_fsm_state52 = 154'd2251799813685248;
parameter    ap_ST_fsm_state53 = 154'd4503599627370496;
parameter    ap_ST_fsm_state54 = 154'd9007199254740992;
parameter    ap_ST_fsm_state55 = 154'd18014398509481984;
parameter    ap_ST_fsm_state56 = 154'd36028797018963968;
parameter    ap_ST_fsm_state57 = 154'd72057594037927936;
parameter    ap_ST_fsm_state58 = 154'd144115188075855872;
parameter    ap_ST_fsm_state59 = 154'd288230376151711744;
parameter    ap_ST_fsm_state60 = 154'd576460752303423488;
parameter    ap_ST_fsm_state61 = 154'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 154'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 154'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 154'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 154'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 154'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 154'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 154'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 154'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 154'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 154'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 154'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 154'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 154'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 154'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 154'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 154'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 154'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 154'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 154'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 154'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 154'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 154'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 154'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 154'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 154'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 154'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 154'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 154'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 154'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 154'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 154'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 154'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 154'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 154'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 154'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 154'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 154'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 154'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 154'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 154'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 154'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 154'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 154'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 154'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 154'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 154'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 154'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 154'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 154'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 154'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 154'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 154'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 154'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 154'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 154'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 154'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 154'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 154'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 154'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 154'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 154'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 154'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 154'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 154'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 154'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 154'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 154'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 154'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 154'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 154'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 154'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 154'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 154'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 154'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 154'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 154'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 154'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 154'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 154'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 154'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 154'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 154'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 154'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 154'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 154'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 154'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 154'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 154'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 154'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 154'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 154'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 154'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 154'd11417981541647679048466287755595961091061972992;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [0:0] C_array_address0;
output   C_array_ce0;
output   C_array_we0;
output  [31:0] C_array_d0;
input  [31:0] C_array_q0;
output  [0:0] C_array1_address0;
output   C_array1_ce0;
output   C_array1_we0;
output  [31:0] C_array1_d0;
input  [31:0] C_array1_q0;
output  [0:0] C_array2_address0;
output   C_array2_ce0;
output   C_array2_we0;
output  [31:0] C_array2_d0;
input  [31:0] C_array2_q0;
output  [0:0] C_array3_address0;
output   C_array3_ce0;
output   C_array3_we0;
output  [31:0] C_array3_d0;
input  [31:0] C_array3_q0;
output  [0:0] C_array4_address0;
output   C_array4_ce0;
output   C_array4_we0;
output  [31:0] C_array4_d0;
input  [31:0] C_array4_q0;
output  [0:0] C_array5_address0;
output   C_array5_ce0;
output   C_array5_we0;
output  [31:0] C_array5_d0;
input  [31:0] C_array5_q0;
output  [0:0] C_array6_address0;
output   C_array6_ce0;
output   C_array6_we0;
output  [31:0] C_array6_d0;
input  [31:0] C_array6_q0;
output  [0:0] C_array7_address0;
output   C_array7_ce0;
output   C_array7_we0;
output  [31:0] C_array7_d0;
input  [31:0] C_array7_q0;
output  [1:0] A_array_address0;
output   A_array_ce0;
input  [31:0] A_array_q0;
output  [1:0] A_array8_address0;
output   A_array8_ce0;
input  [31:0] A_array8_q0;
output  [1:0] A_array9_address0;
output   A_array9_ce0;
input  [31:0] A_array9_q0;
output  [1:0] A_array10_address0;
output   A_array10_ce0;
input  [31:0] A_array10_q0;
output  [1:0] A_array11_address0;
output   A_array11_ce0;
input  [31:0] A_array11_q0;
output  [1:0] A_array12_address0;
output   A_array12_ce0;
input  [31:0] A_array12_q0;
output  [1:0] A_array13_address0;
output   A_array13_ce0;
input  [31:0] A_array13_q0;
output  [1:0] A_array14_address0;
output   A_array14_ce0;
input  [31:0] A_array14_q0;
input  [63:0] A_dim;
input  [63:0] A_numel_read;
input  [63:0] B_dim;
input  [63:0] B_numel_read;
input  [63:0] p_read2;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[0:0] C_array_address0;
reg C_array_ce0;
reg C_array_we0;
reg[31:0] C_array_d0;
reg[0:0] C_array1_address0;
reg C_array1_ce0;
reg C_array1_we0;
reg[31:0] C_array1_d0;
reg[0:0] C_array2_address0;
reg C_array2_ce0;
reg C_array2_we0;
reg[31:0] C_array2_d0;
reg[0:0] C_array3_address0;
reg C_array3_ce0;
reg C_array3_we0;
reg[31:0] C_array3_d0;
reg[0:0] C_array4_address0;
reg C_array4_ce0;
reg C_array4_we0;
reg[31:0] C_array4_d0;
reg[0:0] C_array5_address0;
reg C_array5_ce0;
reg C_array5_we0;
reg[31:0] C_array5_d0;
reg[0:0] C_array6_address0;
reg C_array6_ce0;
reg C_array6_we0;
reg[31:0] C_array6_d0;
reg[0:0] C_array7_address0;
reg C_array7_ce0;
reg C_array7_we0;
reg[31:0] C_array7_d0;
reg A_array_ce0;
reg A_array8_ce0;
reg A_array9_ce0;
reg A_array10_ce0;
reg A_array11_ce0;
reg A_array12_ce0;
reg A_array13_ce0;
reg A_array14_ce0;

(* fsm_encoding = "none" *) reg   [153:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [2:0] dense_14_output_shap_address0;
reg    dense_14_output_shap_ce0;
wire   [63:0] dense_14_output_shap_q0;
reg   [2:0] dense_15_kernel_shap_address0;
reg    dense_15_kernel_shap_ce0;
wire   [63:0] dense_15_kernel_shap_q0;
reg   [9:0] dense_15_fwork_address0;
reg    dense_15_fwork_ce0;
reg    dense_15_fwork_we0;
reg   [31:0] dense_15_fwork_d0;
wire   [31:0] dense_15_fwork_q0;
wire   [9:0] dense_15_fwork_address1;
reg    dense_15_fwork_ce1;
wire   [31:0] dense_15_fwork_q1;
wire   [5:0] dense_15_kernel_arra_address0;
reg    dense_15_kernel_arra_ce0;
wire   [31:0] dense_15_kernel_arra_q0;
wire   [5:0] dense_15_kernel_arra_7_address0;
reg    dense_15_kernel_arra_7_ce0;
wire   [31:0] dense_15_kernel_arra_7_q0;
wire   [5:0] dense_15_kernel_arra_6_address0;
reg    dense_15_kernel_arra_6_ce0;
wire   [31:0] dense_15_kernel_arra_6_q0;
wire   [5:0] dense_15_kernel_arra_5_address0;
reg    dense_15_kernel_arra_5_ce0;
wire   [31:0] dense_15_kernel_arra_5_q0;
wire   [5:0] dense_15_kernel_arra_4_address0;
reg    dense_15_kernel_arra_4_ce0;
wire   [31:0] dense_15_kernel_arra_4_q0;
wire   [5:0] dense_15_kernel_arra_3_address0;
reg    dense_15_kernel_arra_3_ce0;
wire   [31:0] dense_15_kernel_arra_3_q0;
wire   [5:0] dense_15_kernel_arra_2_address0;
reg    dense_15_kernel_arra_2_ce0;
wire   [31:0] dense_15_kernel_arra_2_q0;
wire   [5:0] dense_15_kernel_arra_1_address0;
reg    dense_15_kernel_arra_1_ce0;
wire   [31:0] dense_15_kernel_arra_1_q0;
reg   [63:0] reg_1237;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state87;
wire   [63:0] permA_q1;
reg   [63:0] reg_1242;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state89;
wire   [63:0] permB_q0;
reg   [63:0] reg_1248;
wire    ap_CS_fsm_state94;
wire    ap_CS_fsm_state98;
wire   [63:0] i_12_s_fu_1271_p2;
reg   [63:0] i_12_s_reg_2089;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond1_fu_1254_p2;
wire   [0:0] tmp_1_fu_1282_p2;
reg   [0:0] tmp_1_reg_2098;
wire    ap_CS_fsm_state3;
wire   [63:0] count_4_1_fu_1286_p2;
wire    ap_CS_fsm_state4;
wire   [63:0] i_12_1_fu_1292_p2;
reg   [63:0] i_12_1_reg_2107;
wire   [63:0] count_3_cast_fu_1321_p1;
reg   [63:0] count_3_cast_reg_2118;
wire    ap_CS_fsm_state6;
wire   [0:0] exitcond2_fu_1298_p2;
wire   [63:0] i_15_s_fu_1325_p2;
reg   [63:0] i_15_s_reg_2123;
wire   [63:0] i_15_1_fu_1336_p2;
reg   [63:0] i_15_1_reg_2131;
wire   [0:0] exitcond2_1_fu_1331_p2;
wire   [2:0] count_5_1_fu_1342_p2;
wire    ap_CS_fsm_state7;
wire  signed [10:0] tmp_30_fu_1348_p1;
reg  signed [10:0] tmp_30_reg_2146;
wire   [6:0] tmp_31_fu_1352_p1;
reg   [6:0] tmp_31_reg_2151;
wire  signed [63:0] grp_fu_1356_p2;
reg  signed [63:0] free_axesA_reg_2156;
wire    ap_CS_fsm_state76;
wire   [58:0] free_axesB_fu_1361_p4;
reg   [58:0] free_axesB_reg_2162;
wire   [63:0] free_axesB_2_fu_1370_p1;
reg   [63:0] free_axesB_2_reg_2167;
reg  signed [10:0] free_axesB_cast4_reg_2173;
wire   [63:0] i_15_fu_1386_p2;
reg   [63:0] i_15_reg_2178;
wire   [2:0] i_15_cast_fu_1391_p2;
reg   [2:0] i_15_cast_reg_2184;
wire   [63:0] i_4_cast_fu_1397_p1;
reg   [63:0] i_4_cast_reg_2189;
wire    ap_CS_fsm_state77;
wire   [0:0] exitcond8_fu_1402_p2;
reg   [0:0] exitcond8_reg_2194;
wire   [63:0] i_18_cast_fu_1413_p1;
reg   [63:0] i_18_cast_reg_2203;
wire    ap_CS_fsm_state78;
wire   [0:0] exitcond8_1_fu_1418_p2;
wire   [2:0] i_18_1_fu_1423_p2;
reg   [2:0] i_18_1_reg_2216;
wire   [2:0] i_19_1_fu_1455_p2;
wire    ap_CS_fsm_state80;
wire   [0:0] tmp_2_fu_1434_p2;
wire   [0:0] tmp_2_1_fu_1450_p2;
wire   [63:0] i_7_cast_fu_1461_p1;
reg   [63:0] i_7_cast_reg_2232;
wire    ap_CS_fsm_state81;
wire   [0:0] tmp_3_fu_1465_p2;
reg   [0:0] tmp_3_reg_2237;
wire   [63:0] i_21_cast_fu_1476_p1;
reg   [63:0] i_21_cast_reg_2246;
wire    ap_CS_fsm_state82;
wire   [0:0] tmp_3_1_fu_1495_p2;
wire   [2:0] i_21_1_fu_1500_p2;
reg   [2:0] i_21_1_reg_2259;
wire   [63:0] j_9_1_fu_1506_p2;
reg   [63:0] j_9_1_reg_2264;
wire   [63:0] i_8_cast_fu_1512_p1;
reg   [63:0] i_8_cast_reg_2269;
wire    ap_CS_fsm_state84;
wire   [0:0] exitcond13_fu_1517_p2;
reg   [0:0] exitcond13_reg_2274;
wire    ap_CS_fsm_state86;
wire   [63:0] i_22_cast_fu_1528_p1;
reg   [63:0] i_22_cast_reg_2288;
wire    ap_CS_fsm_state88;
wire   [0:0] exitcond13_1_fu_1533_p2;
wire   [2:0] i_22_1_fu_1538_p2;
reg   [2:0] i_22_1_reg_2301;
wire   [2:0] dense_14_output_shap_5_gep_fu_370_p3;
wire    ap_CS_fsm_state90;
reg   [63:0] dense_14_output_shap_6_reg_2311;
wire    ap_CS_fsm_state91;
wire   [63:0] i_9_cast_fu_1544_p1;
reg   [63:0] i_9_cast_reg_2316;
wire    ap_CS_fsm_state93;
wire   [0:0] exitcond12_fu_1549_p2;
reg   [0:0] exitcond12_reg_2321;
wire    ap_CS_fsm_state95;
reg   [63:0] dense_15_kernel_shap_2_reg_2335;
wire    ap_CS_fsm_state96;
wire   [63:0] i_23_cast_fu_1560_p1;
reg   [63:0] i_23_cast_reg_2340;
wire    ap_CS_fsm_state97;
wire   [0:0] exitcond12_1_fu_1565_p2;
wire   [2:0] i_23_1_fu_1570_p2;
reg   [2:0] i_23_1_reg_2353;
wire   [2:0] dense_15_kernel_shap_3_gep_fu_424_p3;
wire    ap_CS_fsm_state99;
reg   [63:0] dense_15_kernel_shap_4_reg_2363;
wire    ap_CS_fsm_state100;
wire   [63:0] i_16_fu_1581_p2;
reg   [63:0] i_16_reg_2371;
wire    ap_CS_fsm_state102;
wire   [10:0] tmp_34_fu_1587_p1;
reg   [10:0] tmp_34_reg_2376;
wire   [0:0] exitcond6_fu_1576_p2;
wire   [63:0] j_4_cast_fu_1590_p1;
reg   [63:0] j_4_cast_reg_2382;
wire    ap_CS_fsm_state104;
wire   [0:0] exitcond11_fu_1595_p2;
reg   [0:0] exitcond11_reg_2387;
wire    ap_CS_fsm_state105;
wire   [63:0] j_10_cast_fu_1606_p1;
reg   [63:0] j_10_cast_reg_2401;
wire    ap_CS_fsm_state106;
wire   [0:0] exitcond11_1_fu_1611_p2;
wire   [2:0] j_10_1_fu_1616_p2;
reg   [2:0] j_10_1_reg_2414;
wire   [2:0] tmp_35_fu_1622_p1;
reg   [2:0] tmp_35_reg_2419;
wire    ap_CS_fsm_state107;
wire   [31:0] tmp_18_fu_1651_p10;
reg   [31:0] tmp_18_reg_2469;
wire    ap_CS_fsm_state109;
wire   [63:0] i_17_fu_1678_p2;
reg   [63:0] i_17_reg_2477;
wire    ap_CS_fsm_state111;
wire   [63:0] j_5_cast_fu_1688_p1;
reg   [63:0] j_5_cast_reg_2482;
wire    ap_CS_fsm_state113;
wire   [0:0] exitcond10_fu_1693_p2;
reg   [0:0] exitcond10_reg_2487;
wire    ap_CS_fsm_state114;
wire   [63:0] j_11_cast_fu_1704_p1;
reg   [63:0] j_11_cast_reg_2501;
wire    ap_CS_fsm_state115;
wire   [0:0] exitcond10_1_fu_1709_p2;
wire   [2:0] j_11_1_fu_1714_p2;
reg   [2:0] j_11_1_reg_2514;
wire   [2:0] tmp_39_fu_1720_p1;
reg   [2:0] tmp_39_reg_2519;
wire   [63:0] tmp_5_fu_1734_p1;
reg   [63:0] tmp_5_reg_2530;
wire   [2:0] Bsub_addr_6_gep_fu_706_p3;
wire    ap_CS_fsm_state116;
wire    ap_CS_fsm_state118;
wire   [31:0] sel_tmp7_i_fu_1787_p3;
reg   [31:0] sel_tmp7_i_reg_2582;
wire   [31:0] UnifiedRetVal_i_fu_1829_p3;
reg   [31:0] UnifiedRetVal_i_reg_2587;
wire    ap_CS_fsm_state119;
wire    grp_k2c_sub2idx_fu_1221_ap_idle;
wire    grp_k2c_sub2idx_fu_1221_ap_ready;
wire    grp_k2c_sub2idx_fu_1221_ap_done;
wire   [10:0] sum_fu_1837_p2;
reg   [10:0] sum_reg_2592;
wire   [63:0] grp_fu_1684_p2;
reg   [63:0] tmp_6_reg_2597;
wire    ap_CS_fsm_state125;
wire   [63:0] i_18_fu_1851_p2;
reg   [63:0] i_18_reg_2605;
wire    ap_CS_fsm_state126;
wire    ap_CS_fsm_state128;
wire   [63:0] i_20_fu_1892_p2;
reg   [63:0] i_20_reg_2621;
wire  signed [10:0] grp_fu_2020_p2;
reg  signed [10:0] inneridx_reg_2626;
wire    ap_CS_fsm_state130;
wire   [63:0] grp_fu_1898_p2;
reg   [63:0] outrowidx_reg_2631;
wire    ap_CS_fsm_state133;
wire   [10:0] k_cast3_fu_1903_p1;
wire    ap_CS_fsm_state134;
wire   [5:0] k_1_fu_1916_p2;
reg   [5:0] k_1_reg_2644;
reg   [9:0] dense_15_fwork_addr_2_reg_2649;
wire   [0:0] exitcond_fu_1911_p2;
wire  signed [10:0] grp_fu_2025_p2;
reg  signed [10:0] tmp_10_reg_2654;
wire    ap_CS_fsm_state136;
wire   [58:0] j_fu_1945_p2;
reg   [58:0] j_reg_2662;
wire    ap_CS_fsm_state137;
(* use_dsp48 = "no" *) wire   [10:0] sum5_fu_1956_p2;
reg   [10:0] sum5_reg_2667;
wire   [0:0] exitcond3_fu_1940_p2;
wire   [2:0] tmp_41_fu_1966_p1;
reg   [2:0] tmp_41_reg_2672;
reg   [2:0] newIndex_reg_2677;
wire    ap_CS_fsm_state138;
reg   [31:0] dense_15_fwork_load_reg_2687;
wire    ap_CS_fsm_state139;
reg   [31:0] dense_15_fwork_load_1_reg_2692;
reg   [0:0] C_array_addr_2_reg_2697;
wire    ap_CS_fsm_state143;
reg   [0:0] C_array1_addr_1_reg_2702;
reg   [0:0] C_array2_addr_1_reg_2707;
reg   [0:0] C_array3_addr_1_reg_2712;
reg   [0:0] C_array4_addr_1_reg_2717;
reg   [0:0] C_array5_addr_1_reg_2722;
reg   [0:0] C_array6_addr_1_reg_2727;
reg   [0:0] C_array7_addr_1_reg_2732;
wire   [31:0] grp_fu_1233_p2;
reg   [31:0] tmp_12_reg_2737;
wire    ap_CS_fsm_state144;
wire   [31:0] tmp_19_fu_1998_p10;
reg   [31:0] tmp_19_reg_2742;
wire   [31:0] grp_fu_1229_p2;
reg   [31:0] tmp_13_reg_2747;
wire    ap_CS_fsm_state153;
reg   [2:0] permA_address0;
reg    permA_ce0;
reg    permA_we0;
reg   [63:0] permA_d0;
wire   [63:0] permA_q0;
reg   [2:0] permA_address1;
reg    permA_ce1;
reg    permA_we1;
reg   [2:0] permB_address0;
reg    permB_ce0;
reg    permB_we0;
reg   [63:0] permB_d0;
reg   [2:0] freeA_address0;
reg    freeA_ce0;
reg    freeA_we0;
reg   [63:0] freeA_d0;
wire   [63:0] freeA_q0;
reg   [2:0] freeB_address0;
reg    freeB_ce0;
reg    freeB_we0;
reg   [63:0] freeB_d0;
wire   [63:0] freeB_q0;
reg   [2:0] newshpA_address0;
reg    newshpA_ce0;
reg    newshpA_we0;
reg   [63:0] newshpA_d0;
wire   [63:0] newshpA_q0;
reg   [2:0] newshpB_address0;
reg    newshpB_ce0;
reg    newshpB_we0;
reg   [63:0] newshpB_d0;
wire   [63:0] newshpB_q0;
reg   [2:0] Asub_address0;
reg    Asub_ce0;
reg    Asub_we0;
reg   [63:0] Asub_d0;
wire   [63:0] Asub_q0;
reg   [2:0] Bsub_address0;
reg    Bsub_ce0;
reg    Bsub_we0;
reg   [63:0] Bsub_d0;
wire   [63:0] Bsub_q0;
wire    grp_k2c_idx2sub_fu_1209_ap_start;
wire    grp_k2c_idx2sub_fu_1209_ap_done;
wire    grp_k2c_idx2sub_fu_1209_ap_idle;
wire    grp_k2c_idx2sub_fu_1209_ap_ready;
reg   [63:0] grp_k2c_idx2sub_fu_1209_idx;
wire   [2:0] grp_k2c_idx2sub_fu_1209_sub_address0;
wire    grp_k2c_idx2sub_fu_1209_sub_ce0;
wire    grp_k2c_idx2sub_fu_1209_sub_we0;
wire   [63:0] grp_k2c_idx2sub_fu_1209_sub_d0;
wire   [2:0] grp_k2c_idx2sub_fu_1209_shape_address0;
wire    grp_k2c_idx2sub_fu_1209_shape_ce0;
reg   [63:0] grp_k2c_idx2sub_fu_1209_shape_q0;
reg   [63:0] grp_k2c_idx2sub_fu_1209_ndim;
wire    grp_k2c_sub2idx_fu_1221_ap_start;
wire   [2:0] grp_k2c_sub2idx_fu_1221_sub_address0;
wire    grp_k2c_sub2idx_fu_1221_sub_ce0;
reg   [63:0] grp_k2c_sub2idx_fu_1221_sub_q0;
wire   [2:0] grp_k2c_sub2idx_fu_1221_shape_address0;
wire    grp_k2c_sub2idx_fu_1221_shape_ce0;
reg   [63:0] grp_k2c_sub2idx_fu_1221_shape_q0;
reg   [63:0] grp_k2c_sub2idx_fu_1221_ndim;
wire   [63:0] grp_k2c_sub2idx_fu_1221_ap_return;
reg   [63:0] count_reg_963;
wire    ap_CS_fsm_state5;
reg   [63:0] i_reg_975;
wire   [63:0] count_4_fu_1264_p2;
reg   [63:0] count_1_reg_988;
wire   [0:0] tmp_s_fu_1259_p2;
reg   [63:0] count_1_1_reg_1000;
reg   [2:0] count_2_reg_1012;
wire   [0:0] exitcond1_1_fu_1277_p2;
reg   [63:0] i_1_reg_1023;
wire   [2:0] count_5_fu_1314_p2;
reg   [2:0] ap_phi_mux_count_3_phi_fu_1038_p4;
reg   [2:0] count_3_reg_1035;
wire   [0:0] tmp_fu_1303_p2;
reg   [2:0] i_4_reg_1046;
wire    ap_CS_fsm_state79;
reg   [2:0] i_5_reg_1058;
reg   [2:0] i_7_reg_1067;
wire    ap_CS_fsm_state83;
reg   [63:0] j_3_reg_1079;
reg   [2:0] i_8_reg_1092;
wire    ap_CS_fsm_state92;
reg   [2:0] i_9_reg_1104;
wire    ap_CS_fsm_state101;
reg   [63:0] i_s_reg_1116;
wire    ap_CS_fsm_state110;
reg   [2:0] j_4_reg_1128;
wire    ap_CS_fsm_state103;
wire    ap_CS_fsm_state108;
reg   [63:0] i_10_reg_1140;
wire    ap_CS_fsm_state120;
reg   [2:0] j_5_reg_1152;
wire    ap_CS_fsm_state112;
wire    ap_CS_fsm_state117;
reg   [63:0] i_11_reg_1164;
wire    ap_CS_fsm_state127;
reg  signed [63:0] i_14_reg_1175;
wire   [0:0] exitcond5_fu_1846_p2;
reg   [5:0] k_reg_1187;
reg   [58:0] j_s_reg_1198;
wire    ap_CS_fsm_state154;
reg    grp_k2c_idx2sub_fu_1209_ap_start_reg;
wire   [0:0] exitcond7_fu_1673_p2;
reg    grp_k2c_sub2idx_fu_1221_ap_start_reg;
wire   [63:0] count_2_cast4_fu_1309_p1;
wire   [63:0] i_5_cast_fu_1429_p1;
wire   [63:0] i_19_cast_fu_1445_p1;
wire   [63:0] j_9_cast_fu_1490_p1;
wire   [63:0] newIndex3_cast_fu_1636_p1;
wire   [63:0] sum_cast_fu_1842_p1;
wire   [63:0] newIndex2_cast_fu_1871_p1;
wire   [63:0] sum4_cast_fu_1927_p1;
wire   [63:0] sum5_cast_fu_1980_p1;
wire   [63:0] newIndex_cast_fu_1984_p1;
wire   [2:0] tmp_36_fu_1857_p1;
wire    ap_CS_fsm_state145;
wire    ap_CS_fsm_state140;
wire   [7:0] grp_fu_1356_p1;
wire    ap_CS_fsm_state9;
wire   [2:0] tmp_32_fu_1383_p1;
wire   [2:0] i_18_s_fu_1407_p2;
wire   [2:0] i_19_fu_1439_p2;
wire   [2:0] i_21_fu_1470_p2;
wire   [3:0] tmp_33_fu_1480_p1;
wire   [3:0] j_9_s_fu_1484_p2;
wire   [2:0] i_22_s_fu_1522_p2;
wire   [2:0] i_23_s_fu_1554_p2;
wire   [2:0] j_10_s_fu_1600_p2;
wire   [3:0] newIndex3_fu_1626_p4;
wire   [63:0] tmp_18_fu_1651_p9;
wire   [58:0] grp_fu_1684_p0;
wire   [2:0] j_11_s_fu_1698_p2;
wire   [60:0] newIndex4_fu_1724_p4;
wire   [0:0] sel_tmp_i_fu_1743_p2;
wire   [0:0] sel_tmp2_i_fu_1756_p2;
wire   [31:0] sel_tmp1_i_fu_1748_p3;
wire   [0:0] sel_tmp4_i_fu_1769_p2;
wire   [31:0] sel_tmp3_i_fu_1761_p3;
wire   [0:0] sel_tmp6_i_fu_1782_p2;
wire   [31:0] sel_tmp5_i_fu_1774_p3;
wire   [0:0] sel_tmp8_i_fu_1799_p2;
wire   [0:0] sel_tmp10_i_fu_1811_p2;
wire   [31:0] sel_tmp9_i_fu_1804_p3;
wire   [0:0] sel_tmp12_i_fu_1824_p2;
wire   [31:0] sel_tmp11_i_fu_1816_p3;
wire   [10:0] tmp_38_fu_1795_p1;
wire   [2:0] newIndex2_fu_1861_p4;
wire   [58:0] grp_fu_1898_p1;
wire   [6:0] k_cast_fu_1907_p1;
(* use_dsp48 = "no" *) wire   [10:0] sum4_fu_1922_p2;
wire   [10:0] tmp_40_fu_1932_p1;
wire   [10:0] tmp1_fu_1951_p2;
wire   [63:0] j_cast_fu_1936_p1;
wire   [63:0] sum2_fu_1961_p2;
wire   [63:0] tmp_19_fu_1998_p9;
wire  signed [10:0] grp_fu_2020_p1;
wire   [5:0] grp_fu_2025_p0;
reg    grp_fu_1356_ap_start;
wire    grp_fu_1356_ap_done;
wire   [0:0] tmp_7_fu_1887_p2;
reg   [153:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 154'd1;
#0 grp_k2c_idx2sub_fu_1209_ap_start_reg = 1'b0;
#0 grp_k2c_sub2idx_fu_1221_ap_start_reg = 1'b0;
end

k2c_dot_2_dense_17jG #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dense_14_output_shap_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_14_output_shap_address0),
    .ce0(dense_14_output_shap_ce0),
    .q0(dense_14_output_shap_q0)
);

k2c_dot_2_dense_18jQ #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dense_15_kernel_shap_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_15_kernel_shap_address0),
    .ce0(dense_15_kernel_shap_ce0),
    .q0(dense_15_kernel_shap_q0)
);

k2c_dot_2_dense_19j0 #(
    .DataWidth( 32 ),
    .AddressRange( 544 ),
    .AddressWidth( 10 ))
dense_15_fwork_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_15_fwork_address0),
    .ce0(dense_15_fwork_ce0),
    .we0(dense_15_fwork_we0),
    .d0(dense_15_fwork_d0),
    .q0(dense_15_fwork_q0),
    .address1(dense_15_fwork_address1),
    .ce1(dense_15_fwork_ce1),
    .q1(dense_15_fwork_q1)
);

k2c_dot_2_dense_1bak #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
dense_15_kernel_arra_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_15_kernel_arra_address0),
    .ce0(dense_15_kernel_arra_ce0),
    .q0(dense_15_kernel_arra_q0)
);

k2c_dot_2_dense_1bbk #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
dense_15_kernel_arra_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_15_kernel_arra_7_address0),
    .ce0(dense_15_kernel_arra_7_ce0),
    .q0(dense_15_kernel_arra_7_q0)
);

k2c_dot_2_dense_1bck #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
dense_15_kernel_arra_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_15_kernel_arra_6_address0),
    .ce0(dense_15_kernel_arra_6_ce0),
    .q0(dense_15_kernel_arra_6_q0)
);

k2c_dot_2_dense_1bdk #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
dense_15_kernel_arra_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_15_kernel_arra_5_address0),
    .ce0(dense_15_kernel_arra_5_ce0),
    .q0(dense_15_kernel_arra_5_q0)
);

k2c_dot_2_dense_1bek #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
dense_15_kernel_arra_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_15_kernel_arra_4_address0),
    .ce0(dense_15_kernel_arra_4_ce0),
    .q0(dense_15_kernel_arra_4_q0)
);

k2c_dot_2_dense_1bfk #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
dense_15_kernel_arra_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_15_kernel_arra_3_address0),
    .ce0(dense_15_kernel_arra_3_ce0),
    .q0(dense_15_kernel_arra_3_q0)
);

k2c_dot_2_dense_1bgk #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
dense_15_kernel_arra_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_15_kernel_arra_2_address0),
    .ce0(dense_15_kernel_arra_2_ce0),
    .q0(dense_15_kernel_arra_2_q0)
);

k2c_dot_2_dense_1bhl #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
dense_15_kernel_arra_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_15_kernel_arra_1_address0),
    .ce0(dense_15_kernel_arra_1_ce0),
    .q0(dense_15_kernel_arra_1_q0)
);

k2c_dot_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
permA_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(permA_address0),
    .ce0(permA_ce0),
    .we0(permA_we0),
    .d0(permA_d0),
    .q0(permA_q0),
    .address1(permA_address1),
    .ce1(permA_ce1),
    .we1(permA_we1),
    .d1(p_read2),
    .q1(permA_q1)
);

k2c_dot_permB #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
permB_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(permB_address0),
    .ce0(permB_ce0),
    .we0(permB_we0),
    .d0(permB_d0),
    .q0(permB_q0)
);

k2c_dot_permB #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
freeA_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(freeA_address0),
    .ce0(freeA_ce0),
    .we0(freeA_we0),
    .d0(freeA_d0),
    .q0(freeA_q0)
);

k2c_dot_permB #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
freeB_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(freeB_address0),
    .ce0(freeB_ce0),
    .we0(freeB_we0),
    .d0(freeB_d0),
    .q0(freeB_q0)
);

k2c_dot_permB #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
newshpA_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(newshpA_address0),
    .ce0(newshpA_ce0),
    .we0(newshpA_we0),
    .d0(newshpA_d0),
    .q0(newshpA_q0)
);

k2c_dot_permB #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
newshpB_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(newshpB_address0),
    .ce0(newshpB_ce0),
    .we0(newshpB_we0),
    .d0(newshpB_d0),
    .q0(newshpB_q0)
);

k2c_dot_permB #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
Asub_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Asub_address0),
    .ce0(Asub_ce0),
    .we0(Asub_we0),
    .d0(Asub_d0),
    .q0(Asub_q0)
);

k2c_dot_permB #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
Bsub_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Bsub_address0),
    .ce0(Bsub_ce0),
    .we0(Bsub_we0),
    .d0(Bsub_d0),
    .q0(Bsub_q0)
);

k2c_idx2sub grp_k2c_idx2sub_fu_1209(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_idx2sub_fu_1209_ap_start),
    .ap_done(grp_k2c_idx2sub_fu_1209_ap_done),
    .ap_idle(grp_k2c_idx2sub_fu_1209_ap_idle),
    .ap_ready(grp_k2c_idx2sub_fu_1209_ap_ready),
    .idx(grp_k2c_idx2sub_fu_1209_idx),
    .sub_address0(grp_k2c_idx2sub_fu_1209_sub_address0),
    .sub_ce0(grp_k2c_idx2sub_fu_1209_sub_ce0),
    .sub_we0(grp_k2c_idx2sub_fu_1209_sub_we0),
    .sub_d0(grp_k2c_idx2sub_fu_1209_sub_d0),
    .shape_address0(grp_k2c_idx2sub_fu_1209_shape_address0),
    .shape_ce0(grp_k2c_idx2sub_fu_1209_shape_ce0),
    .shape_q0(grp_k2c_idx2sub_fu_1209_shape_q0),
    .ndim(grp_k2c_idx2sub_fu_1209_ndim)
);

k2c_sub2idx grp_k2c_sub2idx_fu_1221(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_sub2idx_fu_1221_ap_start),
    .ap_done(grp_k2c_sub2idx_fu_1221_ap_done),
    .ap_idle(grp_k2c_sub2idx_fu_1221_ap_idle),
    .ap_ready(grp_k2c_sub2idx_fu_1221_ap_ready),
    .sub_address0(grp_k2c_sub2idx_fu_1221_sub_address0),
    .sub_ce0(grp_k2c_sub2idx_fu_1221_sub_ce0),
    .sub_q0(grp_k2c_sub2idx_fu_1221_sub_q0),
    .shape_address0(grp_k2c_sub2idx_fu_1221_shape_address0),
    .shape_ce0(grp_k2c_sub2idx_fu_1221_shape_ce0),
    .shape_q0(grp_k2c_sub2idx_fu_1221_shape_q0),
    .ndim(grp_k2c_sub2idx_fu_1221_ndim),
    .ap_return(grp_k2c_sub2idx_fu_1221_ap_return)
);

sample_fadd_32ns_ocq #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample_fadd_32ns_ocq_U295(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_19_reg_2742),
    .din1(tmp_12_reg_2737),
    .ce(1'b1),
    .dout(grp_fu_1229_p2)
);

sample_fmul_32ns_pcA #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample_fmul_32ns_pcA_U296(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(dense_15_fwork_load_reg_2687),
    .din1(dense_15_fwork_load_1_reg_2692),
    .ce(1'b1),
    .dout(grp_fu_1233_p2)
);

sample_udiv_64ns_bil #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 64 ))
sample_udiv_64ns_bil_U297(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1356_ap_start),
    .done(grp_fu_1356_ap_done),
    .din0(A_numel_read),
    .din1(grp_fu_1356_p1),
    .ce(1'b1),
    .dout(grp_fu_1356_p2)
);

sample_mux_864_32rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
sample_mux_864_32rcU_U298(
    .din0(A_array_q0),
    .din1(A_array8_q0),
    .din2(A_array9_q0),
    .din3(A_array10_q0),
    .din4(A_array11_q0),
    .din5(A_array12_q0),
    .din6(A_array13_q0),
    .din7(A_array14_q0),
    .din8(tmp_18_fu_1651_p9),
    .dout(tmp_18_fu_1651_p10)
);

sample_mul_59ns_6bjl #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 59 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sample_mul_59ns_6bjl_U299(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1684_p0),
    .din1(free_axesA_reg_2156),
    .ce(1'b1),
    .dout(grp_fu_1684_p2)
);

sample_mul_64s_59bkl #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 59 ),
    .dout_WIDTH( 64 ))
sample_mul_64s_59bkl_U300(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(i_14_reg_1175),
    .din1(grp_fu_1898_p1),
    .ce(1'b1),
    .dout(grp_fu_1898_p2)
);

sample_mux_864_32rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
sample_mux_864_32rcU_U301(
    .din0(C_array_q0),
    .din1(C_array1_q0),
    .din2(C_array2_q0),
    .din3(C_array3_q0),
    .din4(C_array4_q0),
    .din5(C_array5_q0),
    .din6(C_array6_q0),
    .din7(C_array7_q0),
    .din8(tmp_19_fu_1998_p9),
    .dout(tmp_19_fu_1998_p10)
);

sample_mul_mul_11bll #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
sample_mul_mul_11bll_U302(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_30_reg_2146),
    .din1(grp_fu_2020_p1),
    .ce(1'b1),
    .dout(grp_fu_2020_p2)
);

sample_mul_mul_6nbml #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
sample_mul_mul_6nbml_U303(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2025_p0),
    .din1(free_axesB_cast4_reg_2173),
    .ce(1'b1),
    .dout(grp_fu_2025_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_idx2sub_fu_1209_ap_start_reg <= 1'b0;
    end else begin
        if ((((exitcond7_fu_1673_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state111)) | ((exitcond6_fu_1576_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state102)))) begin
            grp_k2c_idx2sub_fu_1209_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_idx2sub_fu_1209_ap_ready == 1'b1)) begin
            grp_k2c_idx2sub_fu_1209_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_sub2idx_fu_1221_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state109))) begin
            grp_k2c_sub2idx_fu_1221_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_sub2idx_fu_1221_ap_ready == 1'b1)) begin
            grp_k2c_sub2idx_fu_1221_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_1282_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        count_1_1_reg_1000 <= count_1_reg_988;
    end else if (((tmp_1_reg_2098 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        count_1_1_reg_1000 <= count_4_1_fu_1286_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1254_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        if ((tmp_s_fu_1259_p2 == 1'd1)) begin
            count_1_reg_988 <= count_reg_963;
        end else if ((tmp_s_fu_1259_p2 == 1'd0)) begin
            count_1_reg_988 <= count_4_fu_1264_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & ((exitcond1_1_fu_1277_p2 == 1'd1) | (exitcond1_fu_1254_p2 == 1'd1)))) begin
        count_2_reg_1012 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        count_2_reg_1012 <= count_5_1_fu_1342_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_1298_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        if ((tmp_fu_1303_p2 == 1'd1)) begin
            count_3_reg_1035 <= count_2_reg_1012;
        end else if ((tmp_fu_1303_p2 == 1'd0)) begin
            count_3_reg_1035 <= count_5_fu_1314_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        count_reg_963 <= count_1_1_reg_1000;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        count_reg_963 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_1576_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state102))) begin
        i_10_reg_1140 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        i_10_reg_1140 <= i_17_reg_2477;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        i_11_reg_1164 <= i_18_reg_2605;
    end else if ((1'b1 == ap_CS_fsm_state125)) begin
        i_11_reg_1164 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_1846_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state126))) begin
        i_14_reg_1175 <= 64'd0;
    end else if (((exitcond_fu_1911_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state134))) begin
        i_14_reg_1175 <= i_20_reg_2621;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & ((exitcond1_1_fu_1277_p2 == 1'd1) | (exitcond1_fu_1254_p2 == 1'd1)))) begin
        i_1_reg_1023 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i_1_reg_1023 <= i_15_1_reg_2131;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        i_4_reg_1046 <= i_18_1_reg_2216;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        i_4_reg_1046 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state78) & ((exitcond8_1_fu_1418_p2 == 1'd1) | (exitcond8_reg_2194 == 1'd1)))) begin
        i_5_reg_1058 <= i_15_cast_reg_2184;
    end else if (((tmp_2_1_fu_1450_p2 == 1'd1) & (tmp_2_fu_1434_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
        i_5_reg_1058 <= i_19_1_fu_1455_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & ((tmp_2_1_fu_1450_p2 == 1'd0) | (tmp_2_fu_1434_p2 == 1'd0)))) begin
        i_7_reg_1067 <= 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        i_7_reg_1067 <= i_21_1_reg_2259;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) & ((tmp_3_1_fu_1495_p2 == 1'd0) | (tmp_3_reg_2237 == 1'd0)))) begin
        i_8_reg_1092 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        i_8_reg_1092 <= i_22_1_reg_2301;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state88) & ((exitcond13_1_fu_1533_p2 == 1'd1) | (exitcond13_reg_2274 == 1'd1)))) begin
        i_9_reg_1104 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        i_9_reg_1104 <= i_23_1_reg_2353;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_reg_975 <= i_12_1_reg_2107;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_975 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state97) & ((exitcond12_1_fu_1565_p2 == 1'd1) | (exitcond12_reg_2321 == 1'd1)))) begin
        i_s_reg_1116 <= 64'd0;
    end else if (((grp_k2c_sub2idx_fu_1221_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state110))) begin
        i_s_reg_1116 <= i_16_reg_2371;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & ((tmp_2_1_fu_1450_p2 == 1'd0) | (tmp_2_fu_1434_p2 == 1'd0)))) begin
        j_3_reg_1079 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        j_3_reg_1079 <= j_9_1_reg_2264;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        j_4_reg_1128 <= j_10_1_reg_2414;
    end else if (((1'b1 == ap_CS_fsm_state103) & (grp_k2c_idx2sub_fu_1209_ap_done == 1'b1))) begin
        j_4_reg_1128 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        j_5_reg_1152 <= j_11_1_reg_2514;
    end else if (((1'b1 == ap_CS_fsm_state112) & (grp_k2c_idx2sub_fu_1209_ap_done == 1'b1))) begin
        j_5_reg_1152 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        j_s_reg_1198 <= 59'd0;
    end else if ((1'b1 == ap_CS_fsm_state154)) begin
        j_s_reg_1198 <= j_reg_2662;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_1940_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state137))) begin
        k_reg_1187 <= k_1_reg_2644;
    end else if ((1'b1 == ap_CS_fsm_state133)) begin
        k_reg_1187 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state143)) begin
        C_array1_addr_1_reg_2702 <= newIndex_cast_fu_1984_p1;
        C_array2_addr_1_reg_2707 <= newIndex_cast_fu_1984_p1;
        C_array3_addr_1_reg_2712 <= newIndex_cast_fu_1984_p1;
        C_array4_addr_1_reg_2717 <= newIndex_cast_fu_1984_p1;
        C_array5_addr_1_reg_2722 <= newIndex_cast_fu_1984_p1;
        C_array6_addr_1_reg_2727 <= newIndex_cast_fu_1984_p1;
        C_array7_addr_1_reg_2732 <= newIndex_cast_fu_1984_p1;
        C_array_addr_2_reg_2697 <= newIndex_cast_fu_1984_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_k2c_sub2idx_fu_1221_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state119))) begin
        UnifiedRetVal_i_reg_2587 <= UnifiedRetVal_i_fu_1829_p3;
        sum_reg_2592 <= sum_fu_1837_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_1298_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        count_3_cast_reg_2118[2 : 0] <= count_3_cast_fu_1321_p1[2 : 0];
        i_15_s_reg_2123[63 : 1] <= i_15_s_fu_1325_p2[63 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        dense_14_output_shap_6_reg_2311 <= dense_14_output_shap_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_1911_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state134))) begin
        dense_15_fwork_addr_2_reg_2649 <= sum4_cast_fu_1927_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        dense_15_fwork_load_1_reg_2692 <= dense_15_fwork_q1;
        dense_15_fwork_load_reg_2687 <= dense_15_fwork_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        dense_15_kernel_shap_2_reg_2335 <= dense_15_kernel_shap_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        dense_15_kernel_shap_4_reg_2363 <= dense_15_kernel_shap_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        exitcond10_reg_2487 <= exitcond10_fu_1693_p2;
        j_5_cast_reg_2482[2 : 0] <= j_5_cast_fu_1688_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        exitcond11_reg_2387 <= exitcond11_fu_1595_p2;
        j_4_cast_reg_2382[2 : 0] <= j_4_cast_fu_1590_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        exitcond12_reg_2321 <= exitcond12_fu_1549_p2;
        i_9_cast_reg_2316[2 : 0] <= i_9_cast_fu_1544_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        exitcond13_reg_2274 <= exitcond13_fu_1517_p2;
        i_8_cast_reg_2269[2 : 0] <= i_8_cast_fu_1512_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        exitcond8_reg_2194 <= exitcond8_fu_1402_p2;
        i_4_cast_reg_2189[2 : 0] <= i_4_cast_fu_1397_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        free_axesA_reg_2156 <= grp_fu_1356_p2;
        free_axesB_2_reg_2167[58 : 0] <= free_axesB_2_fu_1370_p1[58 : 0];
        free_axesB_cast4_reg_2173 <= {{B_numel_read[15:5]}};
        free_axesB_reg_2162 <= {{B_numel_read[63:5]}};
        i_15_cast_reg_2184 <= i_15_cast_fu_1391_p2;
        i_15_reg_2178 <= i_15_fu_1386_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_12_1_reg_2107 <= i_12_1_fu_1292_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1254_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_12_s_reg_2089[63 : 1] <= i_12_s_fu_1271_p2[63 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_1_fu_1331_p2 == 1'd0) & (exitcond2_fu_1298_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        i_15_1_reg_2131 <= i_15_1_fu_1336_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        i_16_reg_2371 <= i_16_fu_1581_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        i_17_reg_2477 <= i_17_fu_1678_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_1_fu_1418_p2 == 1'd0) & (exitcond8_reg_2194 == 1'd0) & (1'b1 == ap_CS_fsm_state78))) begin
        i_18_1_reg_2216 <= i_18_1_fu_1423_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_reg_2194 == 1'd0) & (1'b1 == ap_CS_fsm_state78))) begin
        i_18_cast_reg_2203[2 : 1] <= i_18_cast_fu_1413_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state126)) begin
        i_18_reg_2605 <= i_18_fu_1851_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        i_20_reg_2621 <= i_20_fu_1892_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_1_fu_1495_p2 == 1'd1) & (tmp_3_reg_2237 == 1'd1) & (1'b1 == ap_CS_fsm_state82))) begin
        i_21_1_reg_2259 <= i_21_1_fu_1500_p2;
        j_9_1_reg_2264 <= j_9_1_fu_1506_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_reg_2237 == 1'd1) & (1'b1 == ap_CS_fsm_state82))) begin
        i_21_cast_reg_2246[2 : 0] <= i_21_cast_fu_1476_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond13_1_fu_1533_p2 == 1'd0) & (exitcond13_reg_2274 == 1'd0) & (1'b1 == ap_CS_fsm_state88))) begin
        i_22_1_reg_2301 <= i_22_1_fu_1538_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond13_reg_2274 == 1'd0) & (1'b1 == ap_CS_fsm_state88))) begin
        i_22_cast_reg_2288[2 : 1] <= i_22_cast_fu_1528_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond12_1_fu_1565_p2 == 1'd0) & (exitcond12_reg_2321 == 1'd0) & (1'b1 == ap_CS_fsm_state97))) begin
        i_23_1_reg_2353 <= i_23_1_fu_1570_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond12_reg_2321 == 1'd0) & (1'b1 == ap_CS_fsm_state97))) begin
        i_23_cast_reg_2340[2 : 1] <= i_23_cast_fu_1560_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        i_7_cast_reg_2232[2 : 0] <= i_7_cast_fu_1461_p1[2 : 0];
        tmp_3_reg_2237 <= tmp_3_fu_1465_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state130)) begin
        inneridx_reg_2626 <= grp_fu_2020_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond11_1_fu_1611_p2 == 1'd0) & (exitcond11_reg_2387 == 1'd0) & (1'b1 == ap_CS_fsm_state106))) begin
        j_10_1_reg_2414 <= j_10_1_fu_1616_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond11_reg_2387 == 1'd0) & (1'b1 == ap_CS_fsm_state106))) begin
        j_10_cast_reg_2401[2 : 1] <= j_10_cast_fu_1606_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond10_1_fu_1709_p2 == 1'd0) & (exitcond10_reg_2487 == 1'd0) & (1'b1 == ap_CS_fsm_state115))) begin
        j_11_1_reg_2514 <= j_11_1_fu_1714_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond10_reg_2487 == 1'd0) & (1'b1 == ap_CS_fsm_state115))) begin
        j_11_cast_reg_2501[2 : 1] <= j_11_cast_fu_1704_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state137)) begin
        j_reg_2662 <= j_fu_1945_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        k_1_reg_2644 <= k_1_fu_1916_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_1940_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state137))) begin
        newIndex_reg_2677 <= {{sum2_fu_1961_p2[5:3]}};
        sum5_reg_2667 <= sum5_fu_1956_p2;
        tmp_41_reg_2672 <= tmp_41_fu_1966_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state133)) begin
        outrowidx_reg_2631 <= grp_fu_1898_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_1237 <= dense_14_output_shap_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state85))) begin
        reg_1242 <= permA_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state94))) begin
        reg_1248 <= permB_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state118)) begin
        sel_tmp7_i_reg_2582 <= sel_tmp7_i_fu_1787_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        tmp_10_reg_2654 <= grp_fu_2025_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state144)) begin
        tmp_12_reg_2737 <= grp_fu_1233_p2;
        tmp_19_reg_2742 <= tmp_19_fu_1998_p10;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state153)) begin
        tmp_13_reg_2747 <= grp_fu_1229_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        tmp_18_reg_2469 <= tmp_18_fu_1651_p10;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_1_reg_2098 <= tmp_1_fu_1282_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_30_reg_2146 <= tmp_30_fu_1348_p1;
        tmp_31_reg_2151 <= tmp_31_fu_1352_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_1576_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state102))) begin
        tmp_34_reg_2376 <= tmp_34_fu_1587_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state106) & ((exitcond11_1_fu_1611_p2 == 1'd1) | (exitcond11_reg_2387 == 1'd1)))) begin
        tmp_35_reg_2419 <= tmp_35_fu_1622_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state115) & ((exitcond10_1_fu_1709_p2 == 1'd1) | (exitcond10_reg_2487 == 1'd1)))) begin
        tmp_39_reg_2519 <= tmp_39_fu_1720_p1;
        tmp_5_reg_2530[60 : 0] <= tmp_5_fu_1734_p1[60 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        tmp_6_reg_2597 <= grp_fu_1684_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        A_array10_ce0 = 1'b1;
    end else begin
        A_array10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        A_array11_ce0 = 1'b1;
    end else begin
        A_array11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        A_array12_ce0 = 1'b1;
    end else begin
        A_array12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        A_array13_ce0 = 1'b1;
    end else begin
        A_array13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        A_array14_ce0 = 1'b1;
    end else begin
        A_array14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        A_array8_ce0 = 1'b1;
    end else begin
        A_array8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        A_array9_ce0 = 1'b1;
    end else begin
        A_array9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        A_array_ce0 = 1'b1;
    end else begin
        A_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        Asub_address0 = j_11_cast_reg_2501;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        Asub_address0 = j_5_cast_reg_2482;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        Asub_address0 = permA_q1;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        Asub_address0 = permA_q0;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        Asub_address0 = grp_k2c_sub2idx_fu_1221_sub_address0;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        Asub_address0 = grp_k2c_idx2sub_fu_1209_sub_address0;
    end else begin
        Asub_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state117))) begin
        Asub_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        Asub_ce0 = grp_k2c_sub2idx_fu_1221_sub_ce0;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        Asub_ce0 = grp_k2c_idx2sub_fu_1209_sub_ce0;
    end else begin
        Asub_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state117))) begin
        Asub_d0 = Bsub_q0;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        Asub_d0 = grp_k2c_idx2sub_fu_1209_sub_d0;
    end else begin
        Asub_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state117) | ((exitcond10_reg_2487 == 1'd0) & (1'b1 == ap_CS_fsm_state115)))) begin
        Asub_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        Asub_we0 = grp_k2c_idx2sub_fu_1209_sub_we0;
    end else begin
        Asub_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state116)) begin
        Bsub_address0 = Bsub_addr_6_gep_fu_706_p3;
    end else if ((1'b1 == ap_CS_fsm_state114)) begin
        Bsub_address0 = permB_q0;
    end else if ((1'b1 == ap_CS_fsm_state108)) begin
        Bsub_address0 = j_10_cast_reg_2401;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        Bsub_address0 = j_4_cast_reg_2382;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        Bsub_address0 = grp_k2c_sub2idx_fu_1221_sub_address0;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        Bsub_address0 = grp_k2c_idx2sub_fu_1209_sub_address0;
    end else begin
        Bsub_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state108))) begin
        Bsub_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        Bsub_ce0 = grp_k2c_sub2idx_fu_1221_sub_ce0;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        Bsub_ce0 = grp_k2c_idx2sub_fu_1209_sub_ce0;
    end else begin
        Bsub_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state108))) begin
        Bsub_d0 = Asub_q0;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        Bsub_d0 = grp_k2c_idx2sub_fu_1209_sub_d0;
    end else begin
        Bsub_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state108) | ((exitcond11_reg_2387 == 1'd0) & (1'b1 == ap_CS_fsm_state106)))) begin
        Bsub_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        Bsub_we0 = grp_k2c_idx2sub_fu_1209_sub_we0;
    end else begin
        Bsub_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        C_array1_address0 = C_array1_addr_1_reg_2702;
    end else if ((1'b1 == ap_CS_fsm_state143)) begin
        C_array1_address0 = newIndex_cast_fu_1984_p1;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        C_array1_address0 = newIndex2_cast_fu_1871_p1;
    end else begin
        C_array1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state154))) begin
        C_array1_ce0 = 1'b1;
    end else begin
        C_array1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        C_array1_d0 = tmp_13_reg_2747;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        C_array1_d0 = 32'd0;
    end else begin
        C_array1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((exitcond5_fu_1846_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state126) & (tmp_36_fu_1857_p1 == 3'd1)) | ((tmp_41_reg_2672 == 3'd1) & (1'b1 == ap_CS_fsm_state154)))) begin
        C_array1_we0 = 1'b1;
    end else begin
        C_array1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        C_array2_address0 = C_array2_addr_1_reg_2707;
    end else if ((1'b1 == ap_CS_fsm_state143)) begin
        C_array2_address0 = newIndex_cast_fu_1984_p1;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        C_array2_address0 = newIndex2_cast_fu_1871_p1;
    end else begin
        C_array2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state154))) begin
        C_array2_ce0 = 1'b1;
    end else begin
        C_array2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        C_array2_d0 = tmp_13_reg_2747;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        C_array2_d0 = 32'd0;
    end else begin
        C_array2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((exitcond5_fu_1846_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state126) & (tmp_36_fu_1857_p1 == 3'd2)) | ((tmp_41_reg_2672 == 3'd2) & (1'b1 == ap_CS_fsm_state154)))) begin
        C_array2_we0 = 1'b1;
    end else begin
        C_array2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        C_array3_address0 = C_array3_addr_1_reg_2712;
    end else if ((1'b1 == ap_CS_fsm_state143)) begin
        C_array3_address0 = newIndex_cast_fu_1984_p1;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        C_array3_address0 = newIndex2_cast_fu_1871_p1;
    end else begin
        C_array3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state154))) begin
        C_array3_ce0 = 1'b1;
    end else begin
        C_array3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        C_array3_d0 = tmp_13_reg_2747;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        C_array3_d0 = 32'd0;
    end else begin
        C_array3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((exitcond5_fu_1846_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state126) & (tmp_36_fu_1857_p1 == 3'd3)) | ((tmp_41_reg_2672 == 3'd3) & (1'b1 == ap_CS_fsm_state154)))) begin
        C_array3_we0 = 1'b1;
    end else begin
        C_array3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        C_array4_address0 = C_array4_addr_1_reg_2717;
    end else if ((1'b1 == ap_CS_fsm_state143)) begin
        C_array4_address0 = newIndex_cast_fu_1984_p1;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        C_array4_address0 = newIndex2_cast_fu_1871_p1;
    end else begin
        C_array4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state154))) begin
        C_array4_ce0 = 1'b1;
    end else begin
        C_array4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        C_array4_d0 = tmp_13_reg_2747;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        C_array4_d0 = 32'd0;
    end else begin
        C_array4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((exitcond5_fu_1846_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state126) & (tmp_36_fu_1857_p1 == 3'd4)) | ((tmp_41_reg_2672 == 3'd4) & (1'b1 == ap_CS_fsm_state154)))) begin
        C_array4_we0 = 1'b1;
    end else begin
        C_array4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        C_array5_address0 = C_array5_addr_1_reg_2722;
    end else if ((1'b1 == ap_CS_fsm_state143)) begin
        C_array5_address0 = newIndex_cast_fu_1984_p1;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        C_array5_address0 = newIndex2_cast_fu_1871_p1;
    end else begin
        C_array5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state154))) begin
        C_array5_ce0 = 1'b1;
    end else begin
        C_array5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        C_array5_d0 = tmp_13_reg_2747;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        C_array5_d0 = 32'd0;
    end else begin
        C_array5_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((exitcond5_fu_1846_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state126) & (tmp_36_fu_1857_p1 == 3'd5)) | ((tmp_41_reg_2672 == 3'd5) & (1'b1 == ap_CS_fsm_state154)))) begin
        C_array5_we0 = 1'b1;
    end else begin
        C_array5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        C_array6_address0 = C_array6_addr_1_reg_2727;
    end else if ((1'b1 == ap_CS_fsm_state143)) begin
        C_array6_address0 = newIndex_cast_fu_1984_p1;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        C_array6_address0 = newIndex2_cast_fu_1871_p1;
    end else begin
        C_array6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state154))) begin
        C_array6_ce0 = 1'b1;
    end else begin
        C_array6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        C_array6_d0 = tmp_13_reg_2747;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        C_array6_d0 = 32'd0;
    end else begin
        C_array6_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((exitcond5_fu_1846_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state126) & (tmp_36_fu_1857_p1 == 3'd6)) | ((tmp_41_reg_2672 == 3'd6) & (1'b1 == ap_CS_fsm_state154)))) begin
        C_array6_we0 = 1'b1;
    end else begin
        C_array6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        C_array7_address0 = C_array7_addr_1_reg_2732;
    end else if ((1'b1 == ap_CS_fsm_state143)) begin
        C_array7_address0 = newIndex_cast_fu_1984_p1;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        C_array7_address0 = newIndex2_cast_fu_1871_p1;
    end else begin
        C_array7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state154))) begin
        C_array7_ce0 = 1'b1;
    end else begin
        C_array7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        C_array7_d0 = tmp_13_reg_2747;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        C_array7_d0 = 32'd0;
    end else begin
        C_array7_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((exitcond5_fu_1846_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state126) & (tmp_36_fu_1857_p1 == 3'd7)) | ((tmp_41_reg_2672 == 3'd7) & (1'b1 == ap_CS_fsm_state154)))) begin
        C_array7_we0 = 1'b1;
    end else begin
        C_array7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        C_array_address0 = C_array_addr_2_reg_2697;
    end else if ((1'b1 == ap_CS_fsm_state143)) begin
        C_array_address0 = newIndex_cast_fu_1984_p1;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        C_array_address0 = newIndex2_cast_fu_1871_p1;
    end else begin
        C_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state154))) begin
        C_array_ce0 = 1'b1;
    end else begin
        C_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        C_array_d0 = tmp_13_reg_2747;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        C_array_d0 = 32'd0;
    end else begin
        C_array_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((exitcond5_fu_1846_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state126) & (tmp_36_fu_1857_p1 == 3'd0)) | ((tmp_41_reg_2672 == 3'd0) & (1'b1 == ap_CS_fsm_state154)))) begin
        C_array_we0 = 1'b1;
    end else begin
        C_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_7_fu_1887_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state128)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_fu_1298_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        if ((tmp_fu_1303_p2 == 1'd1)) begin
            ap_phi_mux_count_3_phi_fu_1038_p4 = count_2_reg_1012;
        end else if ((tmp_fu_1303_p2 == 1'd0)) begin
            ap_phi_mux_count_3_phi_fu_1038_p4 = count_5_fu_1314_p2;
        end else begin
            ap_phi_mux_count_3_phi_fu_1038_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_count_3_phi_fu_1038_p4 = 'bx;
    end
end

always @ (*) begin
    if (((tmp_7_fu_1887_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state128))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        dense_14_output_shap_address0 = dense_14_output_shap_5_gep_fu_370_p3;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        dense_14_output_shap_address0 = reg_1242;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        dense_14_output_shap_address0 = p_read2;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        dense_14_output_shap_address0 = grp_k2c_idx2sub_fu_1209_shape_address0;
    end else begin
        dense_14_output_shap_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state6))) begin
        dense_14_output_shap_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        dense_14_output_shap_ce0 = grp_k2c_idx2sub_fu_1209_shape_ce0;
    end else begin
        dense_14_output_shap_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state138)) begin
        dense_15_fwork_address0 = dense_15_fwork_addr_2_reg_2649;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        dense_15_fwork_address0 = sum_cast_fu_1842_p1;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        dense_15_fwork_address0 = grp_k2c_sub2idx_fu_1221_ap_return;
    end else begin
        dense_15_fwork_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state120) | ((grp_k2c_sub2idx_fu_1221_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state110)))) begin
        dense_15_fwork_ce0 = 1'b1;
    end else begin
        dense_15_fwork_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state138)) begin
        dense_15_fwork_ce1 = 1'b1;
    end else begin
        dense_15_fwork_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        dense_15_fwork_d0 = UnifiedRetVal_i_reg_2587;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        dense_15_fwork_d0 = tmp_18_reg_2469;
    end else begin
        dense_15_fwork_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state120) | ((grp_k2c_sub2idx_fu_1221_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state110)))) begin
        dense_15_fwork_we0 = 1'b1;
    end else begin
        dense_15_fwork_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state118)) begin
        dense_15_kernel_arra_1_ce0 = 1'b1;
    end else begin
        dense_15_kernel_arra_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state118)) begin
        dense_15_kernel_arra_2_ce0 = 1'b1;
    end else begin
        dense_15_kernel_arra_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state118)) begin
        dense_15_kernel_arra_3_ce0 = 1'b1;
    end else begin
        dense_15_kernel_arra_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        dense_15_kernel_arra_4_ce0 = 1'b1;
    end else begin
        dense_15_kernel_arra_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        dense_15_kernel_arra_5_ce0 = 1'b1;
    end else begin
        dense_15_kernel_arra_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        dense_15_kernel_arra_6_ce0 = 1'b1;
    end else begin
        dense_15_kernel_arra_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        dense_15_kernel_arra_7_ce0 = 1'b1;
    end else begin
        dense_15_kernel_arra_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        dense_15_kernel_arra_ce0 = 1'b1;
    end else begin
        dense_15_kernel_arra_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        dense_15_kernel_shap_address0 = dense_15_kernel_shap_3_gep_fu_424_p3;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        dense_15_kernel_shap_address0 = reg_1248;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        dense_15_kernel_shap_address0 = grp_k2c_idx2sub_fu_1209_shape_address0;
    end else begin
        dense_15_kernel_shap_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state95))) begin
        dense_15_kernel_shap_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        dense_15_kernel_shap_ce0 = grp_k2c_idx2sub_fu_1209_shape_ce0;
    end else begin
        dense_15_kernel_shap_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        freeA_address0 = i_18_cast_fu_1413_p1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        freeA_address0 = i_4_cast_fu_1397_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        freeA_address0 = count_1_reg_988;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        freeA_address0 = count_reg_963;
    end else begin
        freeA_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        freeA_ce0 = 1'b1;
    end else begin
        freeA_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        freeA_d0 = i_12_s_reg_2089;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        freeA_d0 = i_reg_975;
    end else begin
        freeA_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_1_reg_2098 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((tmp_s_fu_1259_p2 == 1'd0) & (exitcond1_fu_1254_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        freeA_we0 = 1'b1;
    end else begin
        freeA_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        freeB_address0 = j_9_cast_fu_1490_p1;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        freeB_address0 = j_3_reg_1079;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        freeB_address0 = count_3_cast_reg_2118;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        freeB_address0 = count_2_cast4_fu_1309_p1;
    end else begin
        freeB_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        freeB_ce0 = 1'b1;
    end else begin
        freeB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        freeB_d0 = i_15_s_reg_2123;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        freeB_d0 = i_1_reg_1023;
    end else begin
        freeB_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((exitcond2_fu_1298_p2 == 1'd0) & (tmp_fu_1303_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        freeB_we0 = 1'b1;
    end else begin
        freeB_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_1356_ap_start = 1'b1;
    end else begin
        grp_fu_1356_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        grp_k2c_idx2sub_fu_1209_idx = i_10_reg_1140;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_k2c_idx2sub_fu_1209_idx = i_s_reg_1116;
    end else begin
        grp_k2c_idx2sub_fu_1209_idx = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        grp_k2c_idx2sub_fu_1209_ndim = B_dim;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_k2c_idx2sub_fu_1209_ndim = A_dim;
    end else begin
        grp_k2c_idx2sub_fu_1209_ndim = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        grp_k2c_idx2sub_fu_1209_shape_q0 = dense_15_kernel_shap_q0;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_k2c_idx2sub_fu_1209_shape_q0 = dense_14_output_shap_q0;
    end else begin
        grp_k2c_idx2sub_fu_1209_shape_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        grp_k2c_sub2idx_fu_1221_ndim = B_dim;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        grp_k2c_sub2idx_fu_1221_ndim = A_dim;
    end else begin
        grp_k2c_sub2idx_fu_1221_ndim = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        grp_k2c_sub2idx_fu_1221_shape_q0 = newshpB_q0;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        grp_k2c_sub2idx_fu_1221_shape_q0 = newshpA_q0;
    end else begin
        grp_k2c_sub2idx_fu_1221_shape_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        grp_k2c_sub2idx_fu_1221_sub_q0 = Asub_q0;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        grp_k2c_sub2idx_fu_1221_sub_q0 = Bsub_q0;
    end else begin
        grp_k2c_sub2idx_fu_1221_sub_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        newshpA_address0 = i_22_cast_reg_2288;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        newshpA_address0 = i_8_cast_reg_2269;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        newshpA_address0 = grp_k2c_sub2idx_fu_1221_shape_address0;
    end else begin
        newshpA_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state92))) begin
        newshpA_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        newshpA_ce0 = grp_k2c_sub2idx_fu_1221_shape_ce0;
    end else begin
        newshpA_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        newshpA_d0 = dense_14_output_shap_6_reg_2311;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        newshpA_d0 = reg_1237;
    end else begin
        newshpA_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state92) | ((exitcond13_reg_2274 == 1'd0) & (1'b1 == ap_CS_fsm_state88)))) begin
        newshpA_we0 = 1'b1;
    end else begin
        newshpA_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        newshpB_address0 = i_23_cast_reg_2340;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        newshpB_address0 = i_9_cast_reg_2316;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        newshpB_address0 = grp_k2c_sub2idx_fu_1221_shape_address0;
    end else begin
        newshpB_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state101))) begin
        newshpB_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        newshpB_ce0 = grp_k2c_sub2idx_fu_1221_shape_ce0;
    end else begin
        newshpB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        newshpB_d0 = dense_15_kernel_shap_4_reg_2363;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        newshpB_d0 = dense_15_kernel_shap_2_reg_2335;
    end else begin
        newshpB_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state101) | ((exitcond12_reg_2321 == 1'd0) & (1'b1 == ap_CS_fsm_state97)))) begin
        newshpB_we0 = 1'b1;
    end else begin
        newshpB_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        permA_address0 = j_4_cast_fu_1590_p1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        permA_address0 = i_5_cast_fu_1429_p1;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        permA_address0 = i_18_cast_reg_2203;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        permA_address0 = i_4_cast_reg_2189;
    end else begin
        permA_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        permA_address1 = j_10_cast_fu_1606_p1;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        permA_address1 = i_22_cast_fu_1528_p1;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        permA_address1 = i_8_cast_fu_1512_p1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        permA_address1 = i_19_cast_fu_1445_p1;
    end else begin
        permA_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state79))) begin
        permA_ce0 = 1'b1;
    end else begin
        permA_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state80))) begin
        permA_ce1 = 1'b1;
    end else begin
        permA_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        permA_d0 = p_read2;
    end else if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state79))) begin
        permA_d0 = freeA_q0;
    end else begin
        permA_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) | ((tmp_2_fu_1434_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80)) | ((exitcond8_reg_2194 == 1'd0) & (1'b1 == ap_CS_fsm_state78)))) begin
        permA_we0 = 1'b1;
    end else begin
        permA_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_1_fu_1450_p2 == 1'd1) & (tmp_2_fu_1434_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
        permA_we1 = 1'b1;
    end else begin
        permA_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        permB_address0 = j_11_cast_fu_1704_p1;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        permB_address0 = j_5_cast_fu_1688_p1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        permB_address0 = i_23_cast_fu_1560_p1;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        permB_address0 = i_9_cast_fu_1544_p1;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        permB_address0 = i_21_cast_reg_2246;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        permB_address0 = i_7_cast_reg_2232;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        permB_address0 = 64'd0;
    end else begin
        permB_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state83))) begin
        permB_ce0 = 1'b1;
    end else begin
        permB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state83))) begin
        permB_d0 = freeB_q0;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        permB_d0 = 64'd0;
    end else begin
        permB_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state83) | ((tmp_3_reg_2237 == 1'd1) & (1'b1 == ap_CS_fsm_state82)) | ((1'b1 == ap_CS_fsm_state80) & ((tmp_2_1_fu_1450_p2 == 1'd0) | (tmp_2_fu_1434_p2 == 1'd0))))) begin
        permB_we0 = 1'b1;
    end else begin
        permB_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & ((exitcond1_1_fu_1277_p2 == 1'd1) | (exitcond1_fu_1254_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state6 : begin
            if (((exitcond2_1_fu_1331_p2 == 1'd0) & (exitcond2_fu_1298_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            if (((1'b1 == ap_CS_fsm_state78) & ((exitcond8_1_fu_1418_p2 == 1'd1) | (exitcond8_reg_2194 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state80 : begin
            if (((1'b1 == ap_CS_fsm_state80) & ((tmp_2_1_fu_1450_p2 == 1'd0) | (tmp_2_fu_1434_p2 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            if (((1'b1 == ap_CS_fsm_state82) & ((tmp_3_1_fu_1495_p2 == 1'd0) | (tmp_3_reg_2237 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state84 : begin
            if (((exitcond13_fu_1517_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state84))) begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            if (((1'b1 == ap_CS_fsm_state88) & ((exitcond13_1_fu_1533_p2 == 1'd1) | (exitcond13_reg_2274 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state93 : begin
            if (((exitcond12_fu_1549_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state93))) begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            if (((1'b1 == ap_CS_fsm_state97) & ((exitcond12_1_fu_1565_p2 == 1'd1) | (exitcond12_reg_2321 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state102 : begin
            if (((exitcond6_fu_1576_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state102))) begin
                ap_NS_fsm = ap_ST_fsm_state111;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end
        end
        ap_ST_fsm_state103 : begin
            if (((1'b1 == ap_CS_fsm_state103) & (grp_k2c_idx2sub_fu_1209_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state104;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end
        end
        ap_ST_fsm_state104 : begin
            if (((exitcond11_fu_1595_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state104))) begin
                ap_NS_fsm = ap_ST_fsm_state106;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state105;
            end
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            if (((1'b1 == ap_CS_fsm_state106) & ((exitcond11_1_fu_1611_p2 == 1'd1) | (exitcond11_reg_2387 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state109;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            if (((grp_k2c_sub2idx_fu_1221_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state110))) begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state110;
            end
        end
        ap_ST_fsm_state111 : begin
            if (((exitcond7_fu_1673_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state111))) begin
                ap_NS_fsm = ap_ST_fsm_state121;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state112;
            end
        end
        ap_ST_fsm_state112 : begin
            if (((1'b1 == ap_CS_fsm_state112) & (grp_k2c_idx2sub_fu_1209_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state112;
            end
        end
        ap_ST_fsm_state113 : begin
            if (((exitcond10_fu_1693_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state113))) begin
                ap_NS_fsm = ap_ST_fsm_state115;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state114;
            end
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            if (((1'b1 == ap_CS_fsm_state115) & ((exitcond10_1_fu_1709_p2 == 1'd1) | (exitcond10_reg_2487 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state118;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state116;
            end
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            if (((grp_k2c_sub2idx_fu_1221_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state119))) begin
                ap_NS_fsm = ap_ST_fsm_state120;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state119;
            end
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            if (((exitcond5_fu_1846_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state126))) begin
                ap_NS_fsm = ap_ST_fsm_state128;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state127;
            end
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state128 : begin
            if (((tmp_7_fu_1887_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state128))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state129;
            end
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            if (((exitcond_fu_1911_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state134))) begin
                ap_NS_fsm = ap_ST_fsm_state128;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state135;
            end
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            if (((exitcond3_fu_1940_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state137))) begin
                ap_NS_fsm = ap_ST_fsm_state134;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state138;
            end
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_array10_address0 = newIndex3_cast_fu_1636_p1;

assign A_array11_address0 = newIndex3_cast_fu_1636_p1;

assign A_array12_address0 = newIndex3_cast_fu_1636_p1;

assign A_array13_address0 = newIndex3_cast_fu_1636_p1;

assign A_array14_address0 = newIndex3_cast_fu_1636_p1;

assign A_array8_address0 = newIndex3_cast_fu_1636_p1;

assign A_array9_address0 = newIndex3_cast_fu_1636_p1;

assign A_array_address0 = newIndex3_cast_fu_1636_p1;

assign Bsub_addr_6_gep_fu_706_p3 = permB_q0;

assign UnifiedRetVal_i_fu_1829_p3 = ((sel_tmp12_i_fu_1824_p2[0:0] === 1'b1) ? dense_15_kernel_arra_1_q0 : sel_tmp11_i_fu_1816_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd124];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd129];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd132];

assign ap_CS_fsm_state134 = ap_CS_fsm[32'd133];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd135];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd136];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state139 = ap_CS_fsm[32'd138];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd139];

assign ap_CS_fsm_state143 = ap_CS_fsm[32'd142];

assign ap_CS_fsm_state144 = ap_CS_fsm[32'd143];

assign ap_CS_fsm_state145 = ap_CS_fsm[32'd144];

assign ap_CS_fsm_state153 = ap_CS_fsm[32'd152];

assign ap_CS_fsm_state154 = ap_CS_fsm[32'd153];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

assign count_2_cast4_fu_1309_p1 = count_2_reg_1012;

assign count_3_cast_fu_1321_p1 = ap_phi_mux_count_3_phi_fu_1038_p4;

assign count_4_1_fu_1286_p2 = (count_1_reg_988 + 64'd1);

assign count_4_fu_1264_p2 = (count_reg_963 + 64'd1);

assign count_5_1_fu_1342_p2 = (count_3_reg_1035 + 3'd1);

assign count_5_fu_1314_p2 = (count_2_reg_1012 + 3'd1);

assign dense_14_output_shap_5_gep_fu_370_p3 = reg_1242;

assign dense_15_fwork_address1 = sum5_cast_fu_1980_p1;

assign dense_15_kernel_arra_1_address0 = tmp_5_reg_2530;

assign dense_15_kernel_arra_2_address0 = tmp_5_reg_2530;

assign dense_15_kernel_arra_3_address0 = tmp_5_reg_2530;

assign dense_15_kernel_arra_4_address0 = tmp_5_fu_1734_p1;

assign dense_15_kernel_arra_5_address0 = tmp_5_fu_1734_p1;

assign dense_15_kernel_arra_6_address0 = tmp_5_fu_1734_p1;

assign dense_15_kernel_arra_7_address0 = tmp_5_fu_1734_p1;

assign dense_15_kernel_arra_address0 = tmp_5_fu_1734_p1;

assign dense_15_kernel_shap_3_gep_fu_424_p3 = reg_1248;

assign exitcond10_1_fu_1709_p2 = ((j_11_cast_fu_1704_p1 == B_dim) ? 1'b1 : 1'b0);

assign exitcond10_fu_1693_p2 = ((j_5_cast_fu_1688_p1 == B_dim) ? 1'b1 : 1'b0);

assign exitcond11_1_fu_1611_p2 = ((j_10_cast_fu_1606_p1 == A_dim) ? 1'b1 : 1'b0);

assign exitcond11_fu_1595_p2 = ((j_4_cast_fu_1590_p1 == A_dim) ? 1'b1 : 1'b0);

assign exitcond12_1_fu_1565_p2 = ((i_23_cast_fu_1560_p1 == B_dim) ? 1'b1 : 1'b0);

assign exitcond12_fu_1549_p2 = ((i_9_cast_fu_1544_p1 == B_dim) ? 1'b1 : 1'b0);

assign exitcond13_1_fu_1533_p2 = ((i_22_cast_fu_1528_p1 == A_dim) ? 1'b1 : 1'b0);

assign exitcond13_fu_1517_p2 = ((i_8_cast_fu_1512_p1 == A_dim) ? 1'b1 : 1'b0);

assign exitcond1_1_fu_1277_p2 = ((i_12_s_fu_1271_p2 == A_dim) ? 1'b1 : 1'b0);

assign exitcond1_fu_1254_p2 = ((i_reg_975 == A_dim) ? 1'b1 : 1'b0);

assign exitcond2_1_fu_1331_p2 = ((i_15_s_fu_1325_p2 == B_dim) ? 1'b1 : 1'b0);

assign exitcond2_fu_1298_p2 = ((i_1_reg_1023 == B_dim) ? 1'b1 : 1'b0);

assign exitcond3_fu_1940_p2 = ((j_s_reg_1198 == free_axesB_reg_2162) ? 1'b1 : 1'b0);

assign exitcond5_fu_1846_p2 = ((i_11_reg_1164 == tmp_6_reg_2597) ? 1'b1 : 1'b0);

assign exitcond6_fu_1576_p2 = ((i_s_reg_1116 == A_numel_read) ? 1'b1 : 1'b0);

assign exitcond7_fu_1673_p2 = ((i_10_reg_1140 == B_numel_read) ? 1'b1 : 1'b0);

assign exitcond8_1_fu_1418_p2 = ((i_18_cast_fu_1413_p1 == i_15_reg_2178) ? 1'b1 : 1'b0);

assign exitcond8_fu_1402_p2 = ((i_4_cast_fu_1397_p1 == i_15_reg_2178) ? 1'b1 : 1'b0);

assign exitcond_fu_1911_p2 = ((k_cast_fu_1907_p1 == tmp_31_reg_2151) ? 1'b1 : 1'b0);

assign free_axesB_2_fu_1370_p1 = free_axesB_fu_1361_p4;

assign free_axesB_fu_1361_p4 = {{B_numel_read[63:5]}};

assign grp_fu_1356_p1 = reg_1237;

assign grp_fu_1684_p0 = free_axesB_2_reg_2167;

assign grp_fu_1898_p1 = free_axesB_2_reg_2167;

assign grp_fu_2020_p1 = i_14_reg_1175[10:0];

assign grp_fu_2025_p0 = k_cast3_fu_1903_p1;

assign grp_k2c_idx2sub_fu_1209_ap_start = grp_k2c_idx2sub_fu_1209_ap_start_reg;

assign grp_k2c_sub2idx_fu_1221_ap_start = grp_k2c_sub2idx_fu_1221_ap_start_reg;

assign i_12_1_fu_1292_p2 = (i_reg_975 + 64'd2);

assign i_12_s_fu_1271_p2 = (i_reg_975 | 64'd1);

assign i_15_1_fu_1336_p2 = (i_1_reg_1023 + 64'd2);

assign i_15_cast_fu_1391_p2 = ($signed(3'd7) + $signed(tmp_32_fu_1383_p1));

assign i_15_fu_1386_p2 = ($signed(64'd18446744073709551615) + $signed(A_dim));

assign i_15_s_fu_1325_p2 = (i_1_reg_1023 | 64'd1);

assign i_16_fu_1581_p2 = (i_s_reg_1116 + 64'd1);

assign i_17_fu_1678_p2 = (i_10_reg_1140 + 64'd1);

assign i_18_1_fu_1423_p2 = (i_4_reg_1046 + 3'd2);

assign i_18_cast_fu_1413_p1 = i_18_s_fu_1407_p2;

assign i_18_fu_1851_p2 = (i_11_reg_1164 + 64'd1);

assign i_18_s_fu_1407_p2 = (i_4_reg_1046 | 3'd1);

assign i_19_1_fu_1455_p2 = (i_5_reg_1058 + 3'd2);

assign i_19_cast_fu_1445_p1 = i_19_fu_1439_p2;

assign i_19_fu_1439_p2 = (i_5_reg_1058 + 3'd1);

assign i_20_fu_1892_p2 = ($signed(64'd1) + $signed(i_14_reg_1175));

assign i_21_1_fu_1500_p2 = (i_7_reg_1067 + 3'd2);

assign i_21_cast_fu_1476_p1 = i_21_fu_1470_p2;

assign i_21_fu_1470_p2 = (3'd1 + i_7_reg_1067);

assign i_22_1_fu_1538_p2 = (i_8_reg_1092 + 3'd2);

assign i_22_cast_fu_1528_p1 = i_22_s_fu_1522_p2;

assign i_22_s_fu_1522_p2 = (i_8_reg_1092 | 3'd1);

assign i_23_1_fu_1570_p2 = (i_9_reg_1104 + 3'd2);

assign i_23_cast_fu_1560_p1 = i_23_s_fu_1554_p2;

assign i_23_s_fu_1554_p2 = (i_9_reg_1104 | 3'd1);

assign i_4_cast_fu_1397_p1 = i_4_reg_1046;

assign i_5_cast_fu_1429_p1 = i_5_reg_1058;

assign i_7_cast_fu_1461_p1 = i_7_reg_1067;

assign i_8_cast_fu_1512_p1 = i_8_reg_1092;

assign i_9_cast_fu_1544_p1 = i_9_reg_1104;

assign j_10_1_fu_1616_p2 = (j_4_reg_1128 + 3'd2);

assign j_10_cast_fu_1606_p1 = j_10_s_fu_1600_p2;

assign j_10_s_fu_1600_p2 = (j_4_reg_1128 | 3'd1);

assign j_11_1_fu_1714_p2 = (j_5_reg_1152 + 3'd2);

assign j_11_cast_fu_1704_p1 = j_11_s_fu_1698_p2;

assign j_11_s_fu_1698_p2 = (j_5_reg_1152 | 3'd1);

assign j_4_cast_fu_1590_p1 = j_4_reg_1128;

assign j_5_cast_fu_1688_p1 = j_5_reg_1152;

assign j_9_1_fu_1506_p2 = (j_3_reg_1079 + 64'd2);

assign j_9_cast_fu_1490_p1 = j_9_s_fu_1484_p2;

assign j_9_s_fu_1484_p2 = (tmp_33_fu_1480_p1 | 4'd1);

assign j_cast_fu_1936_p1 = j_s_reg_1198;

assign j_fu_1945_p2 = (59'd1 + j_s_reg_1198);

assign k_1_fu_1916_p2 = (k_reg_1187 + 6'd1);

assign k_cast3_fu_1903_p1 = k_reg_1187;

assign k_cast_fu_1907_p1 = k_reg_1187;

assign newIndex2_cast_fu_1871_p1 = newIndex2_fu_1861_p4;

assign newIndex2_fu_1861_p4 = {{i_11_reg_1164[5:3]}};

assign newIndex3_cast_fu_1636_p1 = newIndex3_fu_1626_p4;

assign newIndex3_fu_1626_p4 = {{i_s_reg_1116[6:3]}};

assign newIndex4_fu_1724_p4 = {{i_10_reg_1140[63:3]}};

assign newIndex_cast_fu_1984_p1 = newIndex_reg_2677;

assign sel_tmp10_i_fu_1811_p2 = ((tmp_39_reg_2519 == 3'd5) ? 1'b1 : 1'b0);

assign sel_tmp11_i_fu_1816_p3 = ((sel_tmp10_i_fu_1811_p2[0:0] === 1'b1) ? dense_15_kernel_arra_2_q0 : sel_tmp9_i_fu_1804_p3);

assign sel_tmp12_i_fu_1824_p2 = ((tmp_39_reg_2519 == 3'd6) ? 1'b1 : 1'b0);

assign sel_tmp1_i_fu_1748_p3 = ((sel_tmp_i_fu_1743_p2[0:0] === 1'b1) ? dense_15_kernel_arra_7_q0 : dense_15_kernel_arra_q0);

assign sel_tmp2_i_fu_1756_p2 = ((tmp_39_reg_2519 == 3'd1) ? 1'b1 : 1'b0);

assign sel_tmp3_i_fu_1761_p3 = ((sel_tmp2_i_fu_1756_p2[0:0] === 1'b1) ? dense_15_kernel_arra_6_q0 : sel_tmp1_i_fu_1748_p3);

assign sel_tmp4_i_fu_1769_p2 = ((tmp_39_reg_2519 == 3'd2) ? 1'b1 : 1'b0);

assign sel_tmp5_i_fu_1774_p3 = ((sel_tmp4_i_fu_1769_p2[0:0] === 1'b1) ? dense_15_kernel_arra_5_q0 : sel_tmp3_i_fu_1761_p3);

assign sel_tmp6_i_fu_1782_p2 = ((tmp_39_reg_2519 == 3'd3) ? 1'b1 : 1'b0);

assign sel_tmp7_i_fu_1787_p3 = ((sel_tmp6_i_fu_1782_p2[0:0] === 1'b1) ? dense_15_kernel_arra_4_q0 : sel_tmp5_i_fu_1774_p3);

assign sel_tmp8_i_fu_1799_p2 = ((tmp_39_reg_2519 == 3'd4) ? 1'b1 : 1'b0);

assign sel_tmp9_i_fu_1804_p3 = ((sel_tmp8_i_fu_1799_p2[0:0] === 1'b1) ? dense_15_kernel_arra_3_q0 : sel_tmp7_i_reg_2582);

assign sel_tmp_i_fu_1743_p2 = ((tmp_39_reg_2519 == 3'd0) ? 1'b1 : 1'b0);

assign sum2_fu_1961_p2 = (j_cast_fu_1936_p1 + outrowidx_reg_2631);

assign sum4_cast_fu_1927_p1 = sum4_fu_1922_p2;

assign sum4_fu_1922_p2 = ($signed(k_cast3_fu_1903_p1) + $signed(inneridx_reg_2626));

assign sum5_cast_fu_1980_p1 = sum5_reg_2667;

assign sum5_fu_1956_p2 = ($signed(tmp_10_reg_2654) + $signed(tmp1_fu_1951_p2));

assign sum_cast_fu_1842_p1 = sum_reg_2592;

assign sum_fu_1837_p2 = (tmp_34_reg_2376 + tmp_38_fu_1795_p1);

assign tmp1_fu_1951_p2 = (tmp_34_reg_2376 + tmp_40_fu_1932_p1);

assign tmp_18_fu_1651_p9 = tmp_35_reg_2419;

assign tmp_19_fu_1998_p9 = tmp_41_reg_2672;

assign tmp_1_fu_1282_p2 = ((i_12_s_reg_2089 == p_read2) ? 1'b1 : 1'b0);

assign tmp_2_1_fu_1450_p2 = ((i_19_cast_fu_1445_p1 < A_dim) ? 1'b1 : 1'b0);

assign tmp_2_fu_1434_p2 = ((i_5_cast_fu_1429_p1 < A_dim) ? 1'b1 : 1'b0);

assign tmp_30_fu_1348_p1 = dense_14_output_shap_q0[10:0];

assign tmp_31_fu_1352_p1 = dense_14_output_shap_q0[6:0];

assign tmp_32_fu_1383_p1 = A_dim[2:0];

assign tmp_33_fu_1480_p1 = j_3_reg_1079[3:0];

assign tmp_34_fu_1587_p1 = A_numel_read[10:0];

assign tmp_35_fu_1622_p1 = i_s_reg_1116[2:0];

assign tmp_36_fu_1857_p1 = i_11_reg_1164[2:0];

assign tmp_38_fu_1795_p1 = grp_k2c_sub2idx_fu_1221_ap_return[10:0];

assign tmp_39_fu_1720_p1 = i_10_reg_1140[2:0];

assign tmp_3_1_fu_1495_p2 = ((i_21_cast_fu_1476_p1 < B_dim) ? 1'b1 : 1'b0);

assign tmp_3_fu_1465_p2 = ((i_7_cast_fu_1461_p1 < B_dim) ? 1'b1 : 1'b0);

assign tmp_40_fu_1932_p1 = j_s_reg_1198[10:0];

assign tmp_41_fu_1966_p1 = sum2_fu_1961_p2[2:0];

assign tmp_5_fu_1734_p1 = newIndex4_fu_1724_p4;

assign tmp_7_fu_1887_p2 = ((i_14_reg_1175 < free_axesA_reg_2156) ? 1'b1 : 1'b0);

assign tmp_fu_1303_p2 = ((i_1_reg_1023 == 64'd0) ? 1'b1 : 1'b0);

assign tmp_s_fu_1259_p2 = ((i_reg_975 == p_read2) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    i_12_s_reg_2089[0] <= 1'b1;
    count_3_cast_reg_2118[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_15_s_reg_2123[0] <= 1'b1;
    free_axesB_2_reg_2167[63:59] <= 5'b00000;
    i_4_cast_reg_2189[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_18_cast_reg_2203[0] <= 1'b1;
    i_18_cast_reg_2203[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_7_cast_reg_2232[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_21_cast_reg_2246[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_8_cast_reg_2269[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_22_cast_reg_2288[0] <= 1'b1;
    i_22_cast_reg_2288[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_9_cast_reg_2316[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_23_cast_reg_2340[0] <= 1'b1;
    i_23_cast_reg_2340[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    j_4_cast_reg_2382[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    j_10_cast_reg_2401[0] <= 1'b1;
    j_10_cast_reg_2401[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    j_5_cast_reg_2482[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    j_11_cast_reg_2501[0] <= 1'b1;
    j_11_cast_reg_2501[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_5_reg_2530[63:61] <= 3'b000;
end

endmodule //k2c_dot_2
