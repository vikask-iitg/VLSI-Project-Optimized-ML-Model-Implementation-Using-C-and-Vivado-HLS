// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef __k2c_dot_2_dense_1bdk_H__
#define __k2c_dot_2_dense_1bdk_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct k2c_dot_2_dense_1bdk_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 64;
  static const unsigned AddressWidth = 6;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(k2c_dot_2_dense_1bdk_ram) {
        ram[0] = "0b10111110100010000011000111000000";
        ram[1] = "0b10111110100110011111111110101100";
        ram[2] = "0b00111110100110101100111100011000";
        ram[3] = "0b10111101110111110110000100110000";
        ram[4] = "0b10111101101100101100111011001000";
        ram[5] = "0b10111110010000101001100110101100";
        ram[6] = "0b00111110001101101101001111001101";
        ram[7] = "0b00111110100010101101101101010010";
        ram[8] = "0b10111110101011100001000010010010";
        ram[9] = "0b10111100000010010111101001110110";
        ram[10] = "0b10111101111111100001101111001001";
        ram[11] = "0b10111110000001000101111000111110";
        ram[12] = "0b10111101010101000100100101011000";
        ram[13] = "0b10111101001111110001101000010101";
        ram[14] = "0b10111110001101010001001001100101";
        ram[15] = "0b10111101110010110011010110011110";
        ram[16] = "0b10111101111000010100000001010111";
        ram[17] = "0b10111110100101100100101100111010";
        ram[18] = "0b10111110100001100111101011001111";
        ram[19] = "0b10111101000101100110000101001000";
        ram[20] = "0b00111110100101011100111111001111";
        ram[21] = "0b10111110100111010110111011000110";
        ram[22] = "0b00111110010000000110000010000010";
        ram[23] = "0b00111110000111011101001010011001";
        ram[24] = "0b00111101100100010000110000011000";
        ram[25] = "0b10111110100100000010111011100010";
        ram[26] = "0b10111110100000100001001101101001";
        ram[27] = "0b00111110010011010110100000111010";
        ram[28] = "0b10111110000001001101100101110010";
        ram[29] = "0b10111101111110000110100001001111";
        ram[30] = "0b10111110100110100001001001100100";
        ram[31] = "0b00111101110010111010000110101001";
        ram[32] = "0b00111110010010010001111111101111";
        ram[33] = "0b00111110100100010101001001001110";
        ram[34] = "0b00111110010011001010001110010001";
        ram[35] = "0b00111110010101110011001100111011";
        ram[36] = "0b10111101010011011011010011101111";
        ram[37] = "0b10111101110011001001101111111011";
        ram[38] = "0b10111110101010111011110000100100";
        ram[39] = "0b00111110001100100111100101000000";
        ram[40] = "0b10111101110000100100001001100110";
        ram[41] = "0b00111101010010111100101111011011";
        ram[42] = "0b00111110101101110011010011111100";
        ram[43] = "0b10111110001100000000111101000111";
        ram[44] = "0b10111110100010010110100010011111";
        ram[45] = "0b00111110101100011011100001101110";
        ram[46] = "0b10111110000111011110110000010011";
        ram[47] = "0b10111101100011101001111011100100";
        ram[48] = "0b00111110110010001111000100010110";
        ram[49] = "0b10111110001101101010000000011001";
        ram[50] = "0b00111110101001100010000111010010";
        ram[51] = "0b10111110000111010001101001011111";
        ram[52] = "0b00111110011100000100111000011101";
        ram[53] = "0b00111110101000111101110000111001";
        ram[54] = "0b00111110101011000011101011000001";
        ram[55] = "0b00111110010011111010000001111010";
        ram[56] = "0b00111110101111001001100011011100";
        ram[57] = "0b00111101101110011011100000100000";
        ram[58] = "0b10111110101011001000100100000010";
        ram[59] = "0b00111110100111001101101110000001";
        ram[60] = "0b00111110010101111011000000000010";
        ram[61] = "0b10111110101011101100111011100111";
        ram[62] = "0b10111101101011001101110000100001";
        ram[63] = "0b10111100110111000000111110011010";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(k2c_dot_2_dense_1bdk) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 64;
static const unsigned AddressWidth = 6;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


k2c_dot_2_dense_1bdk_ram* meminst;


SC_CTOR(k2c_dot_2_dense_1bdk) {
meminst = new k2c_dot_2_dense_1bdk_ram("k2c_dot_2_dense_1bdk_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~k2c_dot_2_dense_1bdk() {
    delete meminst;
}


};//endmodule
#endif
