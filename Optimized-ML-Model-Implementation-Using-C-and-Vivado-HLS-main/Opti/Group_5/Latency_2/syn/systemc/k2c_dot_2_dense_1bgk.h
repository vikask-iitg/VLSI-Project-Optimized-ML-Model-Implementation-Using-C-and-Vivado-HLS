// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef __k2c_dot_2_dense_1bgk_H__
#define __k2c_dot_2_dense_1bgk_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct k2c_dot_2_dense_1bgk_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 64;
  static const unsigned AddressWidth = 6;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(k2c_dot_2_dense_1bgk_ram) {
        ram[0] = "0b00111110010010001111100111011001";
        ram[1] = "0b00111110100000101000000111110001";
        ram[2] = "0b10111101110010001010110000110111";
        ram[3] = "0b00111110010010101010011100111100";
        ram[4] = "0b10111110001110010000111001100101";
        ram[5] = "0b10111110000111011101101000000010";
        ram[6] = "0b00111101101011110011110110010011";
        ram[7] = "0b10111110000001111011110100010100";
        ram[8] = "0b10111101110110110101111111011110";
        ram[9] = "0b00111110011000011110111011101110";
        ram[10] = "0b00111110110000011101100101110101";
        ram[11] = "0b10111101100000010011010010111001";
        ram[12] = "0b00111101010111111001100001100101";
        ram[13] = "0b00111101010111111000000111110011";
        ram[14] = "0b00111110010110110110011110011000";
        ram[15] = "0b10111110000000010011010110110010";
        ram[16] = "0b00111110000000100101111011111100";
        ram[17] = "0b10111100110000101011010001000100";
        ram[18] = "0b10111101101000010001001110100100";
        ram[19] = "0b10111110011110010110001111110001";
        ram[20] = "0b10111110011010010000001011110011";
        ram[21] = "0b00111110011111000001111110010011";
        ram[22] = "0b10111101110011000101010100011001";
        ram[23] = "0b00111110100110111100111110001111";
        ram[24] = "0b10111110000011010000010011101111";
        ram[25] = "0b10111110001011110100111101111101";
        ram[26] = "0b00111101011000010011001111000000";
        ram[27] = "0b00111101001011111101001011000010";
        ram[28] = "0b00111110000001001100000111110000";
        ram[29] = "0b10111110100100100101000111100111";
        ram[30] = "0b00111101010111101010111111001001";
        ram[31] = "0b00111101100011010001011100001001";
        ram[32] = "0b10111101101001010111010100001000";
        ram[33] = "0b10111110010001111000011100110101";
        ram[34] = "0b10111110100101111100110100011110";
        ram[35] = "0b10111110010000101011000000100100";
        ram[36] = "0b10111110100101001000100011100011";
        ram[37] = "0b10111011111010001110000110010101";
        ram[38] = "0b10111110101111111000110000011100";
        ram[39] = "0b10111101110110010110110001010110";
        ram[40] = "0b10111110001111101100000000001111";
        ram[41] = "0b00111110010010100011000010100010";
        ram[42] = "0b00111110010110001100100000101110";
        ram[43] = "0b10111110100001110010010000001111";
        ram[44] = "0b00111101000001111111101010100110";
        ram[45] = "0b10111110101010110010110101001011";
        ram[46] = "0b00111110001001010101110010111010";
        ram[47] = "0b00111110010111101000011101000011";
        ram[48] = "0b00111110101100011101001101110111";
        ram[49] = "0b10111100010010001100111110101100";
        ram[50] = "0b10111101111001100100011000010001";
        ram[51] = "0b10111110100001101011011111111011";
        ram[52] = "0b00111110100010101111001011101000";
        ram[53] = "0b10111110100101001011000111011100";
        ram[54] = "0b10111101110010010111011001011110";
        ram[55] = "0b10111110001101101001101101111000";
        ram[56] = "0b10111101011011100101010011001111";
        ram[57] = "0b10111101011100111100100101101111";
        ram[58] = "0b10111110010100011000011101000010";
        ram[59] = "0b00111101101100110011100010001100";
        ram[60] = "0b10111110100110000011110000001111";
        ram[61] = "0b00111100011000000111100110100111";
        ram[62] = "0b00111110000010011000001111011111";
        ram[63] = "0b10111110100101000001001110110000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(k2c_dot_2_dense_1bgk) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 64;
static const unsigned AddressWidth = 6;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


k2c_dot_2_dense_1bgk_ram* meminst;


SC_CTOR(k2c_dot_2_dense_1bgk) {
meminst = new k2c_dot_2_dense_1bgk_ram("k2c_dot_2_dense_1bgk_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~k2c_dot_2_dense_1bgk() {
    delete meminst;
}


};//endmodule
#endif
