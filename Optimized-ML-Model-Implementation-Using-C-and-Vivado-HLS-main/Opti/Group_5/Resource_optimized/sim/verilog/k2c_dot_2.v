// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module k2c_dot_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        C_array_address0,
        C_array_ce0,
        C_array_we0,
        C_array_d0,
        C_array_q0,
        A_array_address0,
        A_array_ce0,
        A_array_q0,
        A_dim,
        A_numel_read,
        B_dim,
        B_numel_read,
        p_read2
);

parameter    ap_ST_fsm_state1 = 150'd1;
parameter    ap_ST_fsm_state2 = 150'd2;
parameter    ap_ST_fsm_state3 = 150'd4;
parameter    ap_ST_fsm_state4 = 150'd8;
parameter    ap_ST_fsm_state5 = 150'd16;
parameter    ap_ST_fsm_state6 = 150'd32;
parameter    ap_ST_fsm_state7 = 150'd64;
parameter    ap_ST_fsm_state8 = 150'd128;
parameter    ap_ST_fsm_state9 = 150'd256;
parameter    ap_ST_fsm_state10 = 150'd512;
parameter    ap_ST_fsm_state11 = 150'd1024;
parameter    ap_ST_fsm_state12 = 150'd2048;
parameter    ap_ST_fsm_state13 = 150'd4096;
parameter    ap_ST_fsm_state14 = 150'd8192;
parameter    ap_ST_fsm_state15 = 150'd16384;
parameter    ap_ST_fsm_state16 = 150'd32768;
parameter    ap_ST_fsm_state17 = 150'd65536;
parameter    ap_ST_fsm_state18 = 150'd131072;
parameter    ap_ST_fsm_state19 = 150'd262144;
parameter    ap_ST_fsm_state20 = 150'd524288;
parameter    ap_ST_fsm_state21 = 150'd1048576;
parameter    ap_ST_fsm_state22 = 150'd2097152;
parameter    ap_ST_fsm_state23 = 150'd4194304;
parameter    ap_ST_fsm_state24 = 150'd8388608;
parameter    ap_ST_fsm_state25 = 150'd16777216;
parameter    ap_ST_fsm_state26 = 150'd33554432;
parameter    ap_ST_fsm_state27 = 150'd67108864;
parameter    ap_ST_fsm_state28 = 150'd134217728;
parameter    ap_ST_fsm_state29 = 150'd268435456;
parameter    ap_ST_fsm_state30 = 150'd536870912;
parameter    ap_ST_fsm_state31 = 150'd1073741824;
parameter    ap_ST_fsm_state32 = 150'd2147483648;
parameter    ap_ST_fsm_state33 = 150'd4294967296;
parameter    ap_ST_fsm_state34 = 150'd8589934592;
parameter    ap_ST_fsm_state35 = 150'd17179869184;
parameter    ap_ST_fsm_state36 = 150'd34359738368;
parameter    ap_ST_fsm_state37 = 150'd68719476736;
parameter    ap_ST_fsm_state38 = 150'd137438953472;
parameter    ap_ST_fsm_state39 = 150'd274877906944;
parameter    ap_ST_fsm_state40 = 150'd549755813888;
parameter    ap_ST_fsm_state41 = 150'd1099511627776;
parameter    ap_ST_fsm_state42 = 150'd2199023255552;
parameter    ap_ST_fsm_state43 = 150'd4398046511104;
parameter    ap_ST_fsm_state44 = 150'd8796093022208;
parameter    ap_ST_fsm_state45 = 150'd17592186044416;
parameter    ap_ST_fsm_state46 = 150'd35184372088832;
parameter    ap_ST_fsm_state47 = 150'd70368744177664;
parameter    ap_ST_fsm_state48 = 150'd140737488355328;
parameter    ap_ST_fsm_state49 = 150'd281474976710656;
parameter    ap_ST_fsm_state50 = 150'd562949953421312;
parameter    ap_ST_fsm_state51 = 150'd1125899906842624;
parameter    ap_ST_fsm_state52 = 150'd2251799813685248;
parameter    ap_ST_fsm_state53 = 150'd4503599627370496;
parameter    ap_ST_fsm_state54 = 150'd9007199254740992;
parameter    ap_ST_fsm_state55 = 150'd18014398509481984;
parameter    ap_ST_fsm_state56 = 150'd36028797018963968;
parameter    ap_ST_fsm_state57 = 150'd72057594037927936;
parameter    ap_ST_fsm_state58 = 150'd144115188075855872;
parameter    ap_ST_fsm_state59 = 150'd288230376151711744;
parameter    ap_ST_fsm_state60 = 150'd576460752303423488;
parameter    ap_ST_fsm_state61 = 150'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 150'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 150'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 150'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 150'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 150'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 150'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 150'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 150'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 150'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 150'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 150'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 150'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 150'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 150'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 150'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 150'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 150'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 150'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 150'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 150'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 150'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 150'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 150'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 150'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 150'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 150'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 150'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 150'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 150'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 150'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 150'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 150'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 150'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 150'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 150'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 150'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 150'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 150'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 150'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 150'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 150'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 150'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 150'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 150'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 150'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 150'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 150'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 150'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 150'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 150'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 150'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 150'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 150'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 150'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 150'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 150'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 150'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 150'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 150'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 150'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 150'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 150'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 150'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 150'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 150'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 150'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 150'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 150'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 150'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 150'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 150'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 150'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 150'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 150'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 150'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 150'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 150'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 150'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 150'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 150'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 150'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 150'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 150'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 150'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 150'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 150'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 150'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 150'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 150'd713623846352979940529142984724747568191373312;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] C_array_address0;
output   C_array_ce0;
output   C_array_we0;
output  [31:0] C_array_d0;
input  [31:0] C_array_q0;
output  [4:0] A_array_address0;
output   A_array_ce0;
input  [31:0] A_array_q0;
input  [63:0] A_dim;
input  [63:0] A_numel_read;
input  [63:0] B_dim;
input  [63:0] B_numel_read;
input  [63:0] p_read2;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] C_array_address0;
reg C_array_ce0;
reg C_array_we0;
reg[31:0] C_array_d0;
reg A_array_ce0;

(* fsm_encoding = "none" *) reg   [149:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [2:0] dense_14_output_shap_address0;
reg    dense_14_output_shap_ce0;
wire   [63:0] dense_14_output_shap_q0;
reg   [2:0] dense_15_kernel_shap_address0;
reg    dense_15_kernel_shap_ce0;
wire   [63:0] dense_15_kernel_shap_q0;
reg   [9:0] dense_15_fwork_address0;
reg    dense_15_fwork_ce0;
reg    dense_15_fwork_we0;
reg   [31:0] dense_15_fwork_d0;
wire   [31:0] dense_15_fwork_q0;
wire   [9:0] dense_15_fwork_address1;
reg    dense_15_fwork_ce1;
wire   [31:0] dense_15_fwork_q1;
wire   [8:0] dense_15_kernel_arra_address0;
reg    dense_15_kernel_arra_ce0;
wire   [31:0] dense_15_kernel_arra_q0;
reg   [63:0] reg_847;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state87;
wire   [63:0] permA_q1;
reg   [63:0] reg_852;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state89;
wire   [63:0] permB_q0;
reg   [63:0] reg_858;
wire    ap_CS_fsm_state94;
wire    ap_CS_fsm_state98;
wire   [63:0] i_12_s_fu_881_p2;
reg   [63:0] i_12_s_reg_1483;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond1_fu_864_p2;
wire   [0:0] tmp_1_10_fu_892_p2;
reg   [0:0] tmp_1_10_reg_1492;
wire    ap_CS_fsm_state3;
wire   [63:0] count_4_1_fu_896_p2;
wire    ap_CS_fsm_state4;
wire   [63:0] i_12_1_fu_902_p2;
reg   [63:0] i_12_1_reg_1501;
wire   [63:0] count_3_cast_fu_931_p1;
reg   [63:0] count_3_cast_reg_1512;
wire    ap_CS_fsm_state6;
wire   [0:0] exitcond2_fu_908_p2;
wire   [63:0] i_15_s_fu_935_p2;
reg   [63:0] i_15_s_reg_1517;
wire   [63:0] i_15_1_fu_946_p2;
reg   [63:0] i_15_1_reg_1525;
wire   [0:0] exitcond2_1_fu_941_p2;
wire   [2:0] count_5_1_fu_952_p2;
wire    ap_CS_fsm_state7;
wire  signed [10:0] tmp_19_fu_958_p1;
reg  signed [10:0] tmp_19_reg_1540;
wire   [6:0] tmp_20_fu_962_p1;
reg   [6:0] tmp_20_reg_1545;
wire  signed [63:0] grp_fu_966_p2;
reg  signed [63:0] free_axesA_reg_1550;
wire    ap_CS_fsm_state76;
wire   [58:0] free_axesB_fu_971_p4;
reg   [58:0] free_axesB_reg_1556;
wire   [63:0] free_axesB_2_fu_980_p1;
reg   [63:0] free_axesB_2_reg_1561;
reg  signed [10:0] free_axesB_cast6_reg_1566;
reg  signed [5:0] free_axesB_cast5_reg_1571;
wire   [63:0] i_15_fu_1005_p2;
reg   [63:0] i_15_reg_1576;
wire   [2:0] i_15_cast_fu_1010_p2;
reg   [2:0] i_15_cast_reg_1582;
wire   [63:0] i_4_cast_fu_1016_p1;
reg   [63:0] i_4_cast_reg_1587;
wire    ap_CS_fsm_state77;
wire   [0:0] exitcond8_fu_1021_p2;
reg   [0:0] exitcond8_reg_1592;
wire   [63:0] i_18_cast_fu_1032_p1;
reg   [63:0] i_18_cast_reg_1601;
wire    ap_CS_fsm_state78;
wire   [0:0] exitcond8_1_fu_1037_p2;
wire   [2:0] i_18_1_fu_1042_p2;
reg   [2:0] i_18_1_reg_1614;
wire   [2:0] i_19_1_fu_1074_p2;
wire    ap_CS_fsm_state80;
wire   [0:0] tmp_2_fu_1053_p2;
wire   [0:0] tmp_2_1_fu_1069_p2;
wire   [63:0] i_7_cast_fu_1080_p1;
reg   [63:0] i_7_cast_reg_1630;
wire    ap_CS_fsm_state81;
wire   [0:0] tmp_3_fu_1084_p2;
reg   [0:0] tmp_3_reg_1635;
wire   [63:0] i_21_cast_fu_1095_p1;
reg   [63:0] i_21_cast_reg_1644;
wire    ap_CS_fsm_state82;
wire   [0:0] tmp_3_1_fu_1114_p2;
wire   [2:0] i_21_1_fu_1119_p2;
reg   [2:0] i_21_1_reg_1657;
wire   [63:0] j_9_1_fu_1125_p2;
reg   [63:0] j_9_1_reg_1662;
wire   [63:0] i_8_cast_fu_1131_p1;
reg   [63:0] i_8_cast_reg_1667;
wire    ap_CS_fsm_state84;
wire   [0:0] exitcond13_fu_1136_p2;
reg   [0:0] exitcond13_reg_1672;
wire    ap_CS_fsm_state86;
wire   [63:0] i_22_cast_fu_1147_p1;
reg   [63:0] i_22_cast_reg_1686;
wire    ap_CS_fsm_state88;
wire   [0:0] exitcond13_1_fu_1152_p2;
wire   [2:0] i_22_1_fu_1157_p2;
reg   [2:0] i_22_1_reg_1699;
wire   [2:0] dense_14_output_shap_5_gep_fu_316_p3;
wire    ap_CS_fsm_state90;
reg   [63:0] dense_14_output_shap_6_reg_1709;
wire    ap_CS_fsm_state91;
wire   [63:0] i_9_cast_fu_1163_p1;
reg   [63:0] i_9_cast_reg_1714;
wire    ap_CS_fsm_state93;
wire   [0:0] exitcond12_fu_1168_p2;
reg   [0:0] exitcond12_reg_1719;
wire    ap_CS_fsm_state95;
reg   [63:0] dense_15_kernel_shap_2_reg_1733;
wire    ap_CS_fsm_state96;
wire   [63:0] i_23_cast_fu_1179_p1;
reg   [63:0] i_23_cast_reg_1738;
wire    ap_CS_fsm_state97;
wire   [0:0] exitcond12_1_fu_1184_p2;
wire   [2:0] i_23_1_fu_1189_p2;
reg   [2:0] i_23_1_reg_1751;
wire   [2:0] dense_15_kernel_shap_3_gep_fu_370_p3;
wire    ap_CS_fsm_state99;
reg   [63:0] dense_15_kernel_shap_4_reg_1761;
wire    ap_CS_fsm_state100;
wire   [63:0] i_17_fu_1200_p2;
reg   [63:0] i_17_reg_1769;
wire    ap_CS_fsm_state102;
wire   [10:0] tmp_23_fu_1206_p1;
reg   [10:0] tmp_23_reg_1774;
wire   [0:0] exitcond6_fu_1195_p2;
wire   [63:0] j_4_cast_fu_1209_p1;
reg   [63:0] j_4_cast_reg_1780;
wire    ap_CS_fsm_state104;
wire   [0:0] exitcond11_fu_1214_p2;
reg   [0:0] exitcond11_reg_1785;
wire    ap_CS_fsm_state105;
wire   [63:0] j_10_cast_fu_1225_p1;
reg   [63:0] j_10_cast_reg_1799;
wire    ap_CS_fsm_state106;
wire   [0:0] exitcond11_1_fu_1230_p2;
wire   [2:0] j_10_1_fu_1235_p2;
reg   [2:0] j_10_1_reg_1812;
wire    ap_CS_fsm_state107;
reg   [31:0] A_array_load_reg_1827;
wire    ap_CS_fsm_state109;
wire   [63:0] i_18_fu_1246_p2;
reg   [63:0] i_18_reg_1835;
wire    ap_CS_fsm_state111;
wire   [63:0] j_5_cast_fu_1256_p1;
reg   [63:0] j_5_cast_reg_1840;
wire    ap_CS_fsm_state113;
wire   [0:0] exitcond10_fu_1261_p2;
reg   [0:0] exitcond10_reg_1845;
wire    ap_CS_fsm_state114;
wire   [63:0] j_11_cast_fu_1272_p1;
reg   [63:0] j_11_cast_reg_1859;
wire    ap_CS_fsm_state115;
wire   [0:0] exitcond10_1_fu_1277_p2;
wire   [2:0] j_11_1_fu_1282_p2;
reg   [2:0] j_11_1_reg_1872;
wire   [2:0] Bsub_addr_6_gep_fu_509_p3;
wire    ap_CS_fsm_state116;
reg   [31:0] dense_15_kernel_arra_2_reg_1887;
wire    ap_CS_fsm_state118;
wire   [10:0] sum_fu_1292_p2;
reg   [10:0] sum_reg_1892;
wire    ap_CS_fsm_state119;
wire    grp_k2c_sub2idx_fu_831_ap_idle;
wire    grp_k2c_sub2idx_fu_831_ap_ready;
wire    grp_k2c_sub2idx_fu_831_ap_done;
wire   [63:0] grp_fu_1252_p2;
reg   [63:0] tmp_6_reg_1897;
wire    ap_CS_fsm_state125;
wire   [4:0] i_16_fu_1311_p2;
wire    ap_CS_fsm_state126;
wire    ap_CS_fsm_state127;
wire   [63:0] i_20_fu_1330_p2;
reg   [63:0] i_20_reg_1918;
wire   [5:0] outrowidx_fu_1336_p2;
reg   [5:0] outrowidx_reg_1923;
wire   [0:0] tmp_7_fu_1325_p2;
wire  signed [10:0] grp_fu_1413_p2;
reg  signed [10:0] inneridx_reg_1928;
wire    ap_CS_fsm_state129;
wire   [10:0] k_cast3_fu_1341_p1;
wire    ap_CS_fsm_state130;
wire   [5:0] k_1_fu_1354_p2;
reg   [5:0] k_1_reg_1941;
reg   [9:0] dense_15_fwork_addr_2_reg_1946;
wire   [0:0] exitcond_fu_1349_p2;
wire  signed [10:0] grp_fu_1418_p2;
reg  signed [10:0] tmp_s_reg_1951;
wire    ap_CS_fsm_state132;
wire   [58:0] j_fu_1383_p2;
reg   [58:0] j_reg_1959;
wire    ap_CS_fsm_state133;
(* use_dsp48 = "no" *) wire   [10:0] sum5_fu_1394_p2;
reg   [10:0] sum5_reg_1964;
wire   [0:0] exitcond3_fu_1378_p2;
reg   [3:0] C_array_addr_2_reg_1969;
wire    ap_CS_fsm_state134;
reg   [31:0] dense_15_fwork_load_reg_1979;
wire    ap_CS_fsm_state135;
reg   [31:0] dense_15_fwork_load_1_reg_1984;
wire   [31:0] grp_fu_843_p2;
reg   [31:0] tmp_4_reg_1989;
wire    ap_CS_fsm_state140;
reg   [31:0] C_array_load_reg_1994;
wire   [31:0] grp_fu_839_p2;
reg   [31:0] tmp_8_reg_1999;
wire    ap_CS_fsm_state149;
reg   [2:0] permA_address0;
reg    permA_ce0;
reg    permA_we0;
reg   [63:0] permA_d0;
wire   [63:0] permA_q0;
reg   [2:0] permA_address1;
reg    permA_ce1;
reg    permA_we1;
reg   [2:0] permB_address0;
reg    permB_ce0;
reg    permB_we0;
reg   [63:0] permB_d0;
reg   [2:0] freeA_address0;
reg    freeA_ce0;
reg    freeA_we0;
reg   [63:0] freeA_d0;
wire   [63:0] freeA_q0;
reg   [2:0] freeB_address0;
reg    freeB_ce0;
reg    freeB_we0;
reg   [63:0] freeB_d0;
wire   [63:0] freeB_q0;
reg   [2:0] newshpA_address0;
reg    newshpA_ce0;
reg    newshpA_we0;
reg   [63:0] newshpA_d0;
wire   [63:0] newshpA_q0;
reg   [2:0] newshpB_address0;
reg    newshpB_ce0;
reg    newshpB_we0;
reg   [63:0] newshpB_d0;
wire   [63:0] newshpB_q0;
reg   [2:0] Asub_address0;
reg    Asub_ce0;
reg    Asub_we0;
reg   [63:0] Asub_d0;
wire   [63:0] Asub_q0;
reg   [2:0] Bsub_address0;
reg    Bsub_ce0;
reg    Bsub_we0;
reg   [63:0] Bsub_d0;
wire   [63:0] Bsub_q0;
wire    grp_k2c_idx2sub_fu_819_ap_start;
wire    grp_k2c_idx2sub_fu_819_ap_done;
wire    grp_k2c_idx2sub_fu_819_ap_idle;
wire    grp_k2c_idx2sub_fu_819_ap_ready;
reg   [63:0] grp_k2c_idx2sub_fu_819_idx;
wire   [2:0] grp_k2c_idx2sub_fu_819_sub_address0;
wire    grp_k2c_idx2sub_fu_819_sub_ce0;
wire    grp_k2c_idx2sub_fu_819_sub_we0;
wire   [63:0] grp_k2c_idx2sub_fu_819_sub_d0;
wire   [2:0] grp_k2c_idx2sub_fu_819_shape_address0;
wire    grp_k2c_idx2sub_fu_819_shape_ce0;
reg   [63:0] grp_k2c_idx2sub_fu_819_shape_q0;
reg   [63:0] grp_k2c_idx2sub_fu_819_ndim;
wire    grp_k2c_sub2idx_fu_831_ap_start;
wire   [2:0] grp_k2c_sub2idx_fu_831_sub_address0;
wire    grp_k2c_sub2idx_fu_831_sub_ce0;
reg   [63:0] grp_k2c_sub2idx_fu_831_sub_q0;
wire   [2:0] grp_k2c_sub2idx_fu_831_shape_address0;
wire    grp_k2c_sub2idx_fu_831_shape_ce0;
reg   [63:0] grp_k2c_sub2idx_fu_831_shape_q0;
reg   [63:0] grp_k2c_sub2idx_fu_831_ndim;
wire   [63:0] grp_k2c_sub2idx_fu_831_ap_return;
reg   [63:0] count_reg_572;
wire    ap_CS_fsm_state5;
reg   [63:0] i_reg_584;
wire   [63:0] count_4_fu_874_p2;
reg   [63:0] count_1_reg_597;
wire   [0:0] tmp_1_fu_869_p2;
reg   [63:0] count_1_1_reg_609;
reg   [2:0] count_2_reg_621;
wire   [0:0] exitcond1_1_fu_887_p2;
reg   [63:0] i_1_reg_632;
wire   [2:0] count_5_fu_924_p2;
reg   [2:0] ap_phi_mux_count_3_phi_fu_647_p4;
reg   [2:0] count_3_reg_644;
wire   [0:0] tmp_fu_913_p2;
reg   [2:0] i_4_reg_655;
wire    ap_CS_fsm_state79;
reg   [2:0] i_5_reg_667;
reg   [2:0] i_7_reg_676;
wire    ap_CS_fsm_state83;
reg   [63:0] j_3_reg_688;
reg   [2:0] i_8_reg_701;
wire    ap_CS_fsm_state92;
reg   [2:0] i_9_reg_713;
wire    ap_CS_fsm_state101;
reg   [63:0] i_s_reg_725;
wire    ap_CS_fsm_state110;
reg   [2:0] j_4_reg_738;
wire    ap_CS_fsm_state103;
wire    ap_CS_fsm_state108;
reg   [63:0] i_10_reg_750;
wire    ap_CS_fsm_state120;
reg   [2:0] j_5_reg_763;
wire    ap_CS_fsm_state112;
wire    ap_CS_fsm_state117;
reg   [4:0] i_11_reg_775;
wire   [0:0] exitcond5_fu_1306_p2;
reg   [63:0] i_14_reg_786;
reg   [5:0] k_reg_797;
reg   [58:0] j_s_reg_808;
wire    ap_CS_fsm_state150;
reg    grp_k2c_idx2sub_fu_819_ap_start_reg;
wire   [0:0] exitcond7_fu_1241_p2;
reg    grp_k2c_sub2idx_fu_831_ap_start_reg;
wire   [63:0] count_2_cast4_fu_919_p1;
wire   [63:0] i_5_cast_fu_1048_p1;
wire   [63:0] i_19_cast_fu_1064_p1;
wire   [63:0] j_9_cast_fu_1109_p1;
wire   [63:0] sum_cast_fu_1297_p1;
wire   [63:0] i_11_cast_fu_1301_p1;
wire   [63:0] sum4_cast_fu_1365_p1;
wire   [63:0] sum2_cast_fu_1404_p1;
wire   [63:0] sum5_cast_fu_1409_p1;
wire    ap_CS_fsm_state139;
wire    ap_CS_fsm_state141;
wire    ap_CS_fsm_state136;
wire   [7:0] grp_fu_966_p1;
wire    ap_CS_fsm_state9;
wire   [2:0] tmp_21_fu_1002_p1;
wire   [2:0] i_18_s_fu_1026_p2;
wire   [2:0] i_19_fu_1058_p2;
wire   [2:0] i_21_fu_1089_p2;
wire   [3:0] tmp_22_fu_1099_p1;
wire   [3:0] j_9_s_fu_1103_p2;
wire   [2:0] i_22_s_fu_1141_p2;
wire   [2:0] i_23_s_fu_1173_p2;
wire   [2:0] j_10_s_fu_1219_p2;
wire   [58:0] grp_fu_1252_p0;
wire   [2:0] j_11_s_fu_1266_p2;
wire   [10:0] tmp_26_fu_1288_p1;
wire  signed [5:0] tmp_25_fu_1321_p1;
wire   [6:0] k_cast_fu_1345_p1;
(* use_dsp48 = "no" *) wire   [10:0] sum4_fu_1360_p2;
wire   [10:0] tmp_27_fu_1370_p1;
wire   [10:0] tmp1_fu_1389_p2;
wire   [5:0] tmp_28_fu_1374_p1;
wire   [5:0] sum2_fu_1399_p2;
wire  signed [10:0] grp_fu_1413_p1;
wire   [5:0] grp_fu_1418_p0;
reg    grp_fu_966_ap_start;
wire    grp_fu_966_ap_done;
reg   [149:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 150'd1;
#0 grp_k2c_idx2sub_fu_819_ap_start_reg = 1'b0;
#0 grp_k2c_sub2idx_fu_831_ap_start_reg = 1'b0;
end

k2c_dot_2_dense_1zec #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dense_14_output_shap_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_14_output_shap_address0),
    .ce0(dense_14_output_shap_ce0),
    .q0(dense_14_output_shap_q0)
);

k2c_dot_2_dense_1Aem #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dense_15_kernel_shap_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_15_kernel_shap_address0),
    .ce0(dense_15_kernel_shap_ce0),
    .q0(dense_15_kernel_shap_q0)
);

k2c_dot_2_dense_1Bew #(
    .DataWidth( 32 ),
    .AddressRange( 544 ),
    .AddressWidth( 10 ))
dense_15_fwork_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_15_fwork_address0),
    .ce0(dense_15_fwork_ce0),
    .we0(dense_15_fwork_we0),
    .d0(dense_15_fwork_d0),
    .q0(dense_15_fwork_q0),
    .address1(dense_15_fwork_address1),
    .ce1(dense_15_fwork_ce1),
    .q1(dense_15_fwork_q1)
);

k2c_dot_2_dense_1CeG #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
dense_15_kernel_arra_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_15_kernel_arra_address0),
    .ce0(dense_15_kernel_arra_ce0),
    .q0(dense_15_kernel_arra_q0)
);

k2c_dot_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
permA_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(permA_address0),
    .ce0(permA_ce0),
    .we0(permA_we0),
    .d0(permA_d0),
    .q0(permA_q0),
    .address1(permA_address1),
    .ce1(permA_ce1),
    .we1(permA_we1),
    .d1(p_read2),
    .q1(permA_q1)
);

k2c_dot_permB #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
permB_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(permB_address0),
    .ce0(permB_ce0),
    .we0(permB_we0),
    .d0(permB_d0),
    .q0(permB_q0)
);

k2c_dot_permB #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
freeA_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(freeA_address0),
    .ce0(freeA_ce0),
    .we0(freeA_we0),
    .d0(freeA_d0),
    .q0(freeA_q0)
);

k2c_dot_permB #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
freeB_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(freeB_address0),
    .ce0(freeB_ce0),
    .we0(freeB_we0),
    .d0(freeB_d0),
    .q0(freeB_q0)
);

k2c_dot_permB #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
newshpA_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(newshpA_address0),
    .ce0(newshpA_ce0),
    .we0(newshpA_we0),
    .d0(newshpA_d0),
    .q0(newshpA_q0)
);

k2c_dot_permB #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
newshpB_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(newshpB_address0),
    .ce0(newshpB_ce0),
    .we0(newshpB_we0),
    .d0(newshpB_d0),
    .q0(newshpB_q0)
);

k2c_dot_permB #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
Asub_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Asub_address0),
    .ce0(Asub_ce0),
    .we0(Asub_we0),
    .d0(Asub_d0),
    .q0(Asub_q0)
);

k2c_dot_permB #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
Bsub_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Bsub_address0),
    .ce0(Bsub_ce0),
    .we0(Bsub_we0),
    .d0(Bsub_d0),
    .q0(Bsub_q0)
);

k2c_idx2sub grp_k2c_idx2sub_fu_819(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_idx2sub_fu_819_ap_start),
    .ap_done(grp_k2c_idx2sub_fu_819_ap_done),
    .ap_idle(grp_k2c_idx2sub_fu_819_ap_idle),
    .ap_ready(grp_k2c_idx2sub_fu_819_ap_ready),
    .idx(grp_k2c_idx2sub_fu_819_idx),
    .sub_address0(grp_k2c_idx2sub_fu_819_sub_address0),
    .sub_ce0(grp_k2c_idx2sub_fu_819_sub_ce0),
    .sub_we0(grp_k2c_idx2sub_fu_819_sub_we0),
    .sub_d0(grp_k2c_idx2sub_fu_819_sub_d0),
    .shape_address0(grp_k2c_idx2sub_fu_819_shape_address0),
    .shape_ce0(grp_k2c_idx2sub_fu_819_shape_ce0),
    .shape_q0(grp_k2c_idx2sub_fu_819_shape_q0),
    .ndim(grp_k2c_idx2sub_fu_819_ndim)
);

k2c_sub2idx grp_k2c_sub2idx_fu_831(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_sub2idx_fu_831_ap_start),
    .ap_done(grp_k2c_sub2idx_fu_831_ap_done),
    .ap_idle(grp_k2c_sub2idx_fu_831_ap_idle),
    .ap_ready(grp_k2c_sub2idx_fu_831_ap_ready),
    .sub_address0(grp_k2c_sub2idx_fu_831_sub_address0),
    .sub_ce0(grp_k2c_sub2idx_fu_831_sub_ce0),
    .sub_q0(grp_k2c_sub2idx_fu_831_sub_q0),
    .shape_address0(grp_k2c_sub2idx_fu_831_shape_address0),
    .shape_ce0(grp_k2c_sub2idx_fu_831_shape_ce0),
    .shape_q0(grp_k2c_sub2idx_fu_831_shape_q0),
    .ndim(grp_k2c_sub2idx_fu_831_ndim),
    .ap_return(grp_k2c_sub2idx_fu_831_ap_return)
);

sample_fadd_32ns_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample_fadd_32ns_hbi_U99(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(C_array_load_reg_1994),
    .din1(tmp_4_reg_1989),
    .ce(1'b1),
    .dout(grp_fu_839_p2)
);

sample_fmul_32ns_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample_fmul_32ns_ibs_U100(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(dense_15_fwork_load_reg_1979),
    .din1(dense_15_fwork_load_1_reg_1984),
    .ce(1'b1),
    .dout(grp_fu_843_p2)
);

sample_udiv_64ns_DeQ #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 64 ))
sample_udiv_64ns_DeQ_U101(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_966_ap_start),
    .done(grp_fu_966_ap_done),
    .din0(A_numel_read),
    .din1(grp_fu_966_p1),
    .ce(1'b1),
    .dout(grp_fu_966_p2)
);

sample_mul_59ns_6Ee0 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 59 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sample_mul_59ns_6Ee0_U102(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1252_p0),
    .din1(free_axesA_reg_1550),
    .ce(1'b1),
    .dout(grp_fu_1252_p2)
);

sample_mul_mul_11Ffa #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
sample_mul_mul_11Ffa_U103(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_19_reg_1540),
    .din1(grp_fu_1413_p1),
    .ce(1'b1),
    .dout(grp_fu_1413_p2)
);

sample_mul_mul_6nGfk #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
sample_mul_mul_6nGfk_U104(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1418_p0),
    .din1(free_axesB_cast6_reg_1566),
    .ce(1'b1),
    .dout(grp_fu_1418_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_idx2sub_fu_819_ap_start_reg <= 1'b0;
    end else begin
        if ((((exitcond7_fu_1241_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state111)) | ((exitcond6_fu_1195_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state102)))) begin
            grp_k2c_idx2sub_fu_819_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_idx2sub_fu_819_ap_ready == 1'b1)) begin
            grp_k2c_idx2sub_fu_819_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_sub2idx_fu_831_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state109))) begin
            grp_k2c_sub2idx_fu_831_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_sub2idx_fu_831_ap_ready == 1'b1)) begin
            grp_k2c_sub2idx_fu_831_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_10_fu_892_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        count_1_1_reg_609 <= count_1_reg_597;
    end else if (((tmp_1_10_reg_1492 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        count_1_1_reg_609 <= count_4_1_fu_896_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_864_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        if ((tmp_1_fu_869_p2 == 1'd1)) begin
            count_1_reg_597 <= count_reg_572;
        end else if ((tmp_1_fu_869_p2 == 1'd0)) begin
            count_1_reg_597 <= count_4_fu_874_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & ((exitcond1_1_fu_887_p2 == 1'd1) | (exitcond1_fu_864_p2 == 1'd1)))) begin
        count_2_reg_621 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        count_2_reg_621 <= count_5_1_fu_952_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_908_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        if ((tmp_fu_913_p2 == 1'd1)) begin
            count_3_reg_644 <= count_2_reg_621;
        end else if ((tmp_fu_913_p2 == 1'd0)) begin
            count_3_reg_644 <= count_5_fu_924_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        count_reg_572 <= count_1_1_reg_609;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        count_reg_572 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_1195_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state102))) begin
        i_10_reg_750 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        i_10_reg_750 <= i_18_reg_1835;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_1306_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state126))) begin
        i_11_reg_775 <= i_16_fu_1311_p2;
    end else if ((1'b1 == ap_CS_fsm_state125)) begin
        i_11_reg_775 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_1306_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state126))) begin
        i_14_reg_786 <= 64'd0;
    end else if (((exitcond_fu_1349_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state130))) begin
        i_14_reg_786 <= i_20_reg_1918;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & ((exitcond1_1_fu_887_p2 == 1'd1) | (exitcond1_fu_864_p2 == 1'd1)))) begin
        i_1_reg_632 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i_1_reg_632 <= i_15_1_reg_1525;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        i_4_reg_655 <= i_18_1_reg_1614;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        i_4_reg_655 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state78) & ((exitcond8_1_fu_1037_p2 == 1'd1) | (exitcond8_reg_1592 == 1'd1)))) begin
        i_5_reg_667 <= i_15_cast_reg_1582;
    end else if (((tmp_2_1_fu_1069_p2 == 1'd1) & (tmp_2_fu_1053_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
        i_5_reg_667 <= i_19_1_fu_1074_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & ((tmp_2_1_fu_1069_p2 == 1'd0) | (tmp_2_fu_1053_p2 == 1'd0)))) begin
        i_7_reg_676 <= 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        i_7_reg_676 <= i_21_1_reg_1657;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) & ((tmp_3_1_fu_1114_p2 == 1'd0) | (tmp_3_reg_1635 == 1'd0)))) begin
        i_8_reg_701 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        i_8_reg_701 <= i_22_1_reg_1699;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state88) & ((exitcond13_1_fu_1152_p2 == 1'd1) | (exitcond13_reg_1672 == 1'd1)))) begin
        i_9_reg_713 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        i_9_reg_713 <= i_23_1_reg_1751;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_reg_584 <= i_12_1_reg_1501;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_584 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state97) & ((exitcond12_1_fu_1184_p2 == 1'd1) | (exitcond12_reg_1719 == 1'd1)))) begin
        i_s_reg_725 <= 64'd0;
    end else if (((grp_k2c_sub2idx_fu_831_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state110))) begin
        i_s_reg_725 <= i_17_reg_1769;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & ((tmp_2_1_fu_1069_p2 == 1'd0) | (tmp_2_fu_1053_p2 == 1'd0)))) begin
        j_3_reg_688 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        j_3_reg_688 <= j_9_1_reg_1662;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        j_4_reg_738 <= j_10_1_reg_1812;
    end else if (((grp_k2c_idx2sub_fu_819_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state103))) begin
        j_4_reg_738 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        j_5_reg_763 <= j_11_1_reg_1872;
    end else if (((grp_k2c_idx2sub_fu_819_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state112))) begin
        j_5_reg_763 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state132)) begin
        j_s_reg_808 <= 59'd0;
    end else if ((1'b1 == ap_CS_fsm_state150)) begin
        j_s_reg_808 <= j_reg_1959;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_1378_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state133))) begin
        k_reg_797 <= k_1_reg_1941;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        k_reg_797 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        A_array_load_reg_1827 <= A_array_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_1378_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state133))) begin
        C_array_addr_2_reg_1969 <= sum2_cast_fu_1404_p1;
        sum5_reg_1964 <= sum5_fu_1394_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state140)) begin
        C_array_load_reg_1994 <= C_array_q0;
        tmp_4_reg_1989 <= grp_fu_843_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_908_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        count_3_cast_reg_1512[2 : 0] <= count_3_cast_fu_931_p1[2 : 0];
        i_15_s_reg_1517[63 : 1] <= i_15_s_fu_935_p2[63 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        dense_14_output_shap_6_reg_1709 <= dense_14_output_shap_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_1349_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state130))) begin
        dense_15_fwork_addr_2_reg_1946 <= sum4_cast_fu_1365_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        dense_15_fwork_load_1_reg_1984 <= dense_15_fwork_q1;
        dense_15_fwork_load_reg_1979 <= dense_15_fwork_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state118)) begin
        dense_15_kernel_arra_2_reg_1887 <= dense_15_kernel_arra_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        dense_15_kernel_shap_2_reg_1733 <= dense_15_kernel_shap_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        dense_15_kernel_shap_4_reg_1761 <= dense_15_kernel_shap_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        exitcond10_reg_1845 <= exitcond10_fu_1261_p2;
        j_5_cast_reg_1840[2 : 0] <= j_5_cast_fu_1256_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        exitcond11_reg_1785 <= exitcond11_fu_1214_p2;
        j_4_cast_reg_1780[2 : 0] <= j_4_cast_fu_1209_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        exitcond12_reg_1719 <= exitcond12_fu_1168_p2;
        i_9_cast_reg_1714[2 : 0] <= i_9_cast_fu_1163_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        exitcond13_reg_1672 <= exitcond13_fu_1136_p2;
        i_8_cast_reg_1667[2 : 0] <= i_8_cast_fu_1131_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        exitcond8_reg_1592 <= exitcond8_fu_1021_p2;
        i_4_cast_reg_1587[2 : 0] <= i_4_cast_fu_1016_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        free_axesA_reg_1550 <= grp_fu_966_p2;
        free_axesB_2_reg_1561[58 : 0] <= free_axesB_2_fu_980_p1[58 : 0];
        free_axesB_cast5_reg_1571 <= {{B_numel_read[10:5]}};
        free_axesB_cast6_reg_1566 <= {{B_numel_read[15:5]}};
        free_axesB_reg_1556 <= {{B_numel_read[63:5]}};
        i_15_cast_reg_1582 <= i_15_cast_fu_1010_p2;
        i_15_reg_1576 <= i_15_fu_1005_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_12_1_reg_1501 <= i_12_1_fu_902_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_864_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_12_s_reg_1483[63 : 1] <= i_12_s_fu_881_p2[63 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_1_fu_941_p2 == 1'd0) & (exitcond2_fu_908_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        i_15_1_reg_1525 <= i_15_1_fu_946_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        i_17_reg_1769 <= i_17_fu_1200_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_1_fu_1037_p2 == 1'd0) & (exitcond8_reg_1592 == 1'd0) & (1'b1 == ap_CS_fsm_state78))) begin
        i_18_1_reg_1614 <= i_18_1_fu_1042_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_reg_1592 == 1'd0) & (1'b1 == ap_CS_fsm_state78))) begin
        i_18_cast_reg_1601[2 : 1] <= i_18_cast_fu_1032_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        i_18_reg_1835 <= i_18_fu_1246_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        i_20_reg_1918 <= i_20_fu_1330_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_1_fu_1114_p2 == 1'd1) & (tmp_3_reg_1635 == 1'd1) & (1'b1 == ap_CS_fsm_state82))) begin
        i_21_1_reg_1657 <= i_21_1_fu_1119_p2;
        j_9_1_reg_1662 <= j_9_1_fu_1125_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_reg_1635 == 1'd1) & (1'b1 == ap_CS_fsm_state82))) begin
        i_21_cast_reg_1644[2 : 0] <= i_21_cast_fu_1095_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond13_1_fu_1152_p2 == 1'd0) & (exitcond13_reg_1672 == 1'd0) & (1'b1 == ap_CS_fsm_state88))) begin
        i_22_1_reg_1699 <= i_22_1_fu_1157_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond13_reg_1672 == 1'd0) & (1'b1 == ap_CS_fsm_state88))) begin
        i_22_cast_reg_1686[2 : 1] <= i_22_cast_fu_1147_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond12_1_fu_1184_p2 == 1'd0) & (exitcond12_reg_1719 == 1'd0) & (1'b1 == ap_CS_fsm_state97))) begin
        i_23_1_reg_1751 <= i_23_1_fu_1189_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond12_reg_1719 == 1'd0) & (1'b1 == ap_CS_fsm_state97))) begin
        i_23_cast_reg_1738[2 : 1] <= i_23_cast_fu_1179_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        i_7_cast_reg_1630[2 : 0] <= i_7_cast_fu_1080_p1[2 : 0];
        tmp_3_reg_1635 <= tmp_3_fu_1084_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state129)) begin
        inneridx_reg_1928 <= grp_fu_1413_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond11_1_fu_1230_p2 == 1'd0) & (exitcond11_reg_1785 == 1'd0) & (1'b1 == ap_CS_fsm_state106))) begin
        j_10_1_reg_1812 <= j_10_1_fu_1235_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond11_reg_1785 == 1'd0) & (1'b1 == ap_CS_fsm_state106))) begin
        j_10_cast_reg_1799[2 : 1] <= j_10_cast_fu_1225_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond10_1_fu_1277_p2 == 1'd0) & (exitcond10_reg_1845 == 1'd0) & (1'b1 == ap_CS_fsm_state115))) begin
        j_11_1_reg_1872 <= j_11_1_fu_1282_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond10_reg_1845 == 1'd0) & (1'b1 == ap_CS_fsm_state115))) begin
        j_11_cast_reg_1859[2 : 1] <= j_11_cast_fu_1272_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state133)) begin
        j_reg_1959 <= j_fu_1383_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state130)) begin
        k_1_reg_1941 <= k_1_fu_1354_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_7_fu_1325_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state127))) begin
        outrowidx_reg_1923 <= outrowidx_fu_1336_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_847 <= dense_14_output_shap_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state85))) begin
        reg_852 <= permA_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state94))) begin
        reg_858 <= permB_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_k2c_sub2idx_fu_831_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state119))) begin
        sum_reg_1892 <= sum_fu_1292_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_19_reg_1540 <= tmp_19_fu_958_p1;
        tmp_20_reg_1545 <= tmp_20_fu_962_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_1_10_reg_1492 <= tmp_1_10_fu_892_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_1195_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state102))) begin
        tmp_23_reg_1774 <= tmp_23_fu_1206_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        tmp_6_reg_1897 <= grp_fu_1252_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state149)) begin
        tmp_8_reg_1999 <= grp_fu_839_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state132)) begin
        tmp_s_reg_1951 <= grp_fu_1418_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        A_array_ce0 = 1'b1;
    end else begin
        A_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        Asub_address0 = j_11_cast_reg_1859;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        Asub_address0 = j_5_cast_reg_1840;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        Asub_address0 = permA_q1;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        Asub_address0 = permA_q0;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        Asub_address0 = grp_k2c_sub2idx_fu_831_sub_address0;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        Asub_address0 = grp_k2c_idx2sub_fu_819_sub_address0;
    end else begin
        Asub_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state117))) begin
        Asub_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        Asub_ce0 = grp_k2c_sub2idx_fu_831_sub_ce0;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        Asub_ce0 = grp_k2c_idx2sub_fu_819_sub_ce0;
    end else begin
        Asub_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state117))) begin
        Asub_d0 = Bsub_q0;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        Asub_d0 = grp_k2c_idx2sub_fu_819_sub_d0;
    end else begin
        Asub_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state117) | ((exitcond10_reg_1845 == 1'd0) & (1'b1 == ap_CS_fsm_state115)))) begin
        Asub_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        Asub_we0 = grp_k2c_idx2sub_fu_819_sub_we0;
    end else begin
        Asub_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state116)) begin
        Bsub_address0 = Bsub_addr_6_gep_fu_509_p3;
    end else if ((1'b1 == ap_CS_fsm_state114)) begin
        Bsub_address0 = permB_q0;
    end else if ((1'b1 == ap_CS_fsm_state108)) begin
        Bsub_address0 = j_10_cast_reg_1799;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        Bsub_address0 = j_4_cast_reg_1780;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        Bsub_address0 = grp_k2c_sub2idx_fu_831_sub_address0;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        Bsub_address0 = grp_k2c_idx2sub_fu_819_sub_address0;
    end else begin
        Bsub_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state108))) begin
        Bsub_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        Bsub_ce0 = grp_k2c_sub2idx_fu_831_sub_ce0;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        Bsub_ce0 = grp_k2c_idx2sub_fu_819_sub_ce0;
    end else begin
        Bsub_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state108))) begin
        Bsub_d0 = Asub_q0;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        Bsub_d0 = grp_k2c_idx2sub_fu_819_sub_d0;
    end else begin
        Bsub_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state108) | ((exitcond11_reg_1785 == 1'd0) & (1'b1 == ap_CS_fsm_state106)))) begin
        Bsub_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        Bsub_we0 = grp_k2c_idx2sub_fu_819_sub_we0;
    end else begin
        Bsub_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state150))) begin
        C_array_address0 = C_array_addr_2_reg_1969;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        C_array_address0 = i_11_cast_fu_1301_p1;
    end else begin
        C_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state150))) begin
        C_array_ce0 = 1'b1;
    end else begin
        C_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state150)) begin
        C_array_d0 = tmp_8_reg_1999;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        C_array_d0 = 32'd0;
    end else begin
        C_array_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state150) | ((exitcond5_fu_1306_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state126)))) begin
        C_array_we0 = 1'b1;
    end else begin
        C_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_7_fu_1325_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state127)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_fu_908_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        if ((tmp_fu_913_p2 == 1'd1)) begin
            ap_phi_mux_count_3_phi_fu_647_p4 = count_2_reg_621;
        end else if ((tmp_fu_913_p2 == 1'd0)) begin
            ap_phi_mux_count_3_phi_fu_647_p4 = count_5_fu_924_p2;
        end else begin
            ap_phi_mux_count_3_phi_fu_647_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_count_3_phi_fu_647_p4 = 'bx;
    end
end

always @ (*) begin
    if (((tmp_7_fu_1325_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state127))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        dense_14_output_shap_address0 = dense_14_output_shap_5_gep_fu_316_p3;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        dense_14_output_shap_address0 = reg_852;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        dense_14_output_shap_address0 = p_read2;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        dense_14_output_shap_address0 = grp_k2c_idx2sub_fu_819_shape_address0;
    end else begin
        dense_14_output_shap_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state6))) begin
        dense_14_output_shap_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        dense_14_output_shap_ce0 = grp_k2c_idx2sub_fu_819_shape_ce0;
    end else begin
        dense_14_output_shap_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        dense_15_fwork_address0 = dense_15_fwork_addr_2_reg_1946;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        dense_15_fwork_address0 = sum_cast_fu_1297_p1;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        dense_15_fwork_address0 = grp_k2c_sub2idx_fu_831_ap_return;
    end else begin
        dense_15_fwork_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state120) | ((grp_k2c_sub2idx_fu_831_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state110)))) begin
        dense_15_fwork_ce0 = 1'b1;
    end else begin
        dense_15_fwork_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        dense_15_fwork_ce1 = 1'b1;
    end else begin
        dense_15_fwork_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        dense_15_fwork_d0 = dense_15_kernel_arra_2_reg_1887;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        dense_15_fwork_d0 = A_array_load_reg_1827;
    end else begin
        dense_15_fwork_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state120) | ((grp_k2c_sub2idx_fu_831_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state110)))) begin
        dense_15_fwork_we0 = 1'b1;
    end else begin
        dense_15_fwork_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        dense_15_kernel_arra_ce0 = 1'b1;
    end else begin
        dense_15_kernel_arra_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        dense_15_kernel_shap_address0 = dense_15_kernel_shap_3_gep_fu_370_p3;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        dense_15_kernel_shap_address0 = reg_858;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        dense_15_kernel_shap_address0 = grp_k2c_idx2sub_fu_819_shape_address0;
    end else begin
        dense_15_kernel_shap_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state95))) begin
        dense_15_kernel_shap_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        dense_15_kernel_shap_ce0 = grp_k2c_idx2sub_fu_819_shape_ce0;
    end else begin
        dense_15_kernel_shap_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        freeA_address0 = i_18_cast_fu_1032_p1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        freeA_address0 = i_4_cast_fu_1016_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        freeA_address0 = count_1_reg_597;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        freeA_address0 = count_reg_572;
    end else begin
        freeA_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        freeA_ce0 = 1'b1;
    end else begin
        freeA_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        freeA_d0 = i_12_s_reg_1483;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        freeA_d0 = i_reg_584;
    end else begin
        freeA_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_1_10_reg_1492 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((tmp_1_fu_869_p2 == 1'd0) & (exitcond1_fu_864_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        freeA_we0 = 1'b1;
    end else begin
        freeA_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        freeB_address0 = j_9_cast_fu_1109_p1;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        freeB_address0 = j_3_reg_688;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        freeB_address0 = count_3_cast_reg_1512;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        freeB_address0 = count_2_cast4_fu_919_p1;
    end else begin
        freeB_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        freeB_ce0 = 1'b1;
    end else begin
        freeB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        freeB_d0 = i_15_s_reg_1517;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        freeB_d0 = i_1_reg_632;
    end else begin
        freeB_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((tmp_fu_913_p2 == 1'd0) & (exitcond2_fu_908_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        freeB_we0 = 1'b1;
    end else begin
        freeB_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_966_ap_start = 1'b1;
    end else begin
        grp_fu_966_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        grp_k2c_idx2sub_fu_819_idx = i_10_reg_750;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_k2c_idx2sub_fu_819_idx = i_s_reg_725;
    end else begin
        grp_k2c_idx2sub_fu_819_idx = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        grp_k2c_idx2sub_fu_819_ndim = B_dim;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_k2c_idx2sub_fu_819_ndim = A_dim;
    end else begin
        grp_k2c_idx2sub_fu_819_ndim = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        grp_k2c_idx2sub_fu_819_shape_q0 = dense_15_kernel_shap_q0;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_k2c_idx2sub_fu_819_shape_q0 = dense_14_output_shap_q0;
    end else begin
        grp_k2c_idx2sub_fu_819_shape_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        grp_k2c_sub2idx_fu_831_ndim = B_dim;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        grp_k2c_sub2idx_fu_831_ndim = A_dim;
    end else begin
        grp_k2c_sub2idx_fu_831_ndim = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        grp_k2c_sub2idx_fu_831_shape_q0 = newshpB_q0;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        grp_k2c_sub2idx_fu_831_shape_q0 = newshpA_q0;
    end else begin
        grp_k2c_sub2idx_fu_831_shape_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        grp_k2c_sub2idx_fu_831_sub_q0 = Asub_q0;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        grp_k2c_sub2idx_fu_831_sub_q0 = Bsub_q0;
    end else begin
        grp_k2c_sub2idx_fu_831_sub_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        newshpA_address0 = i_22_cast_reg_1686;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        newshpA_address0 = i_8_cast_reg_1667;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        newshpA_address0 = grp_k2c_sub2idx_fu_831_shape_address0;
    end else begin
        newshpA_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state88))) begin
        newshpA_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        newshpA_ce0 = grp_k2c_sub2idx_fu_831_shape_ce0;
    end else begin
        newshpA_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        newshpA_d0 = dense_14_output_shap_6_reg_1709;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        newshpA_d0 = reg_847;
    end else begin
        newshpA_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state92) | ((exitcond13_reg_1672 == 1'd0) & (1'b1 == ap_CS_fsm_state88)))) begin
        newshpA_we0 = 1'b1;
    end else begin
        newshpA_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        newshpB_address0 = i_23_cast_reg_1738;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        newshpB_address0 = i_9_cast_reg_1714;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        newshpB_address0 = grp_k2c_sub2idx_fu_831_shape_address0;
    end else begin
        newshpB_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state97))) begin
        newshpB_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        newshpB_ce0 = grp_k2c_sub2idx_fu_831_shape_ce0;
    end else begin
        newshpB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        newshpB_d0 = dense_15_kernel_shap_4_reg_1761;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        newshpB_d0 = dense_15_kernel_shap_2_reg_1733;
    end else begin
        newshpB_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state101) | ((exitcond12_reg_1719 == 1'd0) & (1'b1 == ap_CS_fsm_state97)))) begin
        newshpB_we0 = 1'b1;
    end else begin
        newshpB_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        permA_address0 = j_4_cast_fu_1209_p1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        permA_address0 = i_5_cast_fu_1048_p1;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        permA_address0 = i_18_cast_reg_1601;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        permA_address0 = i_4_cast_reg_1587;
    end else begin
        permA_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        permA_address1 = j_10_cast_fu_1225_p1;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        permA_address1 = i_22_cast_fu_1147_p1;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        permA_address1 = i_8_cast_fu_1131_p1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        permA_address1 = i_19_cast_fu_1064_p1;
    end else begin
        permA_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state78))) begin
        permA_ce0 = 1'b1;
    end else begin
        permA_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state80))) begin
        permA_ce1 = 1'b1;
    end else begin
        permA_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        permA_d0 = p_read2;
    end else if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78))) begin
        permA_d0 = freeA_q0;
    end else begin
        permA_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) | ((tmp_2_fu_1053_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80)) | ((exitcond8_reg_1592 == 1'd0) & (1'b1 == ap_CS_fsm_state78)))) begin
        permA_we0 = 1'b1;
    end else begin
        permA_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_1_fu_1069_p2 == 1'd1) & (tmp_2_fu_1053_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
        permA_we1 = 1'b1;
    end else begin
        permA_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        permB_address0 = j_11_cast_fu_1272_p1;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        permB_address0 = j_5_cast_fu_1256_p1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        permB_address0 = i_23_cast_fu_1179_p1;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        permB_address0 = i_9_cast_fu_1163_p1;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        permB_address0 = i_21_cast_reg_1644;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        permB_address0 = i_7_cast_reg_1630;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        permB_address0 = 64'd0;
    end else begin
        permB_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state80))) begin
        permB_ce0 = 1'b1;
    end else begin
        permB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82))) begin
        permB_d0 = freeB_q0;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        permB_d0 = 64'd0;
    end else begin
        permB_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state83) | ((tmp_3_reg_1635 == 1'd1) & (1'b1 == ap_CS_fsm_state82)) | ((1'b1 == ap_CS_fsm_state80) & ((tmp_2_1_fu_1069_p2 == 1'd0) | (tmp_2_fu_1053_p2 == 1'd0))))) begin
        permB_we0 = 1'b1;
    end else begin
        permB_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & ((exitcond1_1_fu_887_p2 == 1'd1) | (exitcond1_fu_864_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state6 : begin
            if (((exitcond2_1_fu_941_p2 == 1'd0) & (exitcond2_fu_908_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            if (((1'b1 == ap_CS_fsm_state78) & ((exitcond8_1_fu_1037_p2 == 1'd1) | (exitcond8_reg_1592 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state80 : begin
            if (((1'b1 == ap_CS_fsm_state80) & ((tmp_2_1_fu_1069_p2 == 1'd0) | (tmp_2_fu_1053_p2 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            if (((1'b1 == ap_CS_fsm_state82) & ((tmp_3_1_fu_1114_p2 == 1'd0) | (tmp_3_reg_1635 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state84 : begin
            if (((exitcond13_fu_1136_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state84))) begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            if (((1'b1 == ap_CS_fsm_state88) & ((exitcond13_1_fu_1152_p2 == 1'd1) | (exitcond13_reg_1672 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state93 : begin
            if (((exitcond12_fu_1168_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state93))) begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            if (((1'b1 == ap_CS_fsm_state97) & ((exitcond12_1_fu_1184_p2 == 1'd1) | (exitcond12_reg_1719 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state102 : begin
            if (((exitcond6_fu_1195_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state102))) begin
                ap_NS_fsm = ap_ST_fsm_state111;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end
        end
        ap_ST_fsm_state103 : begin
            if (((grp_k2c_idx2sub_fu_819_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state103))) begin
                ap_NS_fsm = ap_ST_fsm_state104;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end
        end
        ap_ST_fsm_state104 : begin
            if (((exitcond11_fu_1214_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state104))) begin
                ap_NS_fsm = ap_ST_fsm_state106;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state105;
            end
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            if (((1'b1 == ap_CS_fsm_state106) & ((exitcond11_1_fu_1230_p2 == 1'd1) | (exitcond11_reg_1785 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state109;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            if (((grp_k2c_sub2idx_fu_831_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state110))) begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state110;
            end
        end
        ap_ST_fsm_state111 : begin
            if (((exitcond7_fu_1241_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state111))) begin
                ap_NS_fsm = ap_ST_fsm_state121;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state112;
            end
        end
        ap_ST_fsm_state112 : begin
            if (((grp_k2c_idx2sub_fu_819_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state112))) begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state112;
            end
        end
        ap_ST_fsm_state113 : begin
            if (((exitcond10_fu_1261_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state113))) begin
                ap_NS_fsm = ap_ST_fsm_state115;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state114;
            end
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            if (((1'b1 == ap_CS_fsm_state115) & ((exitcond10_1_fu_1277_p2 == 1'd1) | (exitcond10_reg_1845 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state118;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state116;
            end
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            if (((grp_k2c_sub2idx_fu_831_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state119))) begin
                ap_NS_fsm = ap_ST_fsm_state120;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state119;
            end
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            if (((exitcond5_fu_1306_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state126))) begin
                ap_NS_fsm = ap_ST_fsm_state127;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state126;
            end
        end
        ap_ST_fsm_state127 : begin
            if (((tmp_7_fu_1325_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state127))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state128;
            end
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            if (((exitcond_fu_1349_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state130))) begin
                ap_NS_fsm = ap_ST_fsm_state127;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state131;
            end
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            if (((exitcond3_fu_1378_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state133))) begin
                ap_NS_fsm = ap_ST_fsm_state130;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state134;
            end
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_array_address0 = i_s_reg_725;

assign Bsub_addr_6_gep_fu_509_p3 = permB_q0;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd124];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd128];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd129];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd131];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd132];

assign ap_CS_fsm_state134 = ap_CS_fsm[32'd133];

assign ap_CS_fsm_state135 = ap_CS_fsm[32'd134];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd135];

assign ap_CS_fsm_state139 = ap_CS_fsm[32'd138];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd139];

assign ap_CS_fsm_state141 = ap_CS_fsm[32'd140];

assign ap_CS_fsm_state149 = ap_CS_fsm[32'd148];

assign ap_CS_fsm_state150 = ap_CS_fsm[32'd149];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

assign count_2_cast4_fu_919_p1 = count_2_reg_621;

assign count_3_cast_fu_931_p1 = ap_phi_mux_count_3_phi_fu_647_p4;

assign count_4_1_fu_896_p2 = (count_1_reg_597 + 64'd1);

assign count_4_fu_874_p2 = (count_reg_572 + 64'd1);

assign count_5_1_fu_952_p2 = (count_3_reg_644 + 3'd1);

assign count_5_fu_924_p2 = (count_2_reg_621 + 3'd1);

assign dense_14_output_shap_5_gep_fu_316_p3 = reg_852;

assign dense_15_fwork_address1 = sum5_cast_fu_1409_p1;

assign dense_15_kernel_arra_address0 = i_10_reg_750;

assign dense_15_kernel_shap_3_gep_fu_370_p3 = reg_858;

assign exitcond10_1_fu_1277_p2 = ((j_11_cast_fu_1272_p1 == B_dim) ? 1'b1 : 1'b0);

assign exitcond10_fu_1261_p2 = ((j_5_cast_fu_1256_p1 == B_dim) ? 1'b1 : 1'b0);

assign exitcond11_1_fu_1230_p2 = ((j_10_cast_fu_1225_p1 == A_dim) ? 1'b1 : 1'b0);

assign exitcond11_fu_1214_p2 = ((j_4_cast_fu_1209_p1 == A_dim) ? 1'b1 : 1'b0);

assign exitcond12_1_fu_1184_p2 = ((i_23_cast_fu_1179_p1 == B_dim) ? 1'b1 : 1'b0);

assign exitcond12_fu_1168_p2 = ((i_9_cast_fu_1163_p1 == B_dim) ? 1'b1 : 1'b0);

assign exitcond13_1_fu_1152_p2 = ((i_22_cast_fu_1147_p1 == A_dim) ? 1'b1 : 1'b0);

assign exitcond13_fu_1136_p2 = ((i_8_cast_fu_1131_p1 == A_dim) ? 1'b1 : 1'b0);

assign exitcond1_1_fu_887_p2 = ((i_12_s_fu_881_p2 == A_dim) ? 1'b1 : 1'b0);

assign exitcond1_fu_864_p2 = ((i_reg_584 == A_dim) ? 1'b1 : 1'b0);

assign exitcond2_1_fu_941_p2 = ((i_15_s_fu_935_p2 == B_dim) ? 1'b1 : 1'b0);

assign exitcond2_fu_908_p2 = ((i_1_reg_632 == B_dim) ? 1'b1 : 1'b0);

assign exitcond3_fu_1378_p2 = ((j_s_reg_808 == free_axesB_reg_1556) ? 1'b1 : 1'b0);

assign exitcond5_fu_1306_p2 = ((i_11_cast_fu_1301_p1 == tmp_6_reg_1897) ? 1'b1 : 1'b0);

assign exitcond6_fu_1195_p2 = ((i_s_reg_725 == A_numel_read) ? 1'b1 : 1'b0);

assign exitcond7_fu_1241_p2 = ((i_10_reg_750 == B_numel_read) ? 1'b1 : 1'b0);

assign exitcond8_1_fu_1037_p2 = ((i_18_cast_fu_1032_p1 == i_15_reg_1576) ? 1'b1 : 1'b0);

assign exitcond8_fu_1021_p2 = ((i_4_cast_fu_1016_p1 == i_15_reg_1576) ? 1'b1 : 1'b0);

assign exitcond_fu_1349_p2 = ((k_cast_fu_1345_p1 == tmp_20_reg_1545) ? 1'b1 : 1'b0);

assign free_axesB_2_fu_980_p1 = free_axesB_fu_971_p4;

assign free_axesB_fu_971_p4 = {{B_numel_read[63:5]}};

assign grp_fu_1252_p0 = free_axesB_2_reg_1561;

assign grp_fu_1413_p1 = i_14_reg_786[10:0];

assign grp_fu_1418_p0 = k_cast3_fu_1341_p1;

assign grp_fu_966_p1 = reg_847;

assign grp_k2c_idx2sub_fu_819_ap_start = grp_k2c_idx2sub_fu_819_ap_start_reg;

assign grp_k2c_sub2idx_fu_831_ap_start = grp_k2c_sub2idx_fu_831_ap_start_reg;

assign i_11_cast_fu_1301_p1 = i_11_reg_775;

assign i_12_1_fu_902_p2 = (i_reg_584 + 64'd2);

assign i_12_s_fu_881_p2 = (i_reg_584 | 64'd1);

assign i_15_1_fu_946_p2 = (i_1_reg_632 + 64'd2);

assign i_15_cast_fu_1010_p2 = ($signed(3'd7) + $signed(tmp_21_fu_1002_p1));

assign i_15_fu_1005_p2 = ($signed(64'd18446744073709551615) + $signed(A_dim));

assign i_15_s_fu_935_p2 = (i_1_reg_632 | 64'd1);

assign i_16_fu_1311_p2 = (i_11_reg_775 + 5'd1);

assign i_17_fu_1200_p2 = (i_s_reg_725 + 64'd1);

assign i_18_1_fu_1042_p2 = (i_4_reg_655 + 3'd2);

assign i_18_cast_fu_1032_p1 = i_18_s_fu_1026_p2;

assign i_18_fu_1246_p2 = (i_10_reg_750 + 64'd1);

assign i_18_s_fu_1026_p2 = (i_4_reg_655 | 3'd1);

assign i_19_1_fu_1074_p2 = (i_5_reg_667 + 3'd2);

assign i_19_cast_fu_1064_p1 = i_19_fu_1058_p2;

assign i_19_fu_1058_p2 = (i_5_reg_667 + 3'd1);

assign i_20_fu_1330_p2 = (64'd1 + i_14_reg_786);

assign i_21_1_fu_1119_p2 = (i_7_reg_676 + 3'd2);

assign i_21_cast_fu_1095_p1 = i_21_fu_1089_p2;

assign i_21_fu_1089_p2 = (3'd1 + i_7_reg_676);

assign i_22_1_fu_1157_p2 = (i_8_reg_701 + 3'd2);

assign i_22_cast_fu_1147_p1 = i_22_s_fu_1141_p2;

assign i_22_s_fu_1141_p2 = (i_8_reg_701 | 3'd1);

assign i_23_1_fu_1189_p2 = (i_9_reg_713 + 3'd2);

assign i_23_cast_fu_1179_p1 = i_23_s_fu_1173_p2;

assign i_23_s_fu_1173_p2 = (i_9_reg_713 | 3'd1);

assign i_4_cast_fu_1016_p1 = i_4_reg_655;

assign i_5_cast_fu_1048_p1 = i_5_reg_667;

assign i_7_cast_fu_1080_p1 = i_7_reg_676;

assign i_8_cast_fu_1131_p1 = i_8_reg_701;

assign i_9_cast_fu_1163_p1 = i_9_reg_713;

assign j_10_1_fu_1235_p2 = (j_4_reg_738 + 3'd2);

assign j_10_cast_fu_1225_p1 = j_10_s_fu_1219_p2;

assign j_10_s_fu_1219_p2 = (j_4_reg_738 | 3'd1);

assign j_11_1_fu_1282_p2 = (j_5_reg_763 + 3'd2);

assign j_11_cast_fu_1272_p1 = j_11_s_fu_1266_p2;

assign j_11_s_fu_1266_p2 = (j_5_reg_763 | 3'd1);

assign j_4_cast_fu_1209_p1 = j_4_reg_738;

assign j_5_cast_fu_1256_p1 = j_5_reg_763;

assign j_9_1_fu_1125_p2 = (j_3_reg_688 + 64'd2);

assign j_9_cast_fu_1109_p1 = j_9_s_fu_1103_p2;

assign j_9_s_fu_1103_p2 = (tmp_22_fu_1099_p1 | 4'd1);

assign j_fu_1383_p2 = (59'd1 + j_s_reg_808);

assign k_1_fu_1354_p2 = (k_reg_797 + 6'd1);

assign k_cast3_fu_1341_p1 = k_reg_797;

assign k_cast_fu_1345_p1 = k_reg_797;

assign outrowidx_fu_1336_p2 = ($signed(tmp_25_fu_1321_p1) * $signed(free_axesB_cast5_reg_1571));

assign sum2_cast_fu_1404_p1 = sum2_fu_1399_p2;

assign sum2_fu_1399_p2 = (tmp_28_fu_1374_p1 + outrowidx_reg_1923);

assign sum4_cast_fu_1365_p1 = sum4_fu_1360_p2;

assign sum4_fu_1360_p2 = ($signed(k_cast3_fu_1341_p1) + $signed(inneridx_reg_1928));

assign sum5_cast_fu_1409_p1 = sum5_reg_1964;

assign sum5_fu_1394_p2 = ($signed(tmp1_fu_1389_p2) + $signed(tmp_s_reg_1951));

assign sum_cast_fu_1297_p1 = sum_reg_1892;

assign sum_fu_1292_p2 = (tmp_26_fu_1288_p1 + tmp_23_reg_1774);

assign tmp1_fu_1389_p2 = (tmp_27_fu_1370_p1 + tmp_23_reg_1774);

assign tmp_19_fu_958_p1 = dense_14_output_shap_q0[10:0];

assign tmp_1_10_fu_892_p2 = ((i_12_s_reg_1483 == p_read2) ? 1'b1 : 1'b0);

assign tmp_1_fu_869_p2 = ((i_reg_584 == p_read2) ? 1'b1 : 1'b0);

assign tmp_20_fu_962_p1 = dense_14_output_shap_q0[6:0];

assign tmp_21_fu_1002_p1 = A_dim[2:0];

assign tmp_22_fu_1099_p1 = j_3_reg_688[3:0];

assign tmp_23_fu_1206_p1 = A_numel_read[10:0];

assign tmp_25_fu_1321_p1 = i_14_reg_786[5:0];

assign tmp_26_fu_1288_p1 = grp_k2c_sub2idx_fu_831_ap_return[10:0];

assign tmp_27_fu_1370_p1 = j_s_reg_808[10:0];

assign tmp_28_fu_1374_p1 = j_s_reg_808[5:0];

assign tmp_2_1_fu_1069_p2 = ((i_19_cast_fu_1064_p1 < A_dim) ? 1'b1 : 1'b0);

assign tmp_2_fu_1053_p2 = ((i_5_cast_fu_1048_p1 < A_dim) ? 1'b1 : 1'b0);

assign tmp_3_1_fu_1114_p2 = ((i_21_cast_fu_1095_p1 < B_dim) ? 1'b1 : 1'b0);

assign tmp_3_fu_1084_p2 = ((i_7_cast_fu_1080_p1 < B_dim) ? 1'b1 : 1'b0);

assign tmp_7_fu_1325_p2 = ((i_14_reg_786 < free_axesA_reg_1550) ? 1'b1 : 1'b0);

assign tmp_fu_913_p2 = ((i_1_reg_632 == 64'd0) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    i_12_s_reg_1483[0] <= 1'b1;
    count_3_cast_reg_1512[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_15_s_reg_1517[0] <= 1'b1;
    free_axesB_2_reg_1561[63:59] <= 5'b00000;
    i_4_cast_reg_1587[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_18_cast_reg_1601[0] <= 1'b1;
    i_18_cast_reg_1601[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_7_cast_reg_1630[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_21_cast_reg_1644[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_8_cast_reg_1667[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_22_cast_reg_1686[0] <= 1'b1;
    i_22_cast_reg_1686[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_9_cast_reg_1714[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_23_cast_reg_1738[0] <= 1'b1;
    i_23_cast_reg_1738[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    j_4_cast_reg_1780[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    j_10_cast_reg_1799[0] <= 1'b1;
    j_10_cast_reg_1799[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    j_5_cast_reg_1840[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    j_11_cast_reg_1859[0] <= 1'b1;
    j_11_cast_reg_1859[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
end

endmodule //k2c_dot_2
