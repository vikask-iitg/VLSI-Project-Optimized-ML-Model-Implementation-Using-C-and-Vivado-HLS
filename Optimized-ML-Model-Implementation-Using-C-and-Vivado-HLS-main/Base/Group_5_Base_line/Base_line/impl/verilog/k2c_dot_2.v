// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module k2c_dot_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        C_array_address0,
        C_array_ce0,
        C_array_we0,
        C_array_d0,
        C_array_q0,
        A_array_address0,
        A_array_ce0,
        A_array_q0,
        A_ndim_read,
        A_numel_read,
        A_shape_address0,
        A_shape_ce0,
        A_shape_q0,
        B_array_address0,
        B_array_ce0,
        B_array_q0,
        B_ndim_read,
        B_numel_read,
        B_shape_address0,
        B_shape_ce0,
        B_shape_q0,
        p_read4,
        fwork_address0,
        fwork_ce0,
        fwork_we0,
        fwork_d0,
        fwork_q0,
        fwork_address1,
        fwork_ce1,
        fwork_q1
);

parameter    ap_ST_fsm_state1 = 238'd1;
parameter    ap_ST_fsm_state2 = 238'd2;
parameter    ap_ST_fsm_state3 = 238'd4;
parameter    ap_ST_fsm_state4 = 238'd8;
parameter    ap_ST_fsm_state5 = 238'd16;
parameter    ap_ST_fsm_state6 = 238'd32;
parameter    ap_ST_fsm_state7 = 238'd64;
parameter    ap_ST_fsm_state8 = 238'd128;
parameter    ap_ST_fsm_state9 = 238'd256;
parameter    ap_ST_fsm_state10 = 238'd512;
parameter    ap_ST_fsm_state11 = 238'd1024;
parameter    ap_ST_fsm_state12 = 238'd2048;
parameter    ap_ST_fsm_state13 = 238'd4096;
parameter    ap_ST_fsm_state14 = 238'd8192;
parameter    ap_ST_fsm_state15 = 238'd16384;
parameter    ap_ST_fsm_state16 = 238'd32768;
parameter    ap_ST_fsm_state17 = 238'd65536;
parameter    ap_ST_fsm_state18 = 238'd131072;
parameter    ap_ST_fsm_state19 = 238'd262144;
parameter    ap_ST_fsm_state20 = 238'd524288;
parameter    ap_ST_fsm_state21 = 238'd1048576;
parameter    ap_ST_fsm_state22 = 238'd2097152;
parameter    ap_ST_fsm_state23 = 238'd4194304;
parameter    ap_ST_fsm_state24 = 238'd8388608;
parameter    ap_ST_fsm_state25 = 238'd16777216;
parameter    ap_ST_fsm_state26 = 238'd33554432;
parameter    ap_ST_fsm_state27 = 238'd67108864;
parameter    ap_ST_fsm_state28 = 238'd134217728;
parameter    ap_ST_fsm_state29 = 238'd268435456;
parameter    ap_ST_fsm_state30 = 238'd536870912;
parameter    ap_ST_fsm_state31 = 238'd1073741824;
parameter    ap_ST_fsm_state32 = 238'd2147483648;
parameter    ap_ST_fsm_state33 = 238'd4294967296;
parameter    ap_ST_fsm_state34 = 238'd8589934592;
parameter    ap_ST_fsm_state35 = 238'd17179869184;
parameter    ap_ST_fsm_state36 = 238'd34359738368;
parameter    ap_ST_fsm_state37 = 238'd68719476736;
parameter    ap_ST_fsm_state38 = 238'd137438953472;
parameter    ap_ST_fsm_state39 = 238'd274877906944;
parameter    ap_ST_fsm_state40 = 238'd549755813888;
parameter    ap_ST_fsm_state41 = 238'd1099511627776;
parameter    ap_ST_fsm_state42 = 238'd2199023255552;
parameter    ap_ST_fsm_state43 = 238'd4398046511104;
parameter    ap_ST_fsm_state44 = 238'd8796093022208;
parameter    ap_ST_fsm_state45 = 238'd17592186044416;
parameter    ap_ST_fsm_state46 = 238'd35184372088832;
parameter    ap_ST_fsm_state47 = 238'd70368744177664;
parameter    ap_ST_fsm_state48 = 238'd140737488355328;
parameter    ap_ST_fsm_state49 = 238'd281474976710656;
parameter    ap_ST_fsm_state50 = 238'd562949953421312;
parameter    ap_ST_fsm_state51 = 238'd1125899906842624;
parameter    ap_ST_fsm_state52 = 238'd2251799813685248;
parameter    ap_ST_fsm_state53 = 238'd4503599627370496;
parameter    ap_ST_fsm_state54 = 238'd9007199254740992;
parameter    ap_ST_fsm_state55 = 238'd18014398509481984;
parameter    ap_ST_fsm_state56 = 238'd36028797018963968;
parameter    ap_ST_fsm_state57 = 238'd72057594037927936;
parameter    ap_ST_fsm_state58 = 238'd144115188075855872;
parameter    ap_ST_fsm_state59 = 238'd288230376151711744;
parameter    ap_ST_fsm_state60 = 238'd576460752303423488;
parameter    ap_ST_fsm_state61 = 238'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 238'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 238'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 238'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 238'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 238'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 238'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 238'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 238'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 238'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 238'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 238'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 238'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 238'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 238'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 238'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 238'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 238'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 238'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 238'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 238'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 238'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 238'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 238'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 238'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 238'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 238'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 238'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 238'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 238'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 238'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 238'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 238'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 238'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 238'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 238'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 238'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 238'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 238'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 238'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 238'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 238'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 238'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 238'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 238'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 238'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 238'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 238'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 238'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 238'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 238'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 238'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 238'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 238'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 238'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 238'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 238'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 238'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 238'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 238'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 238'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 238'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 238'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 238'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 238'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 238'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 238'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 238'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 238'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 238'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 238'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 238'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 238'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 238'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 238'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 238'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 238'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 238'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 238'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 238'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 238'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 238'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 238'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 238'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 238'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 238'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 238'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 238'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 238'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 238'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 238'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 238'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 238'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 238'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 238'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state156 = 238'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state157 = 238'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state158 = 238'd182687704666362864775460604089535377456991567872;
parameter    ap_ST_fsm_state159 = 238'd365375409332725729550921208179070754913983135744;
parameter    ap_ST_fsm_state160 = 238'd730750818665451459101842416358141509827966271488;
parameter    ap_ST_fsm_state161 = 238'd1461501637330902918203684832716283019655932542976;
parameter    ap_ST_fsm_state162 = 238'd2923003274661805836407369665432566039311865085952;
parameter    ap_ST_fsm_state163 = 238'd5846006549323611672814739330865132078623730171904;
parameter    ap_ST_fsm_state164 = 238'd11692013098647223345629478661730264157247460343808;
parameter    ap_ST_fsm_state165 = 238'd23384026197294446691258957323460528314494920687616;
parameter    ap_ST_fsm_state166 = 238'd46768052394588893382517914646921056628989841375232;
parameter    ap_ST_fsm_state167 = 238'd93536104789177786765035829293842113257979682750464;
parameter    ap_ST_fsm_state168 = 238'd187072209578355573530071658587684226515959365500928;
parameter    ap_ST_fsm_state169 = 238'd374144419156711147060143317175368453031918731001856;
parameter    ap_ST_fsm_state170 = 238'd748288838313422294120286634350736906063837462003712;
parameter    ap_ST_fsm_state171 = 238'd1496577676626844588240573268701473812127674924007424;
parameter    ap_ST_fsm_state172 = 238'd2993155353253689176481146537402947624255349848014848;
parameter    ap_ST_fsm_state173 = 238'd5986310706507378352962293074805895248510699696029696;
parameter    ap_ST_fsm_state174 = 238'd11972621413014756705924586149611790497021399392059392;
parameter    ap_ST_fsm_state175 = 238'd23945242826029513411849172299223580994042798784118784;
parameter    ap_ST_fsm_state176 = 238'd47890485652059026823698344598447161988085597568237568;
parameter    ap_ST_fsm_state177 = 238'd95780971304118053647396689196894323976171195136475136;
parameter    ap_ST_fsm_state178 = 238'd191561942608236107294793378393788647952342390272950272;
parameter    ap_ST_fsm_state179 = 238'd383123885216472214589586756787577295904684780545900544;
parameter    ap_ST_fsm_state180 = 238'd766247770432944429179173513575154591809369561091801088;
parameter    ap_ST_fsm_state181 = 238'd1532495540865888858358347027150309183618739122183602176;
parameter    ap_ST_fsm_state182 = 238'd3064991081731777716716694054300618367237478244367204352;
parameter    ap_ST_fsm_state183 = 238'd6129982163463555433433388108601236734474956488734408704;
parameter    ap_ST_fsm_state184 = 238'd12259964326927110866866776217202473468949912977468817408;
parameter    ap_ST_fsm_state185 = 238'd24519928653854221733733552434404946937899825954937634816;
parameter    ap_ST_fsm_state186 = 238'd49039857307708443467467104868809893875799651909875269632;
parameter    ap_ST_fsm_state187 = 238'd98079714615416886934934209737619787751599303819750539264;
parameter    ap_ST_fsm_state188 = 238'd196159429230833773869868419475239575503198607639501078528;
parameter    ap_ST_fsm_state189 = 238'd392318858461667547739736838950479151006397215279002157056;
parameter    ap_ST_fsm_state190 = 238'd784637716923335095479473677900958302012794430558004314112;
parameter    ap_ST_fsm_state191 = 238'd1569275433846670190958947355801916604025588861116008628224;
parameter    ap_ST_fsm_state192 = 238'd3138550867693340381917894711603833208051177722232017256448;
parameter    ap_ST_fsm_state193 = 238'd6277101735386680763835789423207666416102355444464034512896;
parameter    ap_ST_fsm_state194 = 238'd12554203470773361527671578846415332832204710888928069025792;
parameter    ap_ST_fsm_state195 = 238'd25108406941546723055343157692830665664409421777856138051584;
parameter    ap_ST_fsm_state196 = 238'd50216813883093446110686315385661331328818843555712276103168;
parameter    ap_ST_fsm_state197 = 238'd100433627766186892221372630771322662657637687111424552206336;
parameter    ap_ST_fsm_state198 = 238'd200867255532373784442745261542645325315275374222849104412672;
parameter    ap_ST_fsm_state199 = 238'd401734511064747568885490523085290650630550748445698208825344;
parameter    ap_ST_fsm_state200 = 238'd803469022129495137770981046170581301261101496891396417650688;
parameter    ap_ST_fsm_state201 = 238'd1606938044258990275541962092341162602522202993782792835301376;
parameter    ap_ST_fsm_state202 = 238'd3213876088517980551083924184682325205044405987565585670602752;
parameter    ap_ST_fsm_state203 = 238'd6427752177035961102167848369364650410088811975131171341205504;
parameter    ap_ST_fsm_state204 = 238'd12855504354071922204335696738729300820177623950262342682411008;
parameter    ap_ST_fsm_state205 = 238'd25711008708143844408671393477458601640355247900524685364822016;
parameter    ap_ST_fsm_state206 = 238'd51422017416287688817342786954917203280710495801049370729644032;
parameter    ap_ST_fsm_state207 = 238'd102844034832575377634685573909834406561420991602098741459288064;
parameter    ap_ST_fsm_state208 = 238'd205688069665150755269371147819668813122841983204197482918576128;
parameter    ap_ST_fsm_state209 = 238'd411376139330301510538742295639337626245683966408394965837152256;
parameter    ap_ST_fsm_state210 = 238'd822752278660603021077484591278675252491367932816789931674304512;
parameter    ap_ST_fsm_state211 = 238'd1645504557321206042154969182557350504982735865633579863348609024;
parameter    ap_ST_fsm_state212 = 238'd3291009114642412084309938365114701009965471731267159726697218048;
parameter    ap_ST_fsm_state213 = 238'd6582018229284824168619876730229402019930943462534319453394436096;
parameter    ap_ST_fsm_state214 = 238'd13164036458569648337239753460458804039861886925068638906788872192;
parameter    ap_ST_fsm_state215 = 238'd26328072917139296674479506920917608079723773850137277813577744384;
parameter    ap_ST_fsm_state216 = 238'd52656145834278593348959013841835216159447547700274555627155488768;
parameter    ap_ST_fsm_state217 = 238'd105312291668557186697918027683670432318895095400549111254310977536;
parameter    ap_ST_fsm_state218 = 238'd210624583337114373395836055367340864637790190801098222508621955072;
parameter    ap_ST_fsm_state219 = 238'd421249166674228746791672110734681729275580381602196445017243910144;
parameter    ap_ST_fsm_state220 = 238'd842498333348457493583344221469363458551160763204392890034487820288;
parameter    ap_ST_fsm_state221 = 238'd1684996666696914987166688442938726917102321526408785780068975640576;
parameter    ap_ST_fsm_state222 = 238'd3369993333393829974333376885877453834204643052817571560137951281152;
parameter    ap_ST_fsm_state223 = 238'd6739986666787659948666753771754907668409286105635143120275902562304;
parameter    ap_ST_fsm_state224 = 238'd13479973333575319897333507543509815336818572211270286240551805124608;
parameter    ap_ST_fsm_state225 = 238'd26959946667150639794667015087019630673637144422540572481103610249216;
parameter    ap_ST_fsm_state226 = 238'd53919893334301279589334030174039261347274288845081144962207220498432;
parameter    ap_ST_fsm_state227 = 238'd107839786668602559178668060348078522694548577690162289924414440996864;
parameter    ap_ST_fsm_state228 = 238'd215679573337205118357336120696157045389097155380324579848828881993728;
parameter    ap_ST_fsm_state229 = 238'd431359146674410236714672241392314090778194310760649159697657763987456;
parameter    ap_ST_fsm_state230 = 238'd862718293348820473429344482784628181556388621521298319395315527974912;
parameter    ap_ST_fsm_state231 = 238'd1725436586697640946858688965569256363112777243042596638790631055949824;
parameter    ap_ST_fsm_state232 = 238'd3450873173395281893717377931138512726225554486085193277581262111899648;
parameter    ap_ST_fsm_state233 = 238'd6901746346790563787434755862277025452451108972170386555162524223799296;
parameter    ap_ST_fsm_state234 = 238'd13803492693581127574869511724554050904902217944340773110325048447598592;
parameter    ap_ST_fsm_state235 = 238'd27606985387162255149739023449108101809804435888681546220650096895197184;
parameter    ap_ST_fsm_state236 = 238'd55213970774324510299478046898216203619608871777363092441300193790394368;
parameter    ap_ST_fsm_state237 = 238'd110427941548649020598956093796432407239217743554726184882600387580788736;
parameter    ap_ST_fsm_state238 = 238'd220855883097298041197912187592864814478435487109452369765200775161577472;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] C_array_address0;
output   C_array_ce0;
output   C_array_we0;
output  [31:0] C_array_d0;
input  [31:0] C_array_q0;
output  [13:0] A_array_address0;
output   A_array_ce0;
input  [31:0] A_array_q0;
input  [63:0] A_ndim_read;
input  [63:0] A_numel_read;
output  [2:0] A_shape_address0;
output   A_shape_ce0;
input  [63:0] A_shape_q0;
output  [13:0] B_array_address0;
output   B_array_ce0;
input  [31:0] B_array_q0;
input  [63:0] B_ndim_read;
input  [63:0] B_numel_read;
output  [2:0] B_shape_address0;
output   B_shape_ce0;
input  [63:0] B_shape_q0;
input  [63:0] p_read4;
output  [9:0] fwork_address0;
output   fwork_ce0;
output   fwork_we0;
output  [31:0] fwork_d0;
input  [31:0] fwork_q0;
output  [9:0] fwork_address1;
output   fwork_ce1;
input  [31:0] fwork_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg A_array_ce0;
reg[2:0] A_shape_address0;
reg A_shape_ce0;
reg B_array_ce0;
reg[2:0] B_shape_address0;
reg B_shape_ce0;
reg[9:0] fwork_address0;
reg fwork_ce0;
reg fwork_we0;
reg[31:0] fwork_d0;
reg fwork_ce1;

(* fsm_encoding = "none" *) reg   [237:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] reg_613;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state163;
wire   [63:0] i_20_fu_627_p2;
wire    ap_CS_fsm_state2;
wire   [63:0] i_22_fu_663_p2;
wire    ap_CS_fsm_state3;
wire   [0:0] exitcond1_fu_658_p2;
reg   [63:0] A_shape_load_reg_1023;
wire   [63:0] grp_fu_690_p2;
reg   [63:0] free_axesA_reg_1029;
wire    ap_CS_fsm_state72;
wire   [63:0] grp_fu_694_p2;
reg   [63:0] free_axesB_reg_1034;
wire   [63:0] i_31_fu_702_p2;
reg   [63:0] i_31_reg_1039;
wire   [2:0] i_14_cast_fu_707_p2;
reg   [2:0] i_14_cast_reg_1044;
wire   [63:0] i_4_cast_fu_713_p1;
reg   [63:0] i_4_cast_reg_1049;
wire    ap_CS_fsm_state73;
wire   [2:0] i_32_fu_723_p2;
reg   [2:0] i_32_reg_1057;
wire   [0:0] exitcond6_fu_718_p2;
wire   [2:0] i_33_fu_739_p2;
wire    ap_CS_fsm_state75;
wire   [0:0] tmp_s_fu_734_p2;
wire   [63:0] i_7_cast_fu_745_p1;
reg   [63:0] i_7_cast_reg_1075;
wire    ap_CS_fsm_state76;
wire   [63:0] j_fu_754_p2;
reg   [63:0] j_reg_1083;
wire   [0:0] tmp_24_fu_749_p2;
wire   [2:0] i_34_fu_760_p2;
reg   [2:0] i_34_reg_1093;
wire   [63:0] i_8_cast_fu_766_p1;
reg   [63:0] i_8_cast_reg_1098;
wire    ap_CS_fsm_state78;
wire   [2:0] i_35_fu_776_p2;
reg   [2:0] i_35_reg_1106;
wire   [0:0] exitcond5_fu_771_p2;
wire    ap_CS_fsm_state79;
wire   [63:0] i_9_cast_fu_782_p1;
reg   [63:0] i_9_cast_reg_1121;
wire    ap_CS_fsm_state81;
wire   [2:0] i_36_fu_792_p2;
reg   [2:0] i_36_reg_1129;
wire   [0:0] exitcond9_fu_787_p2;
wire   [31:0] tmp_48_fu_798_p1;
reg   [31:0] tmp_48_reg_1139;
wire    ap_CS_fsm_state82;
wire   [63:0] i_37_fu_806_p2;
reg   [63:0] i_37_reg_1152;
wire    ap_CS_fsm_state84;
wire   [31:0] tmp_49_fu_812_p1;
reg   [31:0] tmp_49_reg_1157;
wire   [0:0] exitcond2_fu_801_p2;
wire   [10:0] tmp_50_fu_815_p1;
reg   [10:0] tmp_50_reg_1162;
wire   [31:0] i_19_fu_818_p2;
reg   [31:0] i_19_reg_1167;
wire    ap_CS_fsm_state85;
wire   [63:0] tmp_21_i_fu_832_p1;
reg   [63:0] tmp_21_i_reg_1175;
wire   [0:0] tmp_51_fu_824_p3;
reg   [63:0] A_shape_load_3_reg_1185;
wire    ap_CS_fsm_state86;
wire   [63:0] grp_fu_837_p2;
reg   [63:0] tmp_22_i_reg_1191;
wire    ap_CS_fsm_state154;
wire   [63:0] grp_fu_842_p2;
reg   [63:0] idx2_reg_1196;
wire   [63:0] j_4_cast_fu_847_p1;
reg   [63:0] j_4_cast_reg_1201;
wire    ap_CS_fsm_state156;
wire   [2:0] j_7_fu_857_p2;
reg   [2:0] j_7_reg_1209;
wire   [0:0] exitcond8_fu_852_p2;
wire    ap_CS_fsm_state157;
reg   [31:0] A_array_load_reg_1229;
wire    ap_CS_fsm_state159;
wire   [63:0] i_18_fu_868_p2;
reg   [63:0] i_18_reg_1237;
wire    ap_CS_fsm_state161;
wire   [31:0] i_21_fu_874_p2;
reg   [31:0] i_21_reg_1242;
wire    ap_CS_fsm_state162;
wire   [63:0] tmp_21_i2_fu_888_p1;
reg   [63:0] tmp_21_i2_reg_1250;
wire   [0:0] tmp_52_fu_880_p3;
wire   [63:0] grp_fu_893_p2;
reg   [63:0] tmp_22_i2_reg_1260;
wire    ap_CS_fsm_state231;
wire   [63:0] grp_fu_899_p2;
reg   [63:0] idx2_4_reg_1265;
wire   [63:0] j_5_cast_fu_905_p1;
reg   [63:0] j_5_cast_reg_1270;
wire    ap_CS_fsm_state233;
wire   [2:0] j_8_fu_915_p2;
reg   [2:0] j_8_reg_1278;
wire   [0:0] exitcond7_fu_910_p2;
wire    ap_CS_fsm_state234;
reg   [31:0] B_array_load_reg_1298;
wire    ap_CS_fsm_state236;
wire    grp_k2c_sub2idx_fu_605_ap_idle;
wire    grp_k2c_sub2idx_fu_605_ap_ready;
wire    grp_k2c_sub2idx_fu_605_ap_done;
wire   [10:0] sum_fu_925_p2;
reg   [10:0] sum_reg_1303;
reg   [2:0] permA_address0;
reg    permA_ce0;
reg    permA_we0;
reg   [63:0] permA_d0;
wire   [63:0] permA_q0;
reg   [2:0] permB_address0;
reg    permB_ce0;
reg    permB_we0;
reg   [63:0] permB_d0;
wire   [63:0] permB_q0;
reg   [2:0] freeA_address0;
reg    freeA_ce0;
reg    freeA_we0;
wire   [63:0] freeA_q0;
reg   [2:0] freeB_address0;
reg    freeB_ce0;
reg    freeB_we0;
wire   [63:0] freeB_q0;
reg   [2:0] newshpA_address0;
reg    newshpA_ce0;
reg    newshpA_we0;
wire   [63:0] newshpA_q0;
reg   [2:0] newshpB_address0;
reg    newshpB_ce0;
reg    newshpB_we0;
wire   [63:0] newshpB_q0;
reg   [2:0] Asub_address0;
reg    Asub_ce0;
reg    Asub_we0;
reg   [63:0] Asub_d0;
wire   [63:0] Asub_q0;
reg   [2:0] Bsub_address0;
reg    Bsub_ce0;
reg    Bsub_we0;
reg   [63:0] Bsub_d0;
wire   [63:0] Bsub_q0;
wire    grp_k2c_matmul_2_fu_593_ap_start;
wire    grp_k2c_matmul_2_fu_593_ap_done;
wire    grp_k2c_matmul_2_fu_593_ap_idle;
wire    grp_k2c_matmul_2_fu_593_ap_ready;
wire   [13:0] grp_k2c_matmul_2_fu_593_C_address0;
wire    grp_k2c_matmul_2_fu_593_C_ce0;
wire    grp_k2c_matmul_2_fu_593_C_we0;
wire   [31:0] grp_k2c_matmul_2_fu_593_C_d0;
wire   [9:0] grp_k2c_matmul_2_fu_593_B_address0;
wire    grp_k2c_matmul_2_fu_593_B_ce0;
wire   [9:0] grp_k2c_matmul_2_fu_593_B_address1;
wire    grp_k2c_matmul_2_fu_593_B_ce1;
wire    grp_k2c_sub2idx_fu_605_ap_start;
wire   [2:0] grp_k2c_sub2idx_fu_605_sub_address0;
wire    grp_k2c_sub2idx_fu_605_sub_ce0;
reg   [63:0] grp_k2c_sub2idx_fu_605_sub_q0;
wire   [2:0] grp_k2c_sub2idx_fu_605_shape_address0;
wire    grp_k2c_sub2idx_fu_605_shape_ce0;
reg   [63:0] grp_k2c_sub2idx_fu_605_shape_q0;
reg   [63:0] grp_k2c_sub2idx_fu_605_ndim;
wire   [63:0] grp_k2c_sub2idx_fu_605_ap_return;
reg   [63:0] i_reg_416;
wire   [0:0] exitcond_fu_622_p2;
reg   [63:0] i_1_reg_428;
reg   [2:0] i_4_reg_440;
wire    ap_CS_fsm_state74;
reg   [2:0] i_5_reg_451;
reg   [2:0] i_7_reg_460;
wire    ap_CS_fsm_state77;
reg   [63:0] j_3_reg_471;
reg   [2:0] i_8_reg_483;
wire    ap_CS_fsm_state80;
reg   [2:0] i_9_reg_494;
wire    ap_CS_fsm_state83;
reg   [63:0] idx2_5_reg_505;
wire    ap_CS_fsm_state160;
reg   [63:0] idx2_i_reg_518;
wire    ap_CS_fsm_state155;
reg   [31:0] i_0_in_i_reg_529;
reg   [2:0] j_4_reg_538;
wire    ap_CS_fsm_state158;
reg   [63:0] idx2_6_reg_549;
wire    ap_CS_fsm_state237;
reg   [63:0] idx2_i6_reg_562;
wire    ap_CS_fsm_state232;
wire   [0:0] exitcond3_fu_863_p2;
reg   [31:0] i_0_in_i7_reg_573;
reg   [2:0] j_5_reg_582;
wire    ap_CS_fsm_state235;
reg    grp_k2c_matmul_2_fu_593_ap_start_reg;
wire    ap_CS_fsm_state238;
reg    grp_k2c_sub2idx_fu_605_ap_start_reg;
wire   [0:0] tmp_23_fu_633_p2;
wire   [0:0] tmp_fu_669_p2;
wire   [63:0] i_5_cast_fu_729_p1;
wire   [63:0] sum_cast_fu_930_p1;
reg   [63:0] count_fu_48;
wire   [63:0] count_4_fu_642_p2;
reg   [63:0] count_2_fu_84;
wire   [63:0] count_5_fu_679_p2;
wire    ap_CS_fsm_state5;
wire   [2:0] tmp_47_fu_699_p1;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state164;
wire   [10:0] tmp_53_fu_921_p1;
reg    grp_fu_690_ap_start;
wire    grp_fu_690_ap_done;
reg    grp_fu_694_ap_start;
wire    grp_fu_694_ap_done;
reg    grp_fu_837_ap_start;
wire    grp_fu_837_ap_done;
reg    grp_fu_842_ap_start;
wire    grp_fu_842_ap_done;
reg    grp_fu_893_ap_start;
wire    grp_fu_893_ap_done;
reg    grp_fu_899_ap_start;
wire    grp_fu_899_ap_done;
reg   [237:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 238'd1;
#0 grp_k2c_matmul_2_fu_593_ap_start_reg = 1'b0;
#0 grp_k2c_sub2idx_fu_605_ap_start_reg = 1'b0;
end

k2c_dot_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
permA_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(permA_address0),
    .ce0(permA_ce0),
    .we0(permA_we0),
    .d0(permA_d0),
    .q0(permA_q0)
);

k2c_dot_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
permB_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(permB_address0),
    .ce0(permB_ce0),
    .we0(permB_we0),
    .d0(permB_d0),
    .q0(permB_q0)
);

k2c_dot_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
freeA_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(freeA_address0),
    .ce0(freeA_ce0),
    .we0(freeA_we0),
    .d0(i_reg_416),
    .q0(freeA_q0)
);

k2c_dot_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
freeB_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(freeB_address0),
    .ce0(freeB_ce0),
    .we0(freeB_we0),
    .d0(i_1_reg_428),
    .q0(freeB_q0)
);

k2c_dot_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
newshpA_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(newshpA_address0),
    .ce0(newshpA_ce0),
    .we0(newshpA_we0),
    .d0(A_shape_q0),
    .q0(newshpA_q0)
);

k2c_dot_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
newshpB_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(newshpB_address0),
    .ce0(newshpB_ce0),
    .we0(newshpB_we0),
    .d0(B_shape_q0),
    .q0(newshpB_q0)
);

k2c_dot_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
Asub_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Asub_address0),
    .ce0(Asub_ce0),
    .we0(Asub_we0),
    .d0(Asub_d0),
    .q0(Asub_q0)
);

k2c_dot_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
Bsub_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Bsub_address0),
    .ce0(Bsub_ce0),
    .we0(Bsub_we0),
    .d0(Bsub_d0),
    .q0(Bsub_q0)
);

k2c_matmul_2 grp_k2c_matmul_2_fu_593(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_matmul_2_fu_593_ap_start),
    .ap_done(grp_k2c_matmul_2_fu_593_ap_done),
    .ap_idle(grp_k2c_matmul_2_fu_593_ap_idle),
    .ap_ready(grp_k2c_matmul_2_fu_593_ap_ready),
    .C_address0(grp_k2c_matmul_2_fu_593_C_address0),
    .C_ce0(grp_k2c_matmul_2_fu_593_C_ce0),
    .C_we0(grp_k2c_matmul_2_fu_593_C_we0),
    .C_d0(grp_k2c_matmul_2_fu_593_C_d0),
    .C_q0(C_array_q0),
    .B_address0(grp_k2c_matmul_2_fu_593_B_address0),
    .B_ce0(grp_k2c_matmul_2_fu_593_B_ce0),
    .B_q0(fwork_q0),
    .B_address1(grp_k2c_matmul_2_fu_593_B_address1),
    .B_ce1(grp_k2c_matmul_2_fu_593_B_ce1),
    .B_q1(fwork_q1),
    .B_offset(A_numel_read),
    .outrows(free_axesA_reg_1029),
    .outcols(free_axesB_reg_1034),
    .innerdim(A_shape_load_reg_1023)
);

k2c_sub2idx grp_k2c_sub2idx_fu_605(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_sub2idx_fu_605_ap_start),
    .ap_done(grp_k2c_sub2idx_fu_605_ap_done),
    .ap_idle(grp_k2c_sub2idx_fu_605_ap_idle),
    .ap_ready(grp_k2c_sub2idx_fu_605_ap_ready),
    .sub_address0(grp_k2c_sub2idx_fu_605_sub_address0),
    .sub_ce0(grp_k2c_sub2idx_fu_605_sub_ce0),
    .sub_q0(grp_k2c_sub2idx_fu_605_sub_q0),
    .shape_address0(grp_k2c_sub2idx_fu_605_shape_address0),
    .shape_ce0(grp_k2c_sub2idx_fu_605_shape_ce0),
    .shape_q0(grp_k2c_sub2idx_fu_605_shape_q0),
    .ndim(grp_k2c_sub2idx_fu_605_ndim),
    .ap_return(grp_k2c_sub2idx_fu_605_ap_return)
);

sample0_udiv_64nshbi #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sample0_udiv_64nshbi_U131(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_690_ap_start),
    .done(grp_fu_690_ap_done),
    .din0(A_numel_read),
    .din1(A_shape_load_reg_1023),
    .ce(1'b1),
    .dout(grp_fu_690_p2)
);

sample0_udiv_64nshbi #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sample0_udiv_64nshbi_U132(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_694_ap_start),
    .done(grp_fu_694_ap_done),
    .din0(B_numel_read),
    .din1(reg_613),
    .ce(1'b1),
    .dout(grp_fu_694_p2)
);

sample0_urem_64nsjbC #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sample0_urem_64nsjbC_U133(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_837_ap_start),
    .done(grp_fu_837_ap_done),
    .din0(idx2_i_reg_518),
    .din1(A_shape_load_3_reg_1185),
    .ce(1'b1),
    .dout(grp_fu_837_p2)
);

sample0_udiv_64nshbi #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sample0_udiv_64nshbi_U134(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_842_ap_start),
    .done(grp_fu_842_ap_done),
    .din0(idx2_i_reg_518),
    .din1(A_shape_load_3_reg_1185),
    .ce(1'b1),
    .dout(grp_fu_842_p2)
);

sample0_urem_64nsjbC #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sample0_urem_64nsjbC_U135(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_893_ap_start),
    .done(grp_fu_893_ap_done),
    .din0(idx2_i6_reg_562),
    .din1(reg_613),
    .ce(1'b1),
    .dout(grp_fu_893_p2)
);

sample0_udiv_64nshbi #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sample0_udiv_64nshbi_U136(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_899_ap_start),
    .done(grp_fu_899_ap_done),
    .din0(idx2_i6_reg_562),
    .din1(reg_613),
    .ce(1'b1),
    .dout(grp_fu_899_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_matmul_2_fu_593_ap_start_reg <= 1'b0;
    end else begin
        if (((exitcond3_fu_863_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state161))) begin
            grp_k2c_matmul_2_fu_593_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_matmul_2_fu_593_ap_ready == 1'b1)) begin
            grp_k2c_matmul_2_fu_593_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_sub2idx_fu_605_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state159) | ((exitcond7_fu_910_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state233)))) begin
            grp_k2c_sub2idx_fu_605_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_sub2idx_fu_605_ap_ready == 1'b1)) begin
            grp_k2c_sub2idx_fu_605_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_669_p2 == 1'd0) & (exitcond1_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        count_2_fu_84 <= count_5_fu_679_p2;
    end else if (((exitcond_fu_622_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        count_2_fu_84 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_23_fu_633_p2 == 1'd0) & (exitcond_fu_622_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        count_fu_48 <= count_4_fu_642_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        count_fu_48 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_863_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state161))) begin
        i_0_in_i7_reg_573 <= tmp_49_reg_1157;
    end else if ((1'b1 == ap_CS_fsm_state232)) begin
        i_0_in_i7_reg_573 <= i_21_reg_1242;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_801_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        i_0_in_i_reg_529 <= tmp_48_reg_1139;
    end else if ((1'b1 == ap_CS_fsm_state155)) begin
        i_0_in_i_reg_529 <= i_19_reg_1167;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i_1_reg_428 <= i_22_fu_663_p2;
    end else if (((exitcond_fu_622_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_1_reg_428 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        i_4_reg_440 <= i_32_reg_1057;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        i_4_reg_440 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_718_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state73))) begin
        i_5_reg_451 <= i_14_cast_reg_1044;
    end else if (((tmp_s_fu_734_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state75))) begin
        i_5_reg_451 <= i_33_fu_739_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_734_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state75))) begin
        i_7_reg_460 <= 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        i_7_reg_460 <= i_34_reg_1093;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_24_fu_749_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
        i_8_reg_483 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        i_8_reg_483 <= i_35_reg_1106;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_771_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78))) begin
        i_9_reg_494 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        i_9_reg_494 <= i_36_reg_1129;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_622_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_416 <= i_20_fu_627_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_416 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond9_fu_787_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state81))) begin
        idx2_5_reg_505 <= 64'd0;
    end else if (((grp_k2c_sub2idx_fu_605_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state160))) begin
        idx2_5_reg_505 <= i_37_reg_1152;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_801_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state84))) begin
        idx2_6_reg_549 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state237)) begin
        idx2_6_reg_549 <= i_18_reg_1237;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_863_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state161))) begin
        idx2_i6_reg_562 <= idx2_6_reg_549;
    end else if ((1'b1 == ap_CS_fsm_state232)) begin
        idx2_i6_reg_562 <= idx2_4_reg_1265;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_801_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        idx2_i_reg_518 <= idx2_5_reg_505;
    end else if ((1'b1 == ap_CS_fsm_state155)) begin
        idx2_i_reg_518 <= idx2_reg_1196;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_734_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state75))) begin
        j_3_reg_471 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        j_3_reg_471 <= j_reg_1083;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_51_fu_824_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
        j_4_reg_538 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state158)) begin
        j_4_reg_538 <= j_7_reg_1209;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_52_fu_880_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state162))) begin
        j_5_reg_582 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state235)) begin
        j_5_reg_582 <= j_8_reg_1278;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state159)) begin
        A_array_load_reg_1229 <= A_array_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        A_shape_load_3_reg_1185 <= A_shape_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        A_shape_load_reg_1023 <= A_shape_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_k2c_sub2idx_fu_605_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state236))) begin
        B_array_load_reg_1298 <= B_array_q0;
        sum_reg_1303 <= sum_fu_925_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        free_axesA_reg_1029 <= grp_fu_690_p2;
        free_axesB_reg_1034 <= grp_fu_694_p2;
        i_14_cast_reg_1044 <= i_14_cast_fu_707_p2;
        i_31_reg_1039 <= i_31_fu_702_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state161)) begin
        i_18_reg_1237 <= i_18_fu_868_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        i_19_reg_1167 <= i_19_fu_818_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state162)) begin
        i_21_reg_1242 <= i_21_fu_874_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        i_32_reg_1057 <= i_32_fu_723_p2;
        i_4_cast_reg_1049[2 : 0] <= i_4_cast_fu_713_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_24_fu_749_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state76))) begin
        i_34_reg_1093 <= i_34_fu_760_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        i_35_reg_1106 <= i_35_fu_776_p2;
        i_8_cast_reg_1098[2 : 0] <= i_8_cast_fu_766_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        i_36_reg_1129 <= i_36_fu_792_p2;
        i_9_cast_reg_1121[2 : 0] <= i_9_cast_fu_782_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        i_37_reg_1152 <= i_37_fu_806_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        i_7_cast_reg_1075[2 : 0] <= i_7_cast_fu_745_p1[2 : 0];
        j_reg_1083 <= j_fu_754_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state231)) begin
        idx2_4_reg_1265 <= grp_fu_899_p2;
        tmp_22_i2_reg_1260 <= grp_fu_893_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        idx2_reg_1196 <= grp_fu_842_p2;
        tmp_22_i_reg_1191 <= grp_fu_837_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state156)) begin
        j_4_cast_reg_1201[2 : 0] <= j_4_cast_fu_847_p1[2 : 0];
        j_7_reg_1209 <= j_7_fu_857_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state233)) begin
        j_5_cast_reg_1270[2 : 0] <= j_5_cast_fu_905_p1[2 : 0];
        j_8_reg_1278 <= j_8_fu_915_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state163) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_613 <= B_shape_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_52_fu_880_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state162))) begin
        tmp_21_i2_reg_1250[31 : 0] <= tmp_21_i2_fu_888_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_51_fu_824_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state85))) begin
        tmp_21_i_reg_1175[31 : 0] <= tmp_21_i_fu_832_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond9_fu_787_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state81))) begin
        tmp_48_reg_1139 <= tmp_48_fu_798_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_801_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state84))) begin
        tmp_49_reg_1157 <= tmp_49_fu_812_p1;
        tmp_50_reg_1162 <= tmp_50_fu_815_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state156)) begin
        A_array_ce0 = 1'b1;
    end else begin
        A_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        A_shape_address0 = tmp_21_i_fu_832_p1;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        A_shape_address0 = permA_q0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        A_shape_address0 = p_read4;
    end else begin
        A_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state3))) begin
        A_shape_ce0 = 1'b1;
    end else begin
        A_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state235)) begin
        Asub_address0 = j_5_cast_reg_1270;
    end else if ((1'b1 == ap_CS_fsm_state157)) begin
        Asub_address0 = permA_q0;
    end else if ((1'b1 == ap_CS_fsm_state155)) begin
        Asub_address0 = tmp_21_i_reg_1175;
    end else if ((1'b1 == ap_CS_fsm_state236)) begin
        Asub_address0 = grp_k2c_sub2idx_fu_605_sub_address0;
    end else begin
        Asub_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state235) | (1'b1 == ap_CS_fsm_state155) | (1'b1 == ap_CS_fsm_state157))) begin
        Asub_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state236)) begin
        Asub_ce0 = grp_k2c_sub2idx_fu_605_sub_ce0;
    end else begin
        Asub_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state235)) begin
        Asub_d0 = Bsub_q0;
    end else if ((1'b1 == ap_CS_fsm_state155)) begin
        Asub_d0 = tmp_22_i_reg_1191;
    end else begin
        Asub_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state235) | (1'b1 == ap_CS_fsm_state155))) begin
        Asub_we0 = 1'b1;
    end else begin
        Asub_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state233)) begin
        B_array_ce0 = 1'b1;
    end else begin
        B_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state162)) begin
        B_shape_address0 = tmp_21_i2_fu_888_p1;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        B_shape_address0 = permB_q0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        B_shape_address0 = 64'd0;
    end else begin
        B_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state162) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state3))) begin
        B_shape_ce0 = 1'b1;
    end else begin
        B_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state234)) begin
        Bsub_address0 = permB_q0;
    end else if ((1'b1 == ap_CS_fsm_state232)) begin
        Bsub_address0 = tmp_21_i2_reg_1250;
    end else if ((1'b1 == ap_CS_fsm_state158)) begin
        Bsub_address0 = j_4_cast_reg_1201;
    end else if ((1'b1 == ap_CS_fsm_state160)) begin
        Bsub_address0 = grp_k2c_sub2idx_fu_605_sub_address0;
    end else begin
        Bsub_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state232) | (1'b1 == ap_CS_fsm_state158) | (1'b1 == ap_CS_fsm_state234))) begin
        Bsub_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state160)) begin
        Bsub_ce0 = grp_k2c_sub2idx_fu_605_sub_ce0;
    end else begin
        Bsub_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state232)) begin
        Bsub_d0 = tmp_22_i2_reg_1260;
    end else if ((1'b1 == ap_CS_fsm_state158)) begin
        Bsub_d0 = Asub_q0;
    end else begin
        Bsub_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state232) | (1'b1 == ap_CS_fsm_state158))) begin
        Bsub_we0 = 1'b1;
    end else begin
        Bsub_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_k2c_matmul_2_fu_593_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state238)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_k2c_matmul_2_fu_593_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state238))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        freeA_address0 = i_4_cast_fu_713_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        freeA_address0 = count_fu_48;
    end else begin
        freeA_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state2))) begin
        freeA_ce0 = 1'b1;
    end else begin
        freeA_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_23_fu_633_p2 == 1'd0) & (exitcond_fu_622_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        freeA_we0 = 1'b1;
    end else begin
        freeA_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        freeB_address0 = j_3_reg_471;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        freeB_address0 = count_2_fu_84;
    end else begin
        freeB_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state3))) begin
        freeB_ce0 = 1'b1;
    end else begin
        freeB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_669_p2 == 1'd0) & (exitcond1_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        freeB_we0 = 1'b1;
    end else begin
        freeB_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state237)) begin
        fwork_address0 = sum_cast_fu_930_p1;
    end else if ((1'b1 == ap_CS_fsm_state160)) begin
        fwork_address0 = grp_k2c_sub2idx_fu_605_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state238)) begin
        fwork_address0 = grp_k2c_matmul_2_fu_593_B_address0;
    end else begin
        fwork_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state237) | ((grp_k2c_sub2idx_fu_605_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state160)))) begin
        fwork_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state238)) begin
        fwork_ce0 = grp_k2c_matmul_2_fu_593_B_ce0;
    end else begin
        fwork_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state238)) begin
        fwork_ce1 = grp_k2c_matmul_2_fu_593_B_ce1;
    end else begin
        fwork_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state237)) begin
        fwork_d0 = B_array_load_reg_1298;
    end else if ((1'b1 == ap_CS_fsm_state160)) begin
        fwork_d0 = A_array_load_reg_1229;
    end else begin
        fwork_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state237) | ((grp_k2c_sub2idx_fu_605_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state160)))) begin
        fwork_we0 = 1'b1;
    end else begin
        fwork_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_690_ap_start = 1'b1;
    end else begin
        grp_fu_690_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_694_ap_start = 1'b1;
    end else begin
        grp_fu_694_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        grp_fu_837_ap_start = 1'b1;
    end else begin
        grp_fu_837_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        grp_fu_842_ap_start = 1'b1;
    end else begin
        grp_fu_842_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state164)) begin
        grp_fu_893_ap_start = 1'b1;
    end else begin
        grp_fu_893_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state164)) begin
        grp_fu_899_ap_start = 1'b1;
    end else begin
        grp_fu_899_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state236)) begin
        grp_k2c_sub2idx_fu_605_ndim = B_ndim_read;
    end else if ((1'b1 == ap_CS_fsm_state160)) begin
        grp_k2c_sub2idx_fu_605_ndim = A_ndim_read;
    end else begin
        grp_k2c_sub2idx_fu_605_ndim = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state236)) begin
        grp_k2c_sub2idx_fu_605_shape_q0 = newshpB_q0;
    end else if ((1'b1 == ap_CS_fsm_state160)) begin
        grp_k2c_sub2idx_fu_605_shape_q0 = newshpA_q0;
    end else begin
        grp_k2c_sub2idx_fu_605_shape_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state236)) begin
        grp_k2c_sub2idx_fu_605_sub_q0 = Asub_q0;
    end else if ((1'b1 == ap_CS_fsm_state160)) begin
        grp_k2c_sub2idx_fu_605_sub_q0 = Bsub_q0;
    end else begin
        grp_k2c_sub2idx_fu_605_sub_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        newshpA_address0 = i_8_cast_reg_1098;
    end else if ((1'b1 == ap_CS_fsm_state160)) begin
        newshpA_address0 = grp_k2c_sub2idx_fu_605_shape_address0;
    end else begin
        newshpA_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        newshpA_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state160)) begin
        newshpA_ce0 = grp_k2c_sub2idx_fu_605_shape_ce0;
    end else begin
        newshpA_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        newshpA_we0 = 1'b1;
    end else begin
        newshpA_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        newshpB_address0 = i_9_cast_reg_1121;
    end else if ((1'b1 == ap_CS_fsm_state236)) begin
        newshpB_address0 = grp_k2c_sub2idx_fu_605_shape_address0;
    end else begin
        newshpB_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        newshpB_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state236)) begin
        newshpB_ce0 = grp_k2c_sub2idx_fu_605_shape_ce0;
    end else begin
        newshpB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        newshpB_we0 = 1'b1;
    end else begin
        newshpB_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state156)) begin
        permA_address0 = j_4_cast_fu_847_p1;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        permA_address0 = i_8_cast_fu_766_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        permA_address0 = i_5_cast_fu_729_p1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        permA_address0 = i_4_cast_reg_1049;
    end else begin
        permA_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state75))) begin
        permA_ce0 = 1'b1;
    end else begin
        permA_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        permA_d0 = p_read4;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        permA_d0 = freeA_q0;
    end else begin
        permA_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state74) | ((tmp_s_fu_734_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state75)))) begin
        permA_we0 = 1'b1;
    end else begin
        permA_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state233)) begin
        permB_address0 = j_5_cast_fu_905_p1;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        permB_address0 = i_9_cast_fu_782_p1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        permB_address0 = i_7_cast_reg_1075;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        permB_address0 = 64'd0;
    end else begin
        permB_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state233) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state75))) begin
        permB_ce0 = 1'b1;
    end else begin
        permB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        permB_d0 = freeB_q0;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        permB_d0 = 64'd0;
    end else begin
        permB_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state77) | ((tmp_s_fu_734_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state75)))) begin
        permB_we0 = 1'b1;
    end else begin
        permB_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond_fu_622_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond1_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            if (((exitcond6_fu_718_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state73))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state75 : begin
            if (((tmp_s_fu_734_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state75))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end
        end
        ap_ST_fsm_state76 : begin
            if (((tmp_24_fu_749_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state78 : begin
            if (((exitcond5_fu_771_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78))) begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state81 : begin
            if (((exitcond9_fu_787_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state81))) begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state84 : begin
            if (((exitcond2_fu_801_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state84))) begin
                ap_NS_fsm = ap_ST_fsm_state161;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end
        end
        ap_ST_fsm_state85 : begin
            if (((tmp_51_fu_824_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
                ap_NS_fsm = ap_ST_fsm_state156;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state86;
            end
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state156 : begin
            if (((exitcond8_fu_852_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state156))) begin
                ap_NS_fsm = ap_ST_fsm_state159;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state157;
            end
        end
        ap_ST_fsm_state157 : begin
            ap_NS_fsm = ap_ST_fsm_state158;
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_state160;
        end
        ap_ST_fsm_state160 : begin
            if (((grp_k2c_sub2idx_fu_605_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state160))) begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state160;
            end
        end
        ap_ST_fsm_state161 : begin
            if (((exitcond3_fu_863_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state161))) begin
                ap_NS_fsm = ap_ST_fsm_state162;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state238;
            end
        end
        ap_ST_fsm_state162 : begin
            if (((tmp_52_fu_880_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state162))) begin
                ap_NS_fsm = ap_ST_fsm_state233;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state163;
            end
        end
        ap_ST_fsm_state163 : begin
            ap_NS_fsm = ap_ST_fsm_state164;
        end
        ap_ST_fsm_state164 : begin
            ap_NS_fsm = ap_ST_fsm_state165;
        end
        ap_ST_fsm_state165 : begin
            ap_NS_fsm = ap_ST_fsm_state166;
        end
        ap_ST_fsm_state166 : begin
            ap_NS_fsm = ap_ST_fsm_state167;
        end
        ap_ST_fsm_state167 : begin
            ap_NS_fsm = ap_ST_fsm_state168;
        end
        ap_ST_fsm_state168 : begin
            ap_NS_fsm = ap_ST_fsm_state169;
        end
        ap_ST_fsm_state169 : begin
            ap_NS_fsm = ap_ST_fsm_state170;
        end
        ap_ST_fsm_state170 : begin
            ap_NS_fsm = ap_ST_fsm_state171;
        end
        ap_ST_fsm_state171 : begin
            ap_NS_fsm = ap_ST_fsm_state172;
        end
        ap_ST_fsm_state172 : begin
            ap_NS_fsm = ap_ST_fsm_state173;
        end
        ap_ST_fsm_state173 : begin
            ap_NS_fsm = ap_ST_fsm_state174;
        end
        ap_ST_fsm_state174 : begin
            ap_NS_fsm = ap_ST_fsm_state175;
        end
        ap_ST_fsm_state175 : begin
            ap_NS_fsm = ap_ST_fsm_state176;
        end
        ap_ST_fsm_state176 : begin
            ap_NS_fsm = ap_ST_fsm_state177;
        end
        ap_ST_fsm_state177 : begin
            ap_NS_fsm = ap_ST_fsm_state178;
        end
        ap_ST_fsm_state178 : begin
            ap_NS_fsm = ap_ST_fsm_state179;
        end
        ap_ST_fsm_state179 : begin
            ap_NS_fsm = ap_ST_fsm_state180;
        end
        ap_ST_fsm_state180 : begin
            ap_NS_fsm = ap_ST_fsm_state181;
        end
        ap_ST_fsm_state181 : begin
            ap_NS_fsm = ap_ST_fsm_state182;
        end
        ap_ST_fsm_state182 : begin
            ap_NS_fsm = ap_ST_fsm_state183;
        end
        ap_ST_fsm_state183 : begin
            ap_NS_fsm = ap_ST_fsm_state184;
        end
        ap_ST_fsm_state184 : begin
            ap_NS_fsm = ap_ST_fsm_state185;
        end
        ap_ST_fsm_state185 : begin
            ap_NS_fsm = ap_ST_fsm_state186;
        end
        ap_ST_fsm_state186 : begin
            ap_NS_fsm = ap_ST_fsm_state187;
        end
        ap_ST_fsm_state187 : begin
            ap_NS_fsm = ap_ST_fsm_state188;
        end
        ap_ST_fsm_state188 : begin
            ap_NS_fsm = ap_ST_fsm_state189;
        end
        ap_ST_fsm_state189 : begin
            ap_NS_fsm = ap_ST_fsm_state190;
        end
        ap_ST_fsm_state190 : begin
            ap_NS_fsm = ap_ST_fsm_state191;
        end
        ap_ST_fsm_state191 : begin
            ap_NS_fsm = ap_ST_fsm_state192;
        end
        ap_ST_fsm_state192 : begin
            ap_NS_fsm = ap_ST_fsm_state193;
        end
        ap_ST_fsm_state193 : begin
            ap_NS_fsm = ap_ST_fsm_state194;
        end
        ap_ST_fsm_state194 : begin
            ap_NS_fsm = ap_ST_fsm_state195;
        end
        ap_ST_fsm_state195 : begin
            ap_NS_fsm = ap_ST_fsm_state196;
        end
        ap_ST_fsm_state196 : begin
            ap_NS_fsm = ap_ST_fsm_state197;
        end
        ap_ST_fsm_state197 : begin
            ap_NS_fsm = ap_ST_fsm_state198;
        end
        ap_ST_fsm_state198 : begin
            ap_NS_fsm = ap_ST_fsm_state199;
        end
        ap_ST_fsm_state199 : begin
            ap_NS_fsm = ap_ST_fsm_state200;
        end
        ap_ST_fsm_state200 : begin
            ap_NS_fsm = ap_ST_fsm_state201;
        end
        ap_ST_fsm_state201 : begin
            ap_NS_fsm = ap_ST_fsm_state202;
        end
        ap_ST_fsm_state202 : begin
            ap_NS_fsm = ap_ST_fsm_state203;
        end
        ap_ST_fsm_state203 : begin
            ap_NS_fsm = ap_ST_fsm_state204;
        end
        ap_ST_fsm_state204 : begin
            ap_NS_fsm = ap_ST_fsm_state205;
        end
        ap_ST_fsm_state205 : begin
            ap_NS_fsm = ap_ST_fsm_state206;
        end
        ap_ST_fsm_state206 : begin
            ap_NS_fsm = ap_ST_fsm_state207;
        end
        ap_ST_fsm_state207 : begin
            ap_NS_fsm = ap_ST_fsm_state208;
        end
        ap_ST_fsm_state208 : begin
            ap_NS_fsm = ap_ST_fsm_state209;
        end
        ap_ST_fsm_state209 : begin
            ap_NS_fsm = ap_ST_fsm_state210;
        end
        ap_ST_fsm_state210 : begin
            ap_NS_fsm = ap_ST_fsm_state211;
        end
        ap_ST_fsm_state211 : begin
            ap_NS_fsm = ap_ST_fsm_state212;
        end
        ap_ST_fsm_state212 : begin
            ap_NS_fsm = ap_ST_fsm_state213;
        end
        ap_ST_fsm_state213 : begin
            ap_NS_fsm = ap_ST_fsm_state214;
        end
        ap_ST_fsm_state214 : begin
            ap_NS_fsm = ap_ST_fsm_state215;
        end
        ap_ST_fsm_state215 : begin
            ap_NS_fsm = ap_ST_fsm_state216;
        end
        ap_ST_fsm_state216 : begin
            ap_NS_fsm = ap_ST_fsm_state217;
        end
        ap_ST_fsm_state217 : begin
            ap_NS_fsm = ap_ST_fsm_state218;
        end
        ap_ST_fsm_state218 : begin
            ap_NS_fsm = ap_ST_fsm_state219;
        end
        ap_ST_fsm_state219 : begin
            ap_NS_fsm = ap_ST_fsm_state220;
        end
        ap_ST_fsm_state220 : begin
            ap_NS_fsm = ap_ST_fsm_state221;
        end
        ap_ST_fsm_state221 : begin
            ap_NS_fsm = ap_ST_fsm_state222;
        end
        ap_ST_fsm_state222 : begin
            ap_NS_fsm = ap_ST_fsm_state223;
        end
        ap_ST_fsm_state223 : begin
            ap_NS_fsm = ap_ST_fsm_state224;
        end
        ap_ST_fsm_state224 : begin
            ap_NS_fsm = ap_ST_fsm_state225;
        end
        ap_ST_fsm_state225 : begin
            ap_NS_fsm = ap_ST_fsm_state226;
        end
        ap_ST_fsm_state226 : begin
            ap_NS_fsm = ap_ST_fsm_state227;
        end
        ap_ST_fsm_state227 : begin
            ap_NS_fsm = ap_ST_fsm_state228;
        end
        ap_ST_fsm_state228 : begin
            ap_NS_fsm = ap_ST_fsm_state229;
        end
        ap_ST_fsm_state229 : begin
            ap_NS_fsm = ap_ST_fsm_state230;
        end
        ap_ST_fsm_state230 : begin
            ap_NS_fsm = ap_ST_fsm_state231;
        end
        ap_ST_fsm_state231 : begin
            ap_NS_fsm = ap_ST_fsm_state232;
        end
        ap_ST_fsm_state232 : begin
            ap_NS_fsm = ap_ST_fsm_state162;
        end
        ap_ST_fsm_state233 : begin
            if (((exitcond7_fu_910_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state233))) begin
                ap_NS_fsm = ap_ST_fsm_state236;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state234;
            end
        end
        ap_ST_fsm_state234 : begin
            ap_NS_fsm = ap_ST_fsm_state235;
        end
        ap_ST_fsm_state235 : begin
            ap_NS_fsm = ap_ST_fsm_state233;
        end
        ap_ST_fsm_state236 : begin
            if (((grp_k2c_sub2idx_fu_605_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state236))) begin
                ap_NS_fsm = ap_ST_fsm_state237;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state236;
            end
        end
        ap_ST_fsm_state237 : begin
            ap_NS_fsm = ap_ST_fsm_state161;
        end
        ap_ST_fsm_state238 : begin
            if (((grp_k2c_matmul_2_fu_593_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state238))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state238;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_array_address0 = idx2_5_reg_505;

assign B_array_address0 = idx2_6_reg_549;

assign C_array_address0 = grp_k2c_matmul_2_fu_593_C_address0;

assign C_array_ce0 = grp_k2c_matmul_2_fu_593_C_ce0;

assign C_array_d0 = grp_k2c_matmul_2_fu_593_C_d0;

assign C_array_we0 = grp_k2c_matmul_2_fu_593_C_we0;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state154 = ap_CS_fsm[32'd153];

assign ap_CS_fsm_state155 = ap_CS_fsm[32'd154];

assign ap_CS_fsm_state156 = ap_CS_fsm[32'd155];

assign ap_CS_fsm_state157 = ap_CS_fsm[32'd156];

assign ap_CS_fsm_state158 = ap_CS_fsm[32'd157];

assign ap_CS_fsm_state159 = ap_CS_fsm[32'd158];

assign ap_CS_fsm_state160 = ap_CS_fsm[32'd159];

assign ap_CS_fsm_state161 = ap_CS_fsm[32'd160];

assign ap_CS_fsm_state162 = ap_CS_fsm[32'd161];

assign ap_CS_fsm_state163 = ap_CS_fsm[32'd162];

assign ap_CS_fsm_state164 = ap_CS_fsm[32'd163];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state231 = ap_CS_fsm[32'd230];

assign ap_CS_fsm_state232 = ap_CS_fsm[32'd231];

assign ap_CS_fsm_state233 = ap_CS_fsm[32'd232];

assign ap_CS_fsm_state234 = ap_CS_fsm[32'd233];

assign ap_CS_fsm_state235 = ap_CS_fsm[32'd234];

assign ap_CS_fsm_state236 = ap_CS_fsm[32'd235];

assign ap_CS_fsm_state237 = ap_CS_fsm[32'd236];

assign ap_CS_fsm_state238 = ap_CS_fsm[32'd237];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign count_4_fu_642_p2 = (count_fu_48 + 64'd1);

assign count_5_fu_679_p2 = (count_2_fu_84 + 64'd1);

assign exitcond1_fu_658_p2 = ((i_1_reg_428 == B_ndim_read) ? 1'b1 : 1'b0);

assign exitcond2_fu_801_p2 = ((idx2_5_reg_505 == A_numel_read) ? 1'b1 : 1'b0);

assign exitcond3_fu_863_p2 = ((idx2_6_reg_549 == B_numel_read) ? 1'b1 : 1'b0);

assign exitcond5_fu_771_p2 = ((i_8_cast_fu_766_p1 == A_ndim_read) ? 1'b1 : 1'b0);

assign exitcond6_fu_718_p2 = ((i_4_cast_fu_713_p1 == i_31_reg_1039) ? 1'b1 : 1'b0);

assign exitcond7_fu_910_p2 = ((j_5_cast_fu_905_p1 == B_ndim_read) ? 1'b1 : 1'b0);

assign exitcond8_fu_852_p2 = ((j_4_cast_fu_847_p1 == A_ndim_read) ? 1'b1 : 1'b0);

assign exitcond9_fu_787_p2 = ((i_9_cast_fu_782_p1 == B_ndim_read) ? 1'b1 : 1'b0);

assign exitcond_fu_622_p2 = ((i_reg_416 == A_ndim_read) ? 1'b1 : 1'b0);

assign fwork_address1 = grp_k2c_matmul_2_fu_593_B_address1;

assign grp_k2c_matmul_2_fu_593_ap_start = grp_k2c_matmul_2_fu_593_ap_start_reg;

assign grp_k2c_sub2idx_fu_605_ap_start = grp_k2c_sub2idx_fu_605_ap_start_reg;

assign i_14_cast_fu_707_p2 = ($signed(3'd7) + $signed(tmp_47_fu_699_p1));

assign i_18_fu_868_p2 = (idx2_6_reg_549 + 64'd1);

assign i_19_fu_818_p2 = ($signed(i_0_in_i_reg_529) + $signed(32'd4294967295));

assign i_20_fu_627_p2 = (i_reg_416 + 64'd1);

assign i_21_fu_874_p2 = ($signed(i_0_in_i7_reg_573) + $signed(32'd4294967295));

assign i_22_fu_663_p2 = (i_1_reg_428 + 64'd1);

assign i_31_fu_702_p2 = ($signed(64'd18446744073709551615) + $signed(A_ndim_read));

assign i_32_fu_723_p2 = (i_4_reg_440 + 3'd1);

assign i_33_fu_739_p2 = (i_5_reg_451 + 3'd1);

assign i_34_fu_760_p2 = (i_7_reg_460 + 3'd1);

assign i_35_fu_776_p2 = (i_8_reg_483 + 3'd1);

assign i_36_fu_792_p2 = (i_9_reg_494 + 3'd1);

assign i_37_fu_806_p2 = (idx2_5_reg_505 + 64'd1);

assign i_4_cast_fu_713_p1 = i_4_reg_440;

assign i_5_cast_fu_729_p1 = i_5_reg_451;

assign i_7_cast_fu_745_p1 = i_7_reg_460;

assign i_8_cast_fu_766_p1 = i_8_reg_483;

assign i_9_cast_fu_782_p1 = i_9_reg_494;

assign j_4_cast_fu_847_p1 = j_4_reg_538;

assign j_5_cast_fu_905_p1 = j_5_reg_582;

assign j_7_fu_857_p2 = (j_4_reg_538 + 3'd1);

assign j_8_fu_915_p2 = (j_5_reg_582 + 3'd1);

assign j_fu_754_p2 = (j_3_reg_471 + 64'd1);

assign sum_cast_fu_930_p1 = sum_reg_1303;

assign sum_fu_925_p2 = (tmp_53_fu_921_p1 + tmp_50_reg_1162);

assign tmp_21_i2_fu_888_p1 = i_21_fu_874_p2;

assign tmp_21_i_fu_832_p1 = i_19_fu_818_p2;

assign tmp_23_fu_633_p2 = ((i_reg_416 == p_read4) ? 1'b1 : 1'b0);

assign tmp_24_fu_749_p2 = ((i_7_cast_fu_745_p1 < B_ndim_read) ? 1'b1 : 1'b0);

assign tmp_47_fu_699_p1 = A_ndim_read[2:0];

assign tmp_48_fu_798_p1 = A_ndim_read[31:0];

assign tmp_49_fu_812_p1 = B_ndim_read[31:0];

assign tmp_50_fu_815_p1 = A_numel_read[10:0];

assign tmp_51_fu_824_p3 = i_19_fu_818_p2[32'd31];

assign tmp_52_fu_880_p3 = i_21_fu_874_p2[32'd31];

assign tmp_53_fu_921_p1 = grp_k2c_sub2idx_fu_605_ap_return[10:0];

assign tmp_fu_669_p2 = ((i_1_reg_428 == 64'd0) ? 1'b1 : 1'b0);

assign tmp_s_fu_734_p2 = ((i_5_cast_fu_729_p1 < A_ndim_read) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    i_4_cast_reg_1049[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_7_cast_reg_1075[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_8_cast_reg_1098[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_9_cast_reg_1121[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_21_i_reg_1175[63:32] <= 32'b00000000000000000000000000000000;
    j_4_cast_reg_1201[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_21_i2_reg_1250[63:32] <= 32'b00000000000000000000000000000000;
    j_5_cast_reg_1270[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
end

endmodule //k2c_dot_2
