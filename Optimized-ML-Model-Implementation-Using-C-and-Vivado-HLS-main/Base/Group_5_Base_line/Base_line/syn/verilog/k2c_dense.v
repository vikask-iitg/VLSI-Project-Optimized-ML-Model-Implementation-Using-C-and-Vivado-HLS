// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module k2c_dense (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        output_array_address0,
        output_array_ce0,
        output_array_we0,
        output_array_d0,
        output_array_q0,
        output_array_address1,
        output_array_ce1,
        output_array_we1,
        output_array_d1,
        output_array_q1,
        output_numel_read,
        input_array_address0,
        input_array_ce0,
        input_array_q0,
        input_ndim_read,
        input_numel_read,
        input_shape_address0,
        input_shape_ce0,
        input_shape_q0,
        kernel_array_address0,
        kernel_array_ce0,
        kernel_array_q0,
        kernel_ndim_read,
        kernel_numel_read,
        kernel_shape_address0,
        kernel_shape_ce0,
        kernel_shape_q0,
        bias_array_address0,
        bias_array_ce0,
        bias_array_q0,
        bias_numel_read,
        fwork_address0,
        fwork_ce0,
        fwork_we0,
        fwork_d0,
        fwork_q0,
        fwork_address1,
        fwork_ce1,
        fwork_q1
);

parameter    ap_ST_fsm_state1 = 27'd1;
parameter    ap_ST_fsm_state2 = 27'd2;
parameter    ap_ST_fsm_state3 = 27'd4;
parameter    ap_ST_fsm_state4 = 27'd8;
parameter    ap_ST_fsm_state5 = 27'd16;
parameter    ap_ST_fsm_state6 = 27'd32;
parameter    ap_ST_fsm_state7 = 27'd64;
parameter    ap_ST_fsm_state8 = 27'd128;
parameter    ap_ST_fsm_state9 = 27'd256;
parameter    ap_ST_fsm_state10 = 27'd512;
parameter    ap_ST_fsm_state11 = 27'd1024;
parameter    ap_ST_fsm_state12 = 27'd2048;
parameter    ap_ST_fsm_state13 = 27'd4096;
parameter    ap_ST_fsm_state14 = 27'd8192;
parameter    ap_ST_fsm_state15 = 27'd16384;
parameter    ap_ST_fsm_state16 = 27'd32768;
parameter    ap_ST_fsm_pp0_stage0 = 27'd65536;
parameter    ap_ST_fsm_state77 = 27'd131072;
parameter    ap_ST_fsm_state78 = 27'd262144;
parameter    ap_ST_fsm_state79 = 27'd524288;
parameter    ap_ST_fsm_state80 = 27'd1048576;
parameter    ap_ST_fsm_state81 = 27'd2097152;
parameter    ap_ST_fsm_state82 = 27'd4194304;
parameter    ap_ST_fsm_state83 = 27'd8388608;
parameter    ap_ST_fsm_state84 = 27'd16777216;
parameter    ap_ST_fsm_pp1_stage0 = 27'd33554432;
parameter    ap_ST_fsm_state145 = 27'd67108864;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] output_array_address0;
output   output_array_ce0;
output   output_array_we0;
output  [31:0] output_array_d0;
input  [31:0] output_array_q0;
output  [13:0] output_array_address1;
output   output_array_ce1;
output   output_array_we1;
output  [31:0] output_array_d1;
input  [31:0] output_array_q1;
input  [63:0] output_numel_read;
output  [13:0] input_array_address0;
output   input_array_ce0;
input  [31:0] input_array_q0;
input  [63:0] input_ndim_read;
input  [63:0] input_numel_read;
output  [2:0] input_shape_address0;
output   input_shape_ce0;
input  [63:0] input_shape_q0;
output  [13:0] kernel_array_address0;
output   kernel_array_ce0;
input  [31:0] kernel_array_q0;
input  [63:0] kernel_ndim_read;
input  [63:0] kernel_numel_read;
output  [2:0] kernel_shape_address0;
output   kernel_shape_ce0;
input  [63:0] kernel_shape_q0;
output  [13:0] bias_array_address0;
output   bias_array_ce0;
input  [31:0] bias_array_q0;
input  [63:0] bias_numel_read;
output  [4:0] fwork_address0;
output   fwork_ce0;
output   fwork_we0;
output  [31:0] fwork_d0;
input  [31:0] fwork_q0;
output  [4:0] fwork_address1;
output   fwork_ce1;
input  [31:0] fwork_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] output_array_address0;
reg output_array_ce0;
reg output_array_we0;
reg[31:0] output_array_d0;
reg[13:0] output_array_address1;
reg output_array_ce1;
reg output_array_we1;
reg[13:0] input_array_address0;
reg input_array_ce0;
reg[2:0] input_shape_address0;
reg input_shape_ce0;
reg[13:0] kernel_array_address0;
reg kernel_array_ce0;
reg[2:0] kernel_shape_address0;
reg kernel_shape_ce0;
reg[13:0] bias_array_address0;
reg bias_array_ce0;

(* fsm_encoding = "none" *) reg   [26:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [13:0] i3_reg_214;
reg   [13:0] i1_reg_225;
wire   [31:0] grp_fu_277_p2;
reg   [31:0] reg_292;
wire    ap_CS_fsm_state15;
wire    ap_block_state17_pp0_stage0_iter0;
wire    ap_block_state18_pp0_stage0_iter1;
wire    ap_block_state19_pp0_stage0_iter2;
wire    ap_block_state20_pp0_stage0_iter3;
wire    ap_block_state21_pp0_stage0_iter4;
wire    ap_block_state22_pp0_stage0_iter5;
wire    ap_block_state23_pp0_stage0_iter6;
wire    ap_block_state24_pp0_stage0_iter7;
wire    ap_block_state25_pp0_stage0_iter8;
wire    ap_block_state26_pp0_stage0_iter9;
wire    ap_block_state27_pp0_stage0_iter10;
wire    ap_block_state28_pp0_stage0_iter11;
wire    ap_block_state29_pp0_stage0_iter12;
wire    ap_block_state30_pp0_stage0_iter13;
wire    ap_block_state31_pp0_stage0_iter14;
wire    ap_block_state32_pp0_stage0_iter15;
wire    ap_block_state33_pp0_stage0_iter16;
wire    ap_block_state34_pp0_stage0_iter17;
wire    ap_block_state35_pp0_stage0_iter18;
wire    ap_block_state36_pp0_stage0_iter19;
wire    ap_block_state37_pp0_stage0_iter20;
wire    ap_block_state38_pp0_stage0_iter21;
wire    ap_block_state39_pp0_stage0_iter22;
wire    ap_block_state40_pp0_stage0_iter23;
wire    ap_block_state41_pp0_stage0_iter24;
wire    ap_block_state42_pp0_stage0_iter25;
wire    ap_block_state43_pp0_stage0_iter26;
wire    ap_block_state44_pp0_stage0_iter27;
wire    ap_block_state45_pp0_stage0_iter28;
wire    ap_block_state46_pp0_stage0_iter29;
wire    ap_block_state47_pp0_stage0_iter30;
wire    ap_block_state48_pp0_stage0_iter31;
wire    ap_block_state49_pp0_stage0_iter32;
wire    ap_block_state50_pp0_stage0_iter33;
wire    ap_block_state51_pp0_stage0_iter34;
wire    ap_block_state52_pp0_stage0_iter35;
wire    ap_block_state53_pp0_stage0_iter36;
wire    ap_block_state54_pp0_stage0_iter37;
wire    ap_block_state55_pp0_stage0_iter38;
wire    ap_block_state56_pp0_stage0_iter39;
wire    ap_block_state57_pp0_stage0_iter40;
wire    ap_block_state58_pp0_stage0_iter41;
wire    ap_block_state59_pp0_stage0_iter42;
wire    ap_block_state60_pp0_stage0_iter43;
wire    ap_block_state61_pp0_stage0_iter44;
wire    ap_block_state62_pp0_stage0_iter45;
wire    ap_block_state63_pp0_stage0_iter46;
wire    ap_block_state64_pp0_stage0_iter47;
wire    ap_block_state65_pp0_stage0_iter48;
wire    ap_block_state66_pp0_stage0_iter49;
wire    ap_block_state67_pp0_stage0_iter50;
wire    ap_block_state68_pp0_stage0_iter51;
wire    ap_block_state69_pp0_stage0_iter52;
wire    ap_block_state70_pp0_stage0_iter53;
wire    ap_block_state71_pp0_stage0_iter54;
wire    ap_block_state72_pp0_stage0_iter55;
wire    ap_block_state73_pp0_stage0_iter56;
wire    ap_block_state74_pp0_stage0_iter57;
wire    ap_block_state75_pp0_stage0_iter58;
wire    ap_block_state76_pp0_stage0_iter59;
wire    ap_block_pp0_stage0_11001;
wire    ap_block_state85_pp1_stage0_iter0;
wire    ap_block_state86_pp1_stage0_iter1;
wire    ap_block_state87_pp1_stage0_iter2;
wire    ap_block_state88_pp1_stage0_iter3;
wire    ap_block_state89_pp1_stage0_iter4;
wire    ap_block_state90_pp1_stage0_iter5;
wire    ap_block_state91_pp1_stage0_iter6;
wire    ap_block_state92_pp1_stage0_iter7;
wire    ap_block_state93_pp1_stage0_iter8;
wire    ap_block_state94_pp1_stage0_iter9;
wire    ap_block_state95_pp1_stage0_iter10;
wire    ap_block_state96_pp1_stage0_iter11;
wire    ap_block_state97_pp1_stage0_iter12;
wire    ap_block_state98_pp1_stage0_iter13;
wire    ap_block_state99_pp1_stage0_iter14;
wire    ap_block_state100_pp1_stage0_iter15;
wire    ap_block_state101_pp1_stage0_iter16;
wire    ap_block_state102_pp1_stage0_iter17;
wire    ap_block_state103_pp1_stage0_iter18;
wire    ap_block_state104_pp1_stage0_iter19;
wire    ap_block_state105_pp1_stage0_iter20;
wire    ap_block_state106_pp1_stage0_iter21;
wire    ap_block_state107_pp1_stage0_iter22;
wire    ap_block_state108_pp1_stage0_iter23;
wire    ap_block_state109_pp1_stage0_iter24;
wire    ap_block_state110_pp1_stage0_iter25;
wire    ap_block_state111_pp1_stage0_iter26;
wire    ap_block_state112_pp1_stage0_iter27;
wire    ap_block_state113_pp1_stage0_iter28;
wire    ap_block_state114_pp1_stage0_iter29;
wire    ap_block_state115_pp1_stage0_iter30;
wire    ap_block_state116_pp1_stage0_iter31;
wire    ap_block_state117_pp1_stage0_iter32;
wire    ap_block_state118_pp1_stage0_iter33;
wire    ap_block_state119_pp1_stage0_iter34;
wire    ap_block_state120_pp1_stage0_iter35;
wire    ap_block_state121_pp1_stage0_iter36;
wire    ap_block_state122_pp1_stage0_iter37;
wire    ap_block_state123_pp1_stage0_iter38;
wire    ap_block_state124_pp1_stage0_iter39;
wire    ap_block_state125_pp1_stage0_iter40;
wire    ap_block_state126_pp1_stage0_iter41;
wire    ap_block_state127_pp1_stage0_iter42;
wire    ap_block_state128_pp1_stage0_iter43;
wire    ap_block_state129_pp1_stage0_iter44;
wire    ap_block_state130_pp1_stage0_iter45;
wire    ap_block_state131_pp1_stage0_iter46;
wire    ap_block_state132_pp1_stage0_iter47;
wire    ap_block_state133_pp1_stage0_iter48;
wire    ap_block_state134_pp1_stage0_iter49;
wire    ap_block_state135_pp1_stage0_iter50;
wire    ap_block_state136_pp1_stage0_iter51;
wire    ap_block_state137_pp1_stage0_iter52;
wire    ap_block_state138_pp1_stage0_iter53;
wire    ap_block_state139_pp1_stage0_iter54;
wire    ap_block_state140_pp1_stage0_iter55;
wire    ap_block_state141_pp1_stage0_iter56;
wire    ap_block_state142_pp1_stage0_iter57;
wire    ap_block_state143_pp1_stage0_iter58;
wire    ap_block_state144_pp1_stage0_iter59;
wire    ap_block_pp1_stage0_11001;
reg    ap_enable_reg_pp0_iter28;
reg   [0:0] exitcond8_reg_542;
reg   [0:0] exitcond8_reg_542_pp0_iter27_reg;
reg    ap_enable_reg_pp1_iter28;
reg   [0:0] exitcond_reg_594;
reg   [0:0] exitcond_reg_594_pp1_iter27_reg;
wire   [31:0] grp_fu_287_p2;
reg   [31:0] reg_298;
reg    ap_enable_reg_pp0_iter19;
reg   [0:0] exitcond8_reg_542_pp0_iter18_reg;
reg    ap_enable_reg_pp1_iter19;
reg   [0:0] exitcond_reg_594_pp1_iter18_reg;
wire   [31:0] grp_fu_282_p2;
reg   [31:0] reg_303;
reg    ap_enable_reg_pp0_iter58;
reg   [0:0] exitcond8_reg_542_pp0_iter57_reg;
reg    ap_enable_reg_pp1_iter58;
reg   [0:0] exitcond_reg_594_pp1_iter57_reg;
wire   [0:0] tmp_fu_309_p2;
wire   [63:0] tmp_29_fu_315_p2;
reg   [63:0] tmp_29_reg_485;
wire   [0:0] icmp_fu_332_p2;
reg   [0:0] icmp_reg_490;
wire   [0:0] tmp_i_fu_338_p2;
wire    ap_CS_fsm_state3;
wire   [63:0] j_fu_352_p2;
reg   [63:0] j_reg_512;
wire    ap_CS_fsm_state4;
wire   [0:0] exitcond_i_fu_347_p2;
reg   [13:0] output_array_addr_5_reg_522;
wire   [63:0] i_71_fu_373_p2;
reg   [31:0] bias_array_load_reg_532;
wire    ap_CS_fsm_state5;
reg   [31:0] output_array_load_5_reg_537;
wire    ap_CS_fsm_state6;
wire   [0:0] exitcond8_fu_383_p2;
wire    ap_CS_fsm_pp0_stage0;
reg   [0:0] exitcond8_reg_542_pp0_iter1_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter2_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter3_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter4_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter5_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter6_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter7_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter8_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter9_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter10_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter11_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter12_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter13_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter14_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter15_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter16_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter17_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter19_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter20_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter21_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter22_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter23_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter24_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter25_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter26_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter28_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter29_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter30_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter31_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter32_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter33_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter34_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter35_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter36_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter37_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter38_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter39_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter40_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter41_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter42_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter43_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter44_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter45_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter46_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter47_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter48_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter49_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter50_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter51_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter52_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter53_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter54_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter55_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter56_reg;
reg   [0:0] exitcond8_reg_542_pp0_iter58_reg;
wire   [13:0] i_fu_388_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [13:0] output_array_addr_reg_551;
reg   [13:0] output_array_addr_reg_551_pp0_iter1_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter2_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter3_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter4_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter5_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter6_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter7_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter8_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter9_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter10_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter11_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter12_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter13_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter14_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter15_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter16_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter17_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter18_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter19_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter20_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter21_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter22_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter23_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter24_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter25_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter26_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter27_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter28_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter29_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter30_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter31_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter32_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter33_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter34_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter35_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter36_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter37_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter38_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter39_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter40_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter41_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter42_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter43_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter44_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter45_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter46_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter47_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter48_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter49_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter50_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter51_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter52_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter53_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter54_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter55_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter56_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter57_reg;
reg   [13:0] output_array_addr_reg_551_pp0_iter58_reg;
wire   [31:0] tmp_37_neg_fu_398_p2;
reg   [31:0] tmp_37_neg_reg_557;
wire   [31:0] tmp_35_fu_404_p1;
wire  signed [63:0] outrows1_fu_408_p3;
reg   [63:0] outrows1_reg_567;
wire    ap_CS_fsm_state78;
reg   [63:0] outcols_reg_573;
reg   [63:0] innerdim_reg_584;
wire    ap_CS_fsm_state79;
wire   [63:0] grp_fu_415_p2;
reg   [63:0] tmp_31_reg_589;
wire    ap_CS_fsm_state84;
wire   [0:0] exitcond_fu_424_p2;
wire    ap_CS_fsm_pp1_stage0;
reg   [0:0] exitcond_reg_594_pp1_iter1_reg;
reg   [0:0] exitcond_reg_594_pp1_iter2_reg;
reg   [0:0] exitcond_reg_594_pp1_iter3_reg;
reg   [0:0] exitcond_reg_594_pp1_iter4_reg;
reg   [0:0] exitcond_reg_594_pp1_iter5_reg;
reg   [0:0] exitcond_reg_594_pp1_iter6_reg;
reg   [0:0] exitcond_reg_594_pp1_iter7_reg;
reg   [0:0] exitcond_reg_594_pp1_iter8_reg;
reg   [0:0] exitcond_reg_594_pp1_iter9_reg;
reg   [0:0] exitcond_reg_594_pp1_iter10_reg;
reg   [0:0] exitcond_reg_594_pp1_iter11_reg;
reg   [0:0] exitcond_reg_594_pp1_iter12_reg;
reg   [0:0] exitcond_reg_594_pp1_iter13_reg;
reg   [0:0] exitcond_reg_594_pp1_iter14_reg;
reg   [0:0] exitcond_reg_594_pp1_iter15_reg;
reg   [0:0] exitcond_reg_594_pp1_iter16_reg;
reg   [0:0] exitcond_reg_594_pp1_iter17_reg;
reg   [0:0] exitcond_reg_594_pp1_iter19_reg;
reg   [0:0] exitcond_reg_594_pp1_iter20_reg;
reg   [0:0] exitcond_reg_594_pp1_iter21_reg;
reg   [0:0] exitcond_reg_594_pp1_iter22_reg;
reg   [0:0] exitcond_reg_594_pp1_iter23_reg;
reg   [0:0] exitcond_reg_594_pp1_iter24_reg;
reg   [0:0] exitcond_reg_594_pp1_iter25_reg;
reg   [0:0] exitcond_reg_594_pp1_iter26_reg;
reg   [0:0] exitcond_reg_594_pp1_iter28_reg;
reg   [0:0] exitcond_reg_594_pp1_iter29_reg;
reg   [0:0] exitcond_reg_594_pp1_iter30_reg;
reg   [0:0] exitcond_reg_594_pp1_iter31_reg;
reg   [0:0] exitcond_reg_594_pp1_iter32_reg;
reg   [0:0] exitcond_reg_594_pp1_iter33_reg;
reg   [0:0] exitcond_reg_594_pp1_iter34_reg;
reg   [0:0] exitcond_reg_594_pp1_iter35_reg;
reg   [0:0] exitcond_reg_594_pp1_iter36_reg;
reg   [0:0] exitcond_reg_594_pp1_iter37_reg;
reg   [0:0] exitcond_reg_594_pp1_iter38_reg;
reg   [0:0] exitcond_reg_594_pp1_iter39_reg;
reg   [0:0] exitcond_reg_594_pp1_iter40_reg;
reg   [0:0] exitcond_reg_594_pp1_iter41_reg;
reg   [0:0] exitcond_reg_594_pp1_iter42_reg;
reg   [0:0] exitcond_reg_594_pp1_iter43_reg;
reg   [0:0] exitcond_reg_594_pp1_iter44_reg;
reg   [0:0] exitcond_reg_594_pp1_iter45_reg;
reg   [0:0] exitcond_reg_594_pp1_iter46_reg;
reg   [0:0] exitcond_reg_594_pp1_iter47_reg;
reg   [0:0] exitcond_reg_594_pp1_iter48_reg;
reg   [0:0] exitcond_reg_594_pp1_iter49_reg;
reg   [0:0] exitcond_reg_594_pp1_iter50_reg;
reg   [0:0] exitcond_reg_594_pp1_iter51_reg;
reg   [0:0] exitcond_reg_594_pp1_iter52_reg;
reg   [0:0] exitcond_reg_594_pp1_iter53_reg;
reg   [0:0] exitcond_reg_594_pp1_iter54_reg;
reg   [0:0] exitcond_reg_594_pp1_iter55_reg;
reg   [0:0] exitcond_reg_594_pp1_iter56_reg;
reg   [0:0] exitcond_reg_594_pp1_iter58_reg;
wire   [13:0] i_70_fu_429_p2;
reg    ap_enable_reg_pp1_iter0;
reg   [13:0] output_array_addr_2_reg_603;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter1_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter2_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter3_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter4_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter5_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter6_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter7_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter8_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter9_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter10_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter11_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter12_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter13_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter14_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter15_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter16_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter17_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter18_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter19_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter20_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter21_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter22_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter23_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter24_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter25_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter26_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter27_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter28_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter29_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter30_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter31_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter32_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter33_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter34_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter35_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter36_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter37_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter38_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter39_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter40_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter41_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter42_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter43_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter44_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter45_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter46_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter47_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter48_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter49_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter50_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter51_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter52_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter53_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter54_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter55_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter56_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter57_reg;
reg   [13:0] output_array_addr_2_reg_603_pp1_iter58_reg;
wire   [31:0] tmp_42_neg_fu_439_p2;
reg   [31:0] tmp_42_neg_reg_609;
wire   [31:0] tmp_32_fu_445_p1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state17;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_enable_reg_pp0_iter57;
reg    ap_enable_reg_pp0_iter59;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state85;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter9;
reg    ap_enable_reg_pp1_iter10;
reg    ap_enable_reg_pp1_iter11;
reg    ap_enable_reg_pp1_iter12;
reg    ap_enable_reg_pp1_iter13;
reg    ap_enable_reg_pp1_iter14;
reg    ap_enable_reg_pp1_iter15;
reg    ap_enable_reg_pp1_iter16;
reg    ap_enable_reg_pp1_iter17;
reg    ap_enable_reg_pp1_iter18;
reg    ap_enable_reg_pp1_iter20;
reg    ap_enable_reg_pp1_iter21;
reg    ap_enable_reg_pp1_iter22;
reg    ap_enable_reg_pp1_iter23;
reg    ap_enable_reg_pp1_iter24;
reg    ap_enable_reg_pp1_iter25;
reg    ap_enable_reg_pp1_iter26;
reg    ap_enable_reg_pp1_iter27;
reg    ap_enable_reg_pp1_iter29;
reg    ap_enable_reg_pp1_iter30;
reg    ap_enable_reg_pp1_iter31;
reg    ap_enable_reg_pp1_iter32;
reg    ap_enable_reg_pp1_iter33;
reg    ap_enable_reg_pp1_iter34;
reg    ap_enable_reg_pp1_iter35;
reg    ap_enable_reg_pp1_iter36;
reg    ap_enable_reg_pp1_iter37;
reg    ap_enable_reg_pp1_iter38;
reg    ap_enable_reg_pp1_iter39;
reg    ap_enable_reg_pp1_iter40;
reg    ap_enable_reg_pp1_iter41;
reg    ap_enable_reg_pp1_iter42;
reg    ap_enable_reg_pp1_iter43;
reg    ap_enable_reg_pp1_iter44;
reg    ap_enable_reg_pp1_iter45;
reg    ap_enable_reg_pp1_iter46;
reg    ap_enable_reg_pp1_iter47;
reg    ap_enable_reg_pp1_iter48;
reg    ap_enable_reg_pp1_iter49;
reg    ap_enable_reg_pp1_iter50;
reg    ap_enable_reg_pp1_iter51;
reg    ap_enable_reg_pp1_iter52;
reg    ap_enable_reg_pp1_iter53;
reg    ap_enable_reg_pp1_iter54;
reg    ap_enable_reg_pp1_iter55;
reg    ap_enable_reg_pp1_iter56;
reg    ap_enable_reg_pp1_iter57;
reg    ap_enable_reg_pp1_iter59;
wire    grp_k2c_dot_3_fu_236_ap_start;
wire    grp_k2c_dot_3_fu_236_ap_done;
wire    grp_k2c_dot_3_fu_236_ap_idle;
wire    grp_k2c_dot_3_fu_236_ap_ready;
wire   [13:0] grp_k2c_dot_3_fu_236_C_array_address0;
wire    grp_k2c_dot_3_fu_236_C_array_ce0;
wire    grp_k2c_dot_3_fu_236_C_array_we0;
wire   [31:0] grp_k2c_dot_3_fu_236_C_array_d0;
wire   [13:0] grp_k2c_dot_3_fu_236_A_array_address0;
wire    grp_k2c_dot_3_fu_236_A_array_ce0;
wire   [2:0] grp_k2c_dot_3_fu_236_A_shape_address0;
wire    grp_k2c_dot_3_fu_236_A_shape_ce0;
wire   [13:0] grp_k2c_dot_3_fu_236_B_array_address0;
wire    grp_k2c_dot_3_fu_236_B_array_ce0;
wire   [2:0] grp_k2c_dot_3_fu_236_B_shape_address0;
wire    grp_k2c_dot_3_fu_236_B_shape_ce0;
wire   [4:0] grp_k2c_dot_3_fu_236_fwork_address0;
wire    grp_k2c_dot_3_fu_236_fwork_ce0;
wire    grp_k2c_dot_3_fu_236_fwork_we0;
wire   [31:0] grp_k2c_dot_3_fu_236_fwork_d0;
wire   [4:0] grp_k2c_dot_3_fu_236_fwork_address1;
wire    grp_k2c_dot_3_fu_236_fwork_ce1;
wire    grp_k2c_affine_matmul_fu_261_ap_start;
wire    grp_k2c_affine_matmul_fu_261_ap_done;
wire    grp_k2c_affine_matmul_fu_261_ap_idle;
wire    grp_k2c_affine_matmul_fu_261_ap_ready;
wire   [13:0] grp_k2c_affine_matmul_fu_261_C_address0;
wire    grp_k2c_affine_matmul_fu_261_C_ce0;
wire    grp_k2c_affine_matmul_fu_261_C_we0;
wire   [31:0] grp_k2c_affine_matmul_fu_261_C_d0;
wire   [13:0] grp_k2c_affine_matmul_fu_261_A_address0;
wire    grp_k2c_affine_matmul_fu_261_A_ce0;
wire   [13:0] grp_k2c_affine_matmul_fu_261_B_address0;
wire    grp_k2c_affine_matmul_fu_261_B_ce0;
wire   [13:0] grp_k2c_affine_matmul_fu_261_d_address0;
wire    grp_k2c_affine_matmul_fu_261_d_ce0;
reg   [63:0] i_i_reg_190;
wire    ap_CS_fsm_state2;
reg   [63:0] j_i_reg_202;
wire    ap_CS_fsm_state16;
reg    grp_k2c_dot_3_fu_236_ap_start_reg;
reg    grp_k2c_affine_matmul_fu_261_ap_start_reg;
wire    ap_CS_fsm_state80;
wire   [63:0] tmp_i_cast_fu_368_p1;
wire   [63:0] i3_cast_fu_378_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] i1_cast_fu_419_p1;
wire    ap_block_pp1_stage0;
reg   [31:0] grp_fu_277_p0;
reg   [31:0] grp_fu_277_p1;
wire    ap_CS_fsm_state7;
reg   [31:0] grp_fu_287_p1;
wire   [62:0] tmp_80_fu_322_p4;
wire   [14:0] tmp_82_fu_358_p1;
wire   [14:0] tmp_81_fu_343_p1;
wire   [14:0] tmp_i_50_fu_362_p2;
wire   [31:0] tmp_37_to_int_fu_394_p1;
wire   [31:0] tmp_42_to_int_fu_435_p1;
reg    grp_fu_415_ce;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state145;
reg   [26:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 27'd1;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp1_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp1_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter58 = 1'b0;
#0 ap_enable_reg_pp1_iter58 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_enable_reg_pp0_iter57 = 1'b0;
#0 ap_enable_reg_pp0_iter59 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter11 = 1'b0;
#0 ap_enable_reg_pp1_iter12 = 1'b0;
#0 ap_enable_reg_pp1_iter13 = 1'b0;
#0 ap_enable_reg_pp1_iter14 = 1'b0;
#0 ap_enable_reg_pp1_iter15 = 1'b0;
#0 ap_enable_reg_pp1_iter16 = 1'b0;
#0 ap_enable_reg_pp1_iter17 = 1'b0;
#0 ap_enable_reg_pp1_iter18 = 1'b0;
#0 ap_enable_reg_pp1_iter20 = 1'b0;
#0 ap_enable_reg_pp1_iter21 = 1'b0;
#0 ap_enable_reg_pp1_iter22 = 1'b0;
#0 ap_enable_reg_pp1_iter23 = 1'b0;
#0 ap_enable_reg_pp1_iter24 = 1'b0;
#0 ap_enable_reg_pp1_iter25 = 1'b0;
#0 ap_enable_reg_pp1_iter26 = 1'b0;
#0 ap_enable_reg_pp1_iter27 = 1'b0;
#0 ap_enable_reg_pp1_iter29 = 1'b0;
#0 ap_enable_reg_pp1_iter30 = 1'b0;
#0 ap_enable_reg_pp1_iter31 = 1'b0;
#0 ap_enable_reg_pp1_iter32 = 1'b0;
#0 ap_enable_reg_pp1_iter33 = 1'b0;
#0 ap_enable_reg_pp1_iter34 = 1'b0;
#0 ap_enable_reg_pp1_iter35 = 1'b0;
#0 ap_enable_reg_pp1_iter36 = 1'b0;
#0 ap_enable_reg_pp1_iter37 = 1'b0;
#0 ap_enable_reg_pp1_iter38 = 1'b0;
#0 ap_enable_reg_pp1_iter39 = 1'b0;
#0 ap_enable_reg_pp1_iter40 = 1'b0;
#0 ap_enable_reg_pp1_iter41 = 1'b0;
#0 ap_enable_reg_pp1_iter42 = 1'b0;
#0 ap_enable_reg_pp1_iter43 = 1'b0;
#0 ap_enable_reg_pp1_iter44 = 1'b0;
#0 ap_enable_reg_pp1_iter45 = 1'b0;
#0 ap_enable_reg_pp1_iter46 = 1'b0;
#0 ap_enable_reg_pp1_iter47 = 1'b0;
#0 ap_enable_reg_pp1_iter48 = 1'b0;
#0 ap_enable_reg_pp1_iter49 = 1'b0;
#0 ap_enable_reg_pp1_iter50 = 1'b0;
#0 ap_enable_reg_pp1_iter51 = 1'b0;
#0 ap_enable_reg_pp1_iter52 = 1'b0;
#0 ap_enable_reg_pp1_iter53 = 1'b0;
#0 ap_enable_reg_pp1_iter54 = 1'b0;
#0 ap_enable_reg_pp1_iter55 = 1'b0;
#0 ap_enable_reg_pp1_iter56 = 1'b0;
#0 ap_enable_reg_pp1_iter57 = 1'b0;
#0 ap_enable_reg_pp1_iter59 = 1'b0;
#0 grp_k2c_dot_3_fu_236_ap_start_reg = 1'b0;
#0 grp_k2c_affine_matmul_fu_261_ap_start_reg = 1'b0;
end

k2c_dot_3 grp_k2c_dot_3_fu_236(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_dot_3_fu_236_ap_start),
    .ap_done(grp_k2c_dot_3_fu_236_ap_done),
    .ap_idle(grp_k2c_dot_3_fu_236_ap_idle),
    .ap_ready(grp_k2c_dot_3_fu_236_ap_ready),
    .C_array_address0(grp_k2c_dot_3_fu_236_C_array_address0),
    .C_array_ce0(grp_k2c_dot_3_fu_236_C_array_ce0),
    .C_array_we0(grp_k2c_dot_3_fu_236_C_array_we0),
    .C_array_d0(grp_k2c_dot_3_fu_236_C_array_d0),
    .C_array_q0(output_array_q0),
    .A_array_address0(grp_k2c_dot_3_fu_236_A_array_address0),
    .A_array_ce0(grp_k2c_dot_3_fu_236_A_array_ce0),
    .A_array_q0(input_array_q0),
    .A_ndim_read(input_ndim_read),
    .A_numel_read(input_numel_read),
    .A_shape_address0(grp_k2c_dot_3_fu_236_A_shape_address0),
    .A_shape_ce0(grp_k2c_dot_3_fu_236_A_shape_ce0),
    .A_shape_q0(input_shape_q0),
    .B_array_address0(grp_k2c_dot_3_fu_236_B_array_address0),
    .B_array_ce0(grp_k2c_dot_3_fu_236_B_array_ce0),
    .B_array_q0(kernel_array_q0),
    .B_ndim_read(kernel_ndim_read),
    .B_numel_read(kernel_numel_read),
    .B_shape_address0(grp_k2c_dot_3_fu_236_B_shape_address0),
    .B_shape_ce0(grp_k2c_dot_3_fu_236_B_shape_ce0),
    .B_shape_q0(kernel_shape_q0),
    .p_read4(tmp_29_reg_485),
    .fwork_address0(grp_k2c_dot_3_fu_236_fwork_address0),
    .fwork_ce0(grp_k2c_dot_3_fu_236_fwork_ce0),
    .fwork_we0(grp_k2c_dot_3_fu_236_fwork_we0),
    .fwork_d0(grp_k2c_dot_3_fu_236_fwork_d0),
    .fwork_q0(fwork_q0),
    .fwork_address1(grp_k2c_dot_3_fu_236_fwork_address1),
    .fwork_ce1(grp_k2c_dot_3_fu_236_fwork_ce1),
    .fwork_q1(fwork_q1)
);

k2c_affine_matmul grp_k2c_affine_matmul_fu_261(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_affine_matmul_fu_261_ap_start),
    .ap_done(grp_k2c_affine_matmul_fu_261_ap_done),
    .ap_idle(grp_k2c_affine_matmul_fu_261_ap_idle),
    .ap_ready(grp_k2c_affine_matmul_fu_261_ap_ready),
    .C_address0(grp_k2c_affine_matmul_fu_261_C_address0),
    .C_ce0(grp_k2c_affine_matmul_fu_261_C_ce0),
    .C_we0(grp_k2c_affine_matmul_fu_261_C_we0),
    .C_d0(grp_k2c_affine_matmul_fu_261_C_d0),
    .C_q0(output_array_q0),
    .A_address0(grp_k2c_affine_matmul_fu_261_A_address0),
    .A_ce0(grp_k2c_affine_matmul_fu_261_A_ce0),
    .A_q0(input_array_q0),
    .B_address0(grp_k2c_affine_matmul_fu_261_B_address0),
    .B_ce0(grp_k2c_affine_matmul_fu_261_B_ce0),
    .B_q0(kernel_array_q0),
    .d_address0(grp_k2c_affine_matmul_fu_261_d_address0),
    .d_ce0(grp_k2c_affine_matmul_fu_261_d_ce0),
    .d_q0(bias_array_q0),
    .outrows(outrows1_reg_567),
    .outcols(outcols_reg_573),
    .innerdim(innerdim_reg_584)
);

sample0_fadd_32nscud #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample0_fadd_32nscud_U193(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_277_p0),
    .din1(grp_fu_277_p1),
    .ce(1'b1),
    .dout(grp_fu_277_p2)
);

sample0_fdiv_32nsrcU #(
    .ID( 1 ),
    .NUM_STAGE( 30 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample0_fdiv_32nsrcU_U194(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd1065353216),
    .din1(reg_292),
    .ce(1'b1),
    .dout(grp_fu_282_p2)
);

sample0_fexp_32nssc4 #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample0_fexp_32nssc4_U195(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(grp_fu_287_p1),
    .ce(1'b1),
    .dout(grp_fu_287_p2)
);

sample0_mul_64s_6bkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sample0_mul_64s_6bkb_U196(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(outcols_reg_573),
    .din1(outrows1_reg_567),
    .ce(grp_fu_415_ce),
    .dout(grp_fu_415_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state17) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((tmp_i_fu_338_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state17)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state17);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter57 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter58 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter59 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter59 <= ap_enable_reg_pp0_iter58;
        end else if (((tmp_i_fu_338_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter59 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state85) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state84)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state85)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state85);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter16 <= ap_enable_reg_pp1_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter17 <= ap_enable_reg_pp1_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter18 <= ap_enable_reg_pp1_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter19 <= ap_enable_reg_pp1_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter20 <= ap_enable_reg_pp1_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter21 <= ap_enable_reg_pp1_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter22 <= ap_enable_reg_pp1_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter23 <= ap_enable_reg_pp1_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter24 <= ap_enable_reg_pp1_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter25 <= ap_enable_reg_pp1_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter26 <= ap_enable_reg_pp1_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter27 <= ap_enable_reg_pp1_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter28 <= ap_enable_reg_pp1_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter29 <= ap_enable_reg_pp1_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter30 <= ap_enable_reg_pp1_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter31 <= ap_enable_reg_pp1_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter32 <= ap_enable_reg_pp1_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter33 <= ap_enable_reg_pp1_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter34 <= ap_enable_reg_pp1_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter35 <= ap_enable_reg_pp1_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter36 <= ap_enable_reg_pp1_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter37 <= ap_enable_reg_pp1_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter38 <= ap_enable_reg_pp1_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter39 <= ap_enable_reg_pp1_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter40 <= ap_enable_reg_pp1_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter41 <= ap_enable_reg_pp1_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter42 <= ap_enable_reg_pp1_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter43 <= ap_enable_reg_pp1_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter44 <= ap_enable_reg_pp1_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter45 <= ap_enable_reg_pp1_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter46 <= ap_enable_reg_pp1_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter47 <= ap_enable_reg_pp1_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter48 <= ap_enable_reg_pp1_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter49 <= ap_enable_reg_pp1_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter50 <= ap_enable_reg_pp1_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter51 <= ap_enable_reg_pp1_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter52 <= ap_enable_reg_pp1_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter53 <= ap_enable_reg_pp1_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter54 <= ap_enable_reg_pp1_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter55 <= ap_enable_reg_pp1_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter56 <= ap_enable_reg_pp1_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter57 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter57 <= ap_enable_reg_pp1_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter58 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter58 <= ap_enable_reg_pp1_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter59 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter59 <= ap_enable_reg_pp1_iter58;
        end else if ((1'b1 == ap_CS_fsm_state84)) begin
            ap_enable_reg_pp1_iter59 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_affine_matmul_fu_261_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state79)) begin
            grp_k2c_affine_matmul_fu_261_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_affine_matmul_fu_261_ap_ready == 1'b1)) begin
            grp_k2c_affine_matmul_fu_261_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_dot_3_fu_236_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (tmp_fu_309_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_k2c_dot_3_fu_236_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_dot_3_fu_236_ap_ready == 1'b1)) begin
            grp_k2c_dot_3_fu_236_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        i1_reg_225 <= 14'd0;
    end else if (((exitcond_fu_424_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i1_reg_225 <= i_70_fu_429_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_fu_338_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i3_reg_214 <= 14'd0;
    end else if (((exitcond8_fu_383_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i3_reg_214 <= i_fu_388_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_347_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i_i_reg_190 <= i_71_fu_373_p2;
    end else if (((grp_k2c_dot_3_fu_236_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_i_reg_190 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_fu_338_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        j_i_reg_202 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        j_i_reg_202 <= j_reg_512;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        bias_array_load_reg_532 <= bias_array_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond8_reg_542 <= exitcond8_fu_383_p2;
        exitcond8_reg_542_pp0_iter1_reg <= exitcond8_reg_542;
        output_array_addr_reg_551_pp0_iter1_reg <= output_array_addr_reg_551;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond8_reg_542_pp0_iter10_reg <= exitcond8_reg_542_pp0_iter9_reg;
        exitcond8_reg_542_pp0_iter11_reg <= exitcond8_reg_542_pp0_iter10_reg;
        exitcond8_reg_542_pp0_iter12_reg <= exitcond8_reg_542_pp0_iter11_reg;
        exitcond8_reg_542_pp0_iter13_reg <= exitcond8_reg_542_pp0_iter12_reg;
        exitcond8_reg_542_pp0_iter14_reg <= exitcond8_reg_542_pp0_iter13_reg;
        exitcond8_reg_542_pp0_iter15_reg <= exitcond8_reg_542_pp0_iter14_reg;
        exitcond8_reg_542_pp0_iter16_reg <= exitcond8_reg_542_pp0_iter15_reg;
        exitcond8_reg_542_pp0_iter17_reg <= exitcond8_reg_542_pp0_iter16_reg;
        exitcond8_reg_542_pp0_iter18_reg <= exitcond8_reg_542_pp0_iter17_reg;
        exitcond8_reg_542_pp0_iter19_reg <= exitcond8_reg_542_pp0_iter18_reg;
        exitcond8_reg_542_pp0_iter20_reg <= exitcond8_reg_542_pp0_iter19_reg;
        exitcond8_reg_542_pp0_iter21_reg <= exitcond8_reg_542_pp0_iter20_reg;
        exitcond8_reg_542_pp0_iter22_reg <= exitcond8_reg_542_pp0_iter21_reg;
        exitcond8_reg_542_pp0_iter23_reg <= exitcond8_reg_542_pp0_iter22_reg;
        exitcond8_reg_542_pp0_iter24_reg <= exitcond8_reg_542_pp0_iter23_reg;
        exitcond8_reg_542_pp0_iter25_reg <= exitcond8_reg_542_pp0_iter24_reg;
        exitcond8_reg_542_pp0_iter26_reg <= exitcond8_reg_542_pp0_iter25_reg;
        exitcond8_reg_542_pp0_iter27_reg <= exitcond8_reg_542_pp0_iter26_reg;
        exitcond8_reg_542_pp0_iter28_reg <= exitcond8_reg_542_pp0_iter27_reg;
        exitcond8_reg_542_pp0_iter29_reg <= exitcond8_reg_542_pp0_iter28_reg;
        exitcond8_reg_542_pp0_iter2_reg <= exitcond8_reg_542_pp0_iter1_reg;
        exitcond8_reg_542_pp0_iter30_reg <= exitcond8_reg_542_pp0_iter29_reg;
        exitcond8_reg_542_pp0_iter31_reg <= exitcond8_reg_542_pp0_iter30_reg;
        exitcond8_reg_542_pp0_iter32_reg <= exitcond8_reg_542_pp0_iter31_reg;
        exitcond8_reg_542_pp0_iter33_reg <= exitcond8_reg_542_pp0_iter32_reg;
        exitcond8_reg_542_pp0_iter34_reg <= exitcond8_reg_542_pp0_iter33_reg;
        exitcond8_reg_542_pp0_iter35_reg <= exitcond8_reg_542_pp0_iter34_reg;
        exitcond8_reg_542_pp0_iter36_reg <= exitcond8_reg_542_pp0_iter35_reg;
        exitcond8_reg_542_pp0_iter37_reg <= exitcond8_reg_542_pp0_iter36_reg;
        exitcond8_reg_542_pp0_iter38_reg <= exitcond8_reg_542_pp0_iter37_reg;
        exitcond8_reg_542_pp0_iter39_reg <= exitcond8_reg_542_pp0_iter38_reg;
        exitcond8_reg_542_pp0_iter3_reg <= exitcond8_reg_542_pp0_iter2_reg;
        exitcond8_reg_542_pp0_iter40_reg <= exitcond8_reg_542_pp0_iter39_reg;
        exitcond8_reg_542_pp0_iter41_reg <= exitcond8_reg_542_pp0_iter40_reg;
        exitcond8_reg_542_pp0_iter42_reg <= exitcond8_reg_542_pp0_iter41_reg;
        exitcond8_reg_542_pp0_iter43_reg <= exitcond8_reg_542_pp0_iter42_reg;
        exitcond8_reg_542_pp0_iter44_reg <= exitcond8_reg_542_pp0_iter43_reg;
        exitcond8_reg_542_pp0_iter45_reg <= exitcond8_reg_542_pp0_iter44_reg;
        exitcond8_reg_542_pp0_iter46_reg <= exitcond8_reg_542_pp0_iter45_reg;
        exitcond8_reg_542_pp0_iter47_reg <= exitcond8_reg_542_pp0_iter46_reg;
        exitcond8_reg_542_pp0_iter48_reg <= exitcond8_reg_542_pp0_iter47_reg;
        exitcond8_reg_542_pp0_iter49_reg <= exitcond8_reg_542_pp0_iter48_reg;
        exitcond8_reg_542_pp0_iter4_reg <= exitcond8_reg_542_pp0_iter3_reg;
        exitcond8_reg_542_pp0_iter50_reg <= exitcond8_reg_542_pp0_iter49_reg;
        exitcond8_reg_542_pp0_iter51_reg <= exitcond8_reg_542_pp0_iter50_reg;
        exitcond8_reg_542_pp0_iter52_reg <= exitcond8_reg_542_pp0_iter51_reg;
        exitcond8_reg_542_pp0_iter53_reg <= exitcond8_reg_542_pp0_iter52_reg;
        exitcond8_reg_542_pp0_iter54_reg <= exitcond8_reg_542_pp0_iter53_reg;
        exitcond8_reg_542_pp0_iter55_reg <= exitcond8_reg_542_pp0_iter54_reg;
        exitcond8_reg_542_pp0_iter56_reg <= exitcond8_reg_542_pp0_iter55_reg;
        exitcond8_reg_542_pp0_iter57_reg <= exitcond8_reg_542_pp0_iter56_reg;
        exitcond8_reg_542_pp0_iter58_reg <= exitcond8_reg_542_pp0_iter57_reg;
        exitcond8_reg_542_pp0_iter5_reg <= exitcond8_reg_542_pp0_iter4_reg;
        exitcond8_reg_542_pp0_iter6_reg <= exitcond8_reg_542_pp0_iter5_reg;
        exitcond8_reg_542_pp0_iter7_reg <= exitcond8_reg_542_pp0_iter6_reg;
        exitcond8_reg_542_pp0_iter8_reg <= exitcond8_reg_542_pp0_iter7_reg;
        exitcond8_reg_542_pp0_iter9_reg <= exitcond8_reg_542_pp0_iter8_reg;
        output_array_addr_reg_551_pp0_iter10_reg <= output_array_addr_reg_551_pp0_iter9_reg;
        output_array_addr_reg_551_pp0_iter11_reg <= output_array_addr_reg_551_pp0_iter10_reg;
        output_array_addr_reg_551_pp0_iter12_reg <= output_array_addr_reg_551_pp0_iter11_reg;
        output_array_addr_reg_551_pp0_iter13_reg <= output_array_addr_reg_551_pp0_iter12_reg;
        output_array_addr_reg_551_pp0_iter14_reg <= output_array_addr_reg_551_pp0_iter13_reg;
        output_array_addr_reg_551_pp0_iter15_reg <= output_array_addr_reg_551_pp0_iter14_reg;
        output_array_addr_reg_551_pp0_iter16_reg <= output_array_addr_reg_551_pp0_iter15_reg;
        output_array_addr_reg_551_pp0_iter17_reg <= output_array_addr_reg_551_pp0_iter16_reg;
        output_array_addr_reg_551_pp0_iter18_reg <= output_array_addr_reg_551_pp0_iter17_reg;
        output_array_addr_reg_551_pp0_iter19_reg <= output_array_addr_reg_551_pp0_iter18_reg;
        output_array_addr_reg_551_pp0_iter20_reg <= output_array_addr_reg_551_pp0_iter19_reg;
        output_array_addr_reg_551_pp0_iter21_reg <= output_array_addr_reg_551_pp0_iter20_reg;
        output_array_addr_reg_551_pp0_iter22_reg <= output_array_addr_reg_551_pp0_iter21_reg;
        output_array_addr_reg_551_pp0_iter23_reg <= output_array_addr_reg_551_pp0_iter22_reg;
        output_array_addr_reg_551_pp0_iter24_reg <= output_array_addr_reg_551_pp0_iter23_reg;
        output_array_addr_reg_551_pp0_iter25_reg <= output_array_addr_reg_551_pp0_iter24_reg;
        output_array_addr_reg_551_pp0_iter26_reg <= output_array_addr_reg_551_pp0_iter25_reg;
        output_array_addr_reg_551_pp0_iter27_reg <= output_array_addr_reg_551_pp0_iter26_reg;
        output_array_addr_reg_551_pp0_iter28_reg <= output_array_addr_reg_551_pp0_iter27_reg;
        output_array_addr_reg_551_pp0_iter29_reg <= output_array_addr_reg_551_pp0_iter28_reg;
        output_array_addr_reg_551_pp0_iter2_reg <= output_array_addr_reg_551_pp0_iter1_reg;
        output_array_addr_reg_551_pp0_iter30_reg <= output_array_addr_reg_551_pp0_iter29_reg;
        output_array_addr_reg_551_pp0_iter31_reg <= output_array_addr_reg_551_pp0_iter30_reg;
        output_array_addr_reg_551_pp0_iter32_reg <= output_array_addr_reg_551_pp0_iter31_reg;
        output_array_addr_reg_551_pp0_iter33_reg <= output_array_addr_reg_551_pp0_iter32_reg;
        output_array_addr_reg_551_pp0_iter34_reg <= output_array_addr_reg_551_pp0_iter33_reg;
        output_array_addr_reg_551_pp0_iter35_reg <= output_array_addr_reg_551_pp0_iter34_reg;
        output_array_addr_reg_551_pp0_iter36_reg <= output_array_addr_reg_551_pp0_iter35_reg;
        output_array_addr_reg_551_pp0_iter37_reg <= output_array_addr_reg_551_pp0_iter36_reg;
        output_array_addr_reg_551_pp0_iter38_reg <= output_array_addr_reg_551_pp0_iter37_reg;
        output_array_addr_reg_551_pp0_iter39_reg <= output_array_addr_reg_551_pp0_iter38_reg;
        output_array_addr_reg_551_pp0_iter3_reg <= output_array_addr_reg_551_pp0_iter2_reg;
        output_array_addr_reg_551_pp0_iter40_reg <= output_array_addr_reg_551_pp0_iter39_reg;
        output_array_addr_reg_551_pp0_iter41_reg <= output_array_addr_reg_551_pp0_iter40_reg;
        output_array_addr_reg_551_pp0_iter42_reg <= output_array_addr_reg_551_pp0_iter41_reg;
        output_array_addr_reg_551_pp0_iter43_reg <= output_array_addr_reg_551_pp0_iter42_reg;
        output_array_addr_reg_551_pp0_iter44_reg <= output_array_addr_reg_551_pp0_iter43_reg;
        output_array_addr_reg_551_pp0_iter45_reg <= output_array_addr_reg_551_pp0_iter44_reg;
        output_array_addr_reg_551_pp0_iter46_reg <= output_array_addr_reg_551_pp0_iter45_reg;
        output_array_addr_reg_551_pp0_iter47_reg <= output_array_addr_reg_551_pp0_iter46_reg;
        output_array_addr_reg_551_pp0_iter48_reg <= output_array_addr_reg_551_pp0_iter47_reg;
        output_array_addr_reg_551_pp0_iter49_reg <= output_array_addr_reg_551_pp0_iter48_reg;
        output_array_addr_reg_551_pp0_iter4_reg <= output_array_addr_reg_551_pp0_iter3_reg;
        output_array_addr_reg_551_pp0_iter50_reg <= output_array_addr_reg_551_pp0_iter49_reg;
        output_array_addr_reg_551_pp0_iter51_reg <= output_array_addr_reg_551_pp0_iter50_reg;
        output_array_addr_reg_551_pp0_iter52_reg <= output_array_addr_reg_551_pp0_iter51_reg;
        output_array_addr_reg_551_pp0_iter53_reg <= output_array_addr_reg_551_pp0_iter52_reg;
        output_array_addr_reg_551_pp0_iter54_reg <= output_array_addr_reg_551_pp0_iter53_reg;
        output_array_addr_reg_551_pp0_iter55_reg <= output_array_addr_reg_551_pp0_iter54_reg;
        output_array_addr_reg_551_pp0_iter56_reg <= output_array_addr_reg_551_pp0_iter55_reg;
        output_array_addr_reg_551_pp0_iter57_reg <= output_array_addr_reg_551_pp0_iter56_reg;
        output_array_addr_reg_551_pp0_iter58_reg <= output_array_addr_reg_551_pp0_iter57_reg;
        output_array_addr_reg_551_pp0_iter5_reg <= output_array_addr_reg_551_pp0_iter4_reg;
        output_array_addr_reg_551_pp0_iter6_reg <= output_array_addr_reg_551_pp0_iter5_reg;
        output_array_addr_reg_551_pp0_iter7_reg <= output_array_addr_reg_551_pp0_iter6_reg;
        output_array_addr_reg_551_pp0_iter8_reg <= output_array_addr_reg_551_pp0_iter7_reg;
        output_array_addr_reg_551_pp0_iter9_reg <= output_array_addr_reg_551_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond_reg_594 <= exitcond_fu_424_p2;
        exitcond_reg_594_pp1_iter1_reg <= exitcond_reg_594;
        output_array_addr_2_reg_603_pp1_iter1_reg <= output_array_addr_2_reg_603;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        exitcond_reg_594_pp1_iter10_reg <= exitcond_reg_594_pp1_iter9_reg;
        exitcond_reg_594_pp1_iter11_reg <= exitcond_reg_594_pp1_iter10_reg;
        exitcond_reg_594_pp1_iter12_reg <= exitcond_reg_594_pp1_iter11_reg;
        exitcond_reg_594_pp1_iter13_reg <= exitcond_reg_594_pp1_iter12_reg;
        exitcond_reg_594_pp1_iter14_reg <= exitcond_reg_594_pp1_iter13_reg;
        exitcond_reg_594_pp1_iter15_reg <= exitcond_reg_594_pp1_iter14_reg;
        exitcond_reg_594_pp1_iter16_reg <= exitcond_reg_594_pp1_iter15_reg;
        exitcond_reg_594_pp1_iter17_reg <= exitcond_reg_594_pp1_iter16_reg;
        exitcond_reg_594_pp1_iter18_reg <= exitcond_reg_594_pp1_iter17_reg;
        exitcond_reg_594_pp1_iter19_reg <= exitcond_reg_594_pp1_iter18_reg;
        exitcond_reg_594_pp1_iter20_reg <= exitcond_reg_594_pp1_iter19_reg;
        exitcond_reg_594_pp1_iter21_reg <= exitcond_reg_594_pp1_iter20_reg;
        exitcond_reg_594_pp1_iter22_reg <= exitcond_reg_594_pp1_iter21_reg;
        exitcond_reg_594_pp1_iter23_reg <= exitcond_reg_594_pp1_iter22_reg;
        exitcond_reg_594_pp1_iter24_reg <= exitcond_reg_594_pp1_iter23_reg;
        exitcond_reg_594_pp1_iter25_reg <= exitcond_reg_594_pp1_iter24_reg;
        exitcond_reg_594_pp1_iter26_reg <= exitcond_reg_594_pp1_iter25_reg;
        exitcond_reg_594_pp1_iter27_reg <= exitcond_reg_594_pp1_iter26_reg;
        exitcond_reg_594_pp1_iter28_reg <= exitcond_reg_594_pp1_iter27_reg;
        exitcond_reg_594_pp1_iter29_reg <= exitcond_reg_594_pp1_iter28_reg;
        exitcond_reg_594_pp1_iter2_reg <= exitcond_reg_594_pp1_iter1_reg;
        exitcond_reg_594_pp1_iter30_reg <= exitcond_reg_594_pp1_iter29_reg;
        exitcond_reg_594_pp1_iter31_reg <= exitcond_reg_594_pp1_iter30_reg;
        exitcond_reg_594_pp1_iter32_reg <= exitcond_reg_594_pp1_iter31_reg;
        exitcond_reg_594_pp1_iter33_reg <= exitcond_reg_594_pp1_iter32_reg;
        exitcond_reg_594_pp1_iter34_reg <= exitcond_reg_594_pp1_iter33_reg;
        exitcond_reg_594_pp1_iter35_reg <= exitcond_reg_594_pp1_iter34_reg;
        exitcond_reg_594_pp1_iter36_reg <= exitcond_reg_594_pp1_iter35_reg;
        exitcond_reg_594_pp1_iter37_reg <= exitcond_reg_594_pp1_iter36_reg;
        exitcond_reg_594_pp1_iter38_reg <= exitcond_reg_594_pp1_iter37_reg;
        exitcond_reg_594_pp1_iter39_reg <= exitcond_reg_594_pp1_iter38_reg;
        exitcond_reg_594_pp1_iter3_reg <= exitcond_reg_594_pp1_iter2_reg;
        exitcond_reg_594_pp1_iter40_reg <= exitcond_reg_594_pp1_iter39_reg;
        exitcond_reg_594_pp1_iter41_reg <= exitcond_reg_594_pp1_iter40_reg;
        exitcond_reg_594_pp1_iter42_reg <= exitcond_reg_594_pp1_iter41_reg;
        exitcond_reg_594_pp1_iter43_reg <= exitcond_reg_594_pp1_iter42_reg;
        exitcond_reg_594_pp1_iter44_reg <= exitcond_reg_594_pp1_iter43_reg;
        exitcond_reg_594_pp1_iter45_reg <= exitcond_reg_594_pp1_iter44_reg;
        exitcond_reg_594_pp1_iter46_reg <= exitcond_reg_594_pp1_iter45_reg;
        exitcond_reg_594_pp1_iter47_reg <= exitcond_reg_594_pp1_iter46_reg;
        exitcond_reg_594_pp1_iter48_reg <= exitcond_reg_594_pp1_iter47_reg;
        exitcond_reg_594_pp1_iter49_reg <= exitcond_reg_594_pp1_iter48_reg;
        exitcond_reg_594_pp1_iter4_reg <= exitcond_reg_594_pp1_iter3_reg;
        exitcond_reg_594_pp1_iter50_reg <= exitcond_reg_594_pp1_iter49_reg;
        exitcond_reg_594_pp1_iter51_reg <= exitcond_reg_594_pp1_iter50_reg;
        exitcond_reg_594_pp1_iter52_reg <= exitcond_reg_594_pp1_iter51_reg;
        exitcond_reg_594_pp1_iter53_reg <= exitcond_reg_594_pp1_iter52_reg;
        exitcond_reg_594_pp1_iter54_reg <= exitcond_reg_594_pp1_iter53_reg;
        exitcond_reg_594_pp1_iter55_reg <= exitcond_reg_594_pp1_iter54_reg;
        exitcond_reg_594_pp1_iter56_reg <= exitcond_reg_594_pp1_iter55_reg;
        exitcond_reg_594_pp1_iter57_reg <= exitcond_reg_594_pp1_iter56_reg;
        exitcond_reg_594_pp1_iter58_reg <= exitcond_reg_594_pp1_iter57_reg;
        exitcond_reg_594_pp1_iter5_reg <= exitcond_reg_594_pp1_iter4_reg;
        exitcond_reg_594_pp1_iter6_reg <= exitcond_reg_594_pp1_iter5_reg;
        exitcond_reg_594_pp1_iter7_reg <= exitcond_reg_594_pp1_iter6_reg;
        exitcond_reg_594_pp1_iter8_reg <= exitcond_reg_594_pp1_iter7_reg;
        exitcond_reg_594_pp1_iter9_reg <= exitcond_reg_594_pp1_iter8_reg;
        output_array_addr_2_reg_603_pp1_iter10_reg <= output_array_addr_2_reg_603_pp1_iter9_reg;
        output_array_addr_2_reg_603_pp1_iter11_reg <= output_array_addr_2_reg_603_pp1_iter10_reg;
        output_array_addr_2_reg_603_pp1_iter12_reg <= output_array_addr_2_reg_603_pp1_iter11_reg;
        output_array_addr_2_reg_603_pp1_iter13_reg <= output_array_addr_2_reg_603_pp1_iter12_reg;
        output_array_addr_2_reg_603_pp1_iter14_reg <= output_array_addr_2_reg_603_pp1_iter13_reg;
        output_array_addr_2_reg_603_pp1_iter15_reg <= output_array_addr_2_reg_603_pp1_iter14_reg;
        output_array_addr_2_reg_603_pp1_iter16_reg <= output_array_addr_2_reg_603_pp1_iter15_reg;
        output_array_addr_2_reg_603_pp1_iter17_reg <= output_array_addr_2_reg_603_pp1_iter16_reg;
        output_array_addr_2_reg_603_pp1_iter18_reg <= output_array_addr_2_reg_603_pp1_iter17_reg;
        output_array_addr_2_reg_603_pp1_iter19_reg <= output_array_addr_2_reg_603_pp1_iter18_reg;
        output_array_addr_2_reg_603_pp1_iter20_reg <= output_array_addr_2_reg_603_pp1_iter19_reg;
        output_array_addr_2_reg_603_pp1_iter21_reg <= output_array_addr_2_reg_603_pp1_iter20_reg;
        output_array_addr_2_reg_603_pp1_iter22_reg <= output_array_addr_2_reg_603_pp1_iter21_reg;
        output_array_addr_2_reg_603_pp1_iter23_reg <= output_array_addr_2_reg_603_pp1_iter22_reg;
        output_array_addr_2_reg_603_pp1_iter24_reg <= output_array_addr_2_reg_603_pp1_iter23_reg;
        output_array_addr_2_reg_603_pp1_iter25_reg <= output_array_addr_2_reg_603_pp1_iter24_reg;
        output_array_addr_2_reg_603_pp1_iter26_reg <= output_array_addr_2_reg_603_pp1_iter25_reg;
        output_array_addr_2_reg_603_pp1_iter27_reg <= output_array_addr_2_reg_603_pp1_iter26_reg;
        output_array_addr_2_reg_603_pp1_iter28_reg <= output_array_addr_2_reg_603_pp1_iter27_reg;
        output_array_addr_2_reg_603_pp1_iter29_reg <= output_array_addr_2_reg_603_pp1_iter28_reg;
        output_array_addr_2_reg_603_pp1_iter2_reg <= output_array_addr_2_reg_603_pp1_iter1_reg;
        output_array_addr_2_reg_603_pp1_iter30_reg <= output_array_addr_2_reg_603_pp1_iter29_reg;
        output_array_addr_2_reg_603_pp1_iter31_reg <= output_array_addr_2_reg_603_pp1_iter30_reg;
        output_array_addr_2_reg_603_pp1_iter32_reg <= output_array_addr_2_reg_603_pp1_iter31_reg;
        output_array_addr_2_reg_603_pp1_iter33_reg <= output_array_addr_2_reg_603_pp1_iter32_reg;
        output_array_addr_2_reg_603_pp1_iter34_reg <= output_array_addr_2_reg_603_pp1_iter33_reg;
        output_array_addr_2_reg_603_pp1_iter35_reg <= output_array_addr_2_reg_603_pp1_iter34_reg;
        output_array_addr_2_reg_603_pp1_iter36_reg <= output_array_addr_2_reg_603_pp1_iter35_reg;
        output_array_addr_2_reg_603_pp1_iter37_reg <= output_array_addr_2_reg_603_pp1_iter36_reg;
        output_array_addr_2_reg_603_pp1_iter38_reg <= output_array_addr_2_reg_603_pp1_iter37_reg;
        output_array_addr_2_reg_603_pp1_iter39_reg <= output_array_addr_2_reg_603_pp1_iter38_reg;
        output_array_addr_2_reg_603_pp1_iter3_reg <= output_array_addr_2_reg_603_pp1_iter2_reg;
        output_array_addr_2_reg_603_pp1_iter40_reg <= output_array_addr_2_reg_603_pp1_iter39_reg;
        output_array_addr_2_reg_603_pp1_iter41_reg <= output_array_addr_2_reg_603_pp1_iter40_reg;
        output_array_addr_2_reg_603_pp1_iter42_reg <= output_array_addr_2_reg_603_pp1_iter41_reg;
        output_array_addr_2_reg_603_pp1_iter43_reg <= output_array_addr_2_reg_603_pp1_iter42_reg;
        output_array_addr_2_reg_603_pp1_iter44_reg <= output_array_addr_2_reg_603_pp1_iter43_reg;
        output_array_addr_2_reg_603_pp1_iter45_reg <= output_array_addr_2_reg_603_pp1_iter44_reg;
        output_array_addr_2_reg_603_pp1_iter46_reg <= output_array_addr_2_reg_603_pp1_iter45_reg;
        output_array_addr_2_reg_603_pp1_iter47_reg <= output_array_addr_2_reg_603_pp1_iter46_reg;
        output_array_addr_2_reg_603_pp1_iter48_reg <= output_array_addr_2_reg_603_pp1_iter47_reg;
        output_array_addr_2_reg_603_pp1_iter49_reg <= output_array_addr_2_reg_603_pp1_iter48_reg;
        output_array_addr_2_reg_603_pp1_iter4_reg <= output_array_addr_2_reg_603_pp1_iter3_reg;
        output_array_addr_2_reg_603_pp1_iter50_reg <= output_array_addr_2_reg_603_pp1_iter49_reg;
        output_array_addr_2_reg_603_pp1_iter51_reg <= output_array_addr_2_reg_603_pp1_iter50_reg;
        output_array_addr_2_reg_603_pp1_iter52_reg <= output_array_addr_2_reg_603_pp1_iter51_reg;
        output_array_addr_2_reg_603_pp1_iter53_reg <= output_array_addr_2_reg_603_pp1_iter52_reg;
        output_array_addr_2_reg_603_pp1_iter54_reg <= output_array_addr_2_reg_603_pp1_iter53_reg;
        output_array_addr_2_reg_603_pp1_iter55_reg <= output_array_addr_2_reg_603_pp1_iter54_reg;
        output_array_addr_2_reg_603_pp1_iter56_reg <= output_array_addr_2_reg_603_pp1_iter55_reg;
        output_array_addr_2_reg_603_pp1_iter57_reg <= output_array_addr_2_reg_603_pp1_iter56_reg;
        output_array_addr_2_reg_603_pp1_iter58_reg <= output_array_addr_2_reg_603_pp1_iter57_reg;
        output_array_addr_2_reg_603_pp1_iter5_reg <= output_array_addr_2_reg_603_pp1_iter4_reg;
        output_array_addr_2_reg_603_pp1_iter6_reg <= output_array_addr_2_reg_603_pp1_iter5_reg;
        output_array_addr_2_reg_603_pp1_iter7_reg <= output_array_addr_2_reg_603_pp1_iter6_reg;
        output_array_addr_2_reg_603_pp1_iter8_reg <= output_array_addr_2_reg_603_pp1_iter7_reg;
        output_array_addr_2_reg_603_pp1_iter9_reg <= output_array_addr_2_reg_603_pp1_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_309_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        icmp_reg_490 <= icmp_fu_332_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        innerdim_reg_584 <= kernel_shape_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        j_reg_512 <= j_fu_352_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        outcols_reg_573 <= kernel_shape_q0;
        outrows1_reg_567 <= outrows1_fu_408_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_424_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        output_array_addr_2_reg_603 <= i1_cast_fu_419_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_347_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        output_array_addr_5_reg_522 <= tmp_i_cast_fu_368_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_fu_383_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_array_addr_reg_551 <= i3_cast_fu_378_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        output_array_load_5_reg_537 <= output_array_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((exitcond_reg_594_pp1_iter27_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter28 == 1'b1)) | ((exitcond8_reg_542_pp0_iter27_reg == 1'd0) & (ap_enable_reg_pp0_iter28 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_292 <= grp_fu_277_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond_reg_594_pp1_iter18_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter19 == 1'b1)) | ((exitcond8_reg_542_pp0_iter18_reg == 1'd0) & (ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_298 <= grp_fu_287_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond_reg_594_pp1_iter57_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter58 == 1'b1)) | ((exitcond8_reg_542_pp0_iter57_reg == 1'd0) & (ap_enable_reg_pp0_iter58 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_303 <= grp_fu_282_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (tmp_fu_309_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_29_reg_485 <= tmp_29_fu_315_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        tmp_31_reg_589 <= grp_fu_415_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_reg_542 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_37_neg_reg_557 <= tmp_37_neg_fu_398_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_594 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_42_neg_reg_609 <= tmp_42_neg_fu_439_p2;
    end
end

always @ (*) begin
    if ((exitcond8_fu_383_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state17 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state17 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_fu_424_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state85 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state85 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state145) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter59 == 1'b0) & (ap_enable_reg_pp0_iter57 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter59 == 1'b0) & (ap_enable_reg_pp1_iter57 == 1'b0) & (ap_enable_reg_pp1_iter56 == 1'b0) & (ap_enable_reg_pp1_iter55 == 1'b0) & (ap_enable_reg_pp1_iter54 == 1'b0) & (ap_enable_reg_pp1_iter53 == 1'b0) & (ap_enable_reg_pp1_iter52 == 1'b0) & (ap_enable_reg_pp1_iter51 == 1'b0) & (ap_enable_reg_pp1_iter50 == 1'b0) & (ap_enable_reg_pp1_iter49 == 1'b0) & (ap_enable_reg_pp1_iter48 == 1'b0) & (ap_enable_reg_pp1_iter47 == 1'b0) & (ap_enable_reg_pp1_iter46 == 1'b0) & (ap_enable_reg_pp1_iter45 == 1'b0) & (ap_enable_reg_pp1_iter44 == 1'b0) & (ap_enable_reg_pp1_iter43 == 1'b0) & (ap_enable_reg_pp1_iter42 == 1'b0) & (ap_enable_reg_pp1_iter41 == 1'b0) & (ap_enable_reg_pp1_iter40 == 1'b0) & (ap_enable_reg_pp1_iter39 == 1'b0) & (ap_enable_reg_pp1_iter38 == 1'b0) & (ap_enable_reg_pp1_iter37 == 1'b0) & (ap_enable_reg_pp1_iter36 == 1'b0) & (ap_enable_reg_pp1_iter35 == 1'b0) & (ap_enable_reg_pp1_iter34 == 1'b0) & (ap_enable_reg_pp1_iter33 == 1'b0) & (ap_enable_reg_pp1_iter32 == 1'b0) & (ap_enable_reg_pp1_iter31 == 1'b0) & (ap_enable_reg_pp1_iter30 == 1'b0) & (ap_enable_reg_pp1_iter29 == 1'b0) & (ap_enable_reg_pp1_iter27 == 1'b0) & (ap_enable_reg_pp1_iter26 == 1'b0) & (ap_enable_reg_pp1_iter25 == 1'b0) & (ap_enable_reg_pp1_iter24 == 1'b0) & (ap_enable_reg_pp1_iter23 == 1'b0) & (ap_enable_reg_pp1_iter22 == 1'b0) & (ap_enable_reg_pp1_iter21 == 1'b0) & (ap_enable_reg_pp1_iter20 == 1'b0) & (ap_enable_reg_pp1_iter18 == 1'b0) & (ap_enable_reg_pp1_iter17 == 1'b0) & (ap_enable_reg_pp1_iter16 == 1'b0) & (ap_enable_reg_pp1_iter15 == 1'b0) & (ap_enable_reg_pp1_iter14 == 1'b0) & (ap_enable_reg_pp1_iter13 == 1'b0) & (ap_enable_reg_pp1_iter12 == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter58 == 1'b0) & (ap_enable_reg_pp1_iter19 == 1'b0) & (ap_enable_reg_pp1_iter28 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state145)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bias_array_address0 = j_i_reg_202;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        bias_array_address0 = grp_k2c_affine_matmul_fu_261_d_address0;
    end else begin
        bias_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bias_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        bias_array_ce0 = grp_k2c_affine_matmul_fu_261_d_ce0;
    end else begin
        bias_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter20 == 1'b1) & (1'b0 == ap_block_pp1_stage0)) | ((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        grp_fu_277_p0 = reg_298;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_277_p0 = output_array_load_5_reg_537;
    end else begin
        grp_fu_277_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter20 == 1'b1) & (1'b0 == ap_block_pp1_stage0)) | ((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        grp_fu_277_p1 = 32'd1065353216;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_277_p1 = bias_array_load_reg_532;
    end else begin
        grp_fu_277_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        grp_fu_287_p1 = tmp_32_fu_445_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_287_p1 = tmp_35_fu_404_p1;
    end else begin
        grp_fu_287_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | ((grp_k2c_affine_matmul_fu_261_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state80)))) begin
        grp_fu_415_ce = 1'b1;
    end else begin
        grp_fu_415_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        input_array_address0 = grp_k2c_affine_matmul_fu_261_A_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_array_address0 = grp_k2c_dot_3_fu_236_A_array_address0;
    end else begin
        input_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        input_array_ce0 = grp_k2c_affine_matmul_fu_261_A_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_array_ce0 = grp_k2c_dot_3_fu_236_A_array_ce0;
    end else begin
        input_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_309_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        input_shape_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_shape_address0 = grp_k2c_dot_3_fu_236_A_shape_address0;
    end else begin
        input_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if (((tmp_fu_309_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        input_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_shape_ce0 = grp_k2c_dot_3_fu_236_A_shape_ce0;
    end else begin
        input_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        kernel_array_address0 = grp_k2c_affine_matmul_fu_261_B_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_array_address0 = grp_k2c_dot_3_fu_236_B_array_address0;
    end else begin
        kernel_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        kernel_array_ce0 = grp_k2c_affine_matmul_fu_261_B_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_array_ce0 = grp_k2c_dot_3_fu_236_B_array_ce0;
    end else begin
        kernel_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        kernel_shape_address0 = 64'd0;
    end else if (((tmp_fu_309_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        kernel_shape_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_shape_address0 = grp_k2c_dot_3_fu_236_B_shape_address0;
    end else begin
        kernel_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state78) | ((tmp_fu_309_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        kernel_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_shape_ce0 = grp_k2c_dot_3_fu_236_B_shape_ce0;
    end else begin
        kernel_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter59 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        output_array_address0 = output_array_addr_2_reg_603_pp1_iter58_reg;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_array_address0 = i3_cast_fu_378_p1;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state5))) begin
        output_array_address0 = output_array_addr_5_reg_522;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        output_array_address0 = grp_k2c_affine_matmul_fu_261_C_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_array_address0 = grp_k2c_dot_3_fu_236_C_array_address0;
    end else begin
        output_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        output_array_address1 = i1_cast_fu_419_p1;
    end else if (((ap_enable_reg_pp0_iter59 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        output_array_address1 = output_array_addr_reg_551_pp0_iter58_reg;
    end else begin
        output_array_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter59 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        output_array_ce0 = grp_k2c_affine_matmul_fu_261_C_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_array_ce0 = grp_k2c_dot_3_fu_236_C_array_ce0;
    end else begin
        output_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter59 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_array_ce1 = 1'b1;
    end else begin
        output_array_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter59 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        output_array_d0 = reg_303;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        output_array_d0 = reg_292;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        output_array_d0 = grp_k2c_affine_matmul_fu_261_C_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_array_d0 = grp_k2c_dot_3_fu_236_C_array_d0;
    end else begin
        output_array_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((exitcond_reg_594_pp1_iter58_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter59 == 1'b1)))) begin
        output_array_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        output_array_we0 = grp_k2c_affine_matmul_fu_261_C_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_array_we0 = grp_k2c_dot_3_fu_236_C_array_we0;
    end else begin
        output_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond8_reg_542_pp0_iter58_reg == 1'd0) & (ap_enable_reg_pp0_iter59 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_array_we1 = 1'b1;
    end else begin
        output_array_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((tmp_fu_309_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else if (((ap_start == 1'b1) & (tmp_fu_309_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_k2c_dot_3_fu_236_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((tmp_i_fu_338_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((exitcond_i_fu_347_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (exitcond8_fu_383_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter59 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter59 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (exitcond8_fu_383_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            if (((grp_k2c_affine_matmul_fu_261_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state80))) begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (exitcond_fu_424_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter58 == 1'b0) & (ap_enable_reg_pp1_iter59 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter58 == 1'b0) & (ap_enable_reg_pp1_iter59 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (exitcond_fu_424_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state145;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state145 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd24];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state100_pp1_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp1_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp1_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp1_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp1_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp1_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp1_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp1_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp1_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp1_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state110_pp1_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp1_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp1_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state113_pp1_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state114_pp1_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state115_pp1_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state116_pp1_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state117_pp1_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state118_pp1_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state119_pp1_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state120_pp1_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state121_pp1_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state122_pp1_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state123_pp1_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state124_pp1_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state125_pp1_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state126_pp1_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state127_pp1_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state128_pp1_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state129_pp1_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state130_pp1_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state131_pp1_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state132_pp1_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state133_pp1_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state134_pp1_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state135_pp1_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state136_pp1_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state137_pp1_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state138_pp1_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state139_pp1_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state140_pp1_stage0_iter55 = ~(1'b1 == 1'b1);

assign ap_block_state141_pp1_stage0_iter56 = ~(1'b1 == 1'b1);

assign ap_block_state142_pp1_stage0_iter57 = ~(1'b1 == 1'b1);

assign ap_block_state143_pp1_stage0_iter58 = ~(1'b1 == 1'b1);

assign ap_block_state144_pp1_stage0_iter59 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage0_iter55 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage0_iter56 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage0_iter57 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage0_iter58 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage0_iter59 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp1_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp1_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp1_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp1_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign exitcond8_fu_383_p2 = ((i3_cast_fu_378_p1 == output_numel_read) ? 1'b1 : 1'b0);

assign exitcond_fu_424_p2 = ((i1_cast_fu_419_p1 == tmp_31_reg_589) ? 1'b1 : 1'b0);

assign exitcond_i_fu_347_p2 = ((j_i_reg_202 == bias_numel_read) ? 1'b1 : 1'b0);

assign fwork_address0 = grp_k2c_dot_3_fu_236_fwork_address0;

assign fwork_address1 = grp_k2c_dot_3_fu_236_fwork_address1;

assign fwork_ce0 = grp_k2c_dot_3_fu_236_fwork_ce0;

assign fwork_ce1 = grp_k2c_dot_3_fu_236_fwork_ce1;

assign fwork_d0 = grp_k2c_dot_3_fu_236_fwork_d0;

assign fwork_we0 = grp_k2c_dot_3_fu_236_fwork_we0;

assign grp_k2c_affine_matmul_fu_261_ap_start = grp_k2c_affine_matmul_fu_261_ap_start_reg;

assign grp_k2c_dot_3_fu_236_ap_start = grp_k2c_dot_3_fu_236_ap_start_reg;

assign i1_cast_fu_419_p1 = i1_reg_225;

assign i3_cast_fu_378_p1 = i3_reg_214;

assign i_70_fu_429_p2 = (i1_reg_225 + 14'd1);

assign i_71_fu_373_p2 = (i_i_reg_190 + bias_numel_read);

assign i_fu_388_p2 = (i3_reg_214 + 14'd1);

assign icmp_fu_332_p2 = ((tmp_80_fu_322_p4 != 63'd0) ? 1'b1 : 1'b0);

assign j_fu_352_p2 = (64'd1 + j_i_reg_202);

assign output_array_d1 = reg_303;

assign outrows1_fu_408_p3 = ((icmp_reg_490[0:0] === 1'b1) ? input_shape_q0 : 64'd1);

assign tmp_29_fu_315_p2 = ($signed(input_ndim_read) + $signed(64'd18446744073709551615));

assign tmp_32_fu_445_p1 = tmp_42_neg_reg_609;

assign tmp_35_fu_404_p1 = tmp_37_neg_reg_557;

assign tmp_37_neg_fu_398_p2 = (tmp_37_to_int_fu_394_p1 ^ 32'd2147483648);

assign tmp_37_to_int_fu_394_p1 = output_array_q0;

assign tmp_42_neg_fu_439_p2 = (tmp_42_to_int_fu_435_p1 ^ 32'd2147483648);

assign tmp_42_to_int_fu_435_p1 = output_array_q1;

assign tmp_80_fu_322_p4 = {{input_ndim_read[63:1]}};

assign tmp_81_fu_343_p1 = j_i_reg_202[14:0];

assign tmp_82_fu_358_p1 = i_i_reg_190[14:0];

assign tmp_fu_309_p2 = ((input_ndim_read < 64'd3) ? 1'b1 : 1'b0);

assign tmp_i_50_fu_362_p2 = (tmp_82_fu_358_p1 + tmp_81_fu_343_p1);

assign tmp_i_cast_fu_368_p1 = tmp_i_50_fu_362_p2;

assign tmp_i_fu_338_p2 = ((i_i_reg_190 < output_numel_read) ? 1'b1 : 1'b0);

endmodule //k2c_dense
