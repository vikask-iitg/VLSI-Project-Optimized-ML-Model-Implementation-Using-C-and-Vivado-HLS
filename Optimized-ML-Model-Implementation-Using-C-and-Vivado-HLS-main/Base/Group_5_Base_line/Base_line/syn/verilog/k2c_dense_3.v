// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module k2c_dense_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        output_array_address0,
        output_array_ce0,
        output_array_we0,
        output_array_d0,
        output_array_q0,
        output_array_address1,
        output_array_ce1,
        output_array_we1,
        output_array_d1,
        output_array_q1,
        input_array_address0,
        input_array_ce0,
        input_array_q0,
        input_ndim_read,
        input_numel_read,
        input_shape_address0,
        input_shape_ce0,
        input_shape_q0,
        kernel_array_address0,
        kernel_array_ce0,
        kernel_array_q0,
        kernel_shape_address0,
        kernel_shape_ce0,
        kernel_shape_q0,
        bias_array_address0,
        bias_array_ce0,
        bias_array_q0,
        fwork_address0,
        fwork_ce0,
        fwork_we0,
        fwork_d0,
        fwork_q0,
        fwork_address1,
        fwork_ce1,
        fwork_q1
);

parameter    ap_ST_fsm_state1 = 27'd1;
parameter    ap_ST_fsm_state2 = 27'd2;
parameter    ap_ST_fsm_state3 = 27'd4;
parameter    ap_ST_fsm_state4 = 27'd8;
parameter    ap_ST_fsm_state5 = 27'd16;
parameter    ap_ST_fsm_state6 = 27'd32;
parameter    ap_ST_fsm_state7 = 27'd64;
parameter    ap_ST_fsm_state8 = 27'd128;
parameter    ap_ST_fsm_state9 = 27'd256;
parameter    ap_ST_fsm_state10 = 27'd512;
parameter    ap_ST_fsm_state11 = 27'd1024;
parameter    ap_ST_fsm_state12 = 27'd2048;
parameter    ap_ST_fsm_state13 = 27'd4096;
parameter    ap_ST_fsm_state14 = 27'd8192;
parameter    ap_ST_fsm_state15 = 27'd16384;
parameter    ap_ST_fsm_state16 = 27'd32768;
parameter    ap_ST_fsm_pp0_stage0 = 27'd65536;
parameter    ap_ST_fsm_state22 = 27'd131072;
parameter    ap_ST_fsm_state23 = 27'd262144;
parameter    ap_ST_fsm_state24 = 27'd524288;
parameter    ap_ST_fsm_state25 = 27'd1048576;
parameter    ap_ST_fsm_state26 = 27'd2097152;
parameter    ap_ST_fsm_state27 = 27'd4194304;
parameter    ap_ST_fsm_state28 = 27'd8388608;
parameter    ap_ST_fsm_state29 = 27'd16777216;
parameter    ap_ST_fsm_pp1_stage0 = 27'd33554432;
parameter    ap_ST_fsm_state35 = 27'd67108864;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] output_array_address0;
output   output_array_ce0;
output   output_array_we0;
output  [31:0] output_array_d0;
input  [31:0] output_array_q0;
output  [13:0] output_array_address1;
output   output_array_ce1;
output   output_array_we1;
output  [31:0] output_array_d1;
input  [31:0] output_array_q1;
output  [13:0] input_array_address0;
output   input_array_ce0;
input  [31:0] input_array_q0;
input  [63:0] input_ndim_read;
input  [63:0] input_numel_read;
output  [2:0] input_shape_address0;
output   input_shape_ce0;
input  [63:0] input_shape_q0;
output  [13:0] kernel_array_address0;
output   kernel_array_ce0;
input  [31:0] kernel_array_q0;
output  [2:0] kernel_shape_address0;
output   kernel_shape_ce0;
input  [63:0] kernel_shape_q0;
output  [13:0] bias_array_address0;
output   bias_array_ce0;
input  [31:0] bias_array_q0;
output  [11:0] fwork_address0;
output   fwork_ce0;
output   fwork_we0;
output  [31:0] fwork_d0;
input  [31:0] fwork_q0;
output  [11:0] fwork_address1;
output   fwork_ce1;
input  [31:0] fwork_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] output_array_address0;
reg output_array_ce0;
reg output_array_we0;
reg[31:0] output_array_d0;
reg[13:0] output_array_address1;
reg output_array_ce1;
reg output_array_we1;
reg[13:0] input_array_address0;
reg input_array_ce0;
reg[2:0] input_shape_address0;
reg input_shape_ce0;
reg[13:0] kernel_array_address0;
reg kernel_array_ce0;
reg[2:0] kernel_shape_address0;
reg kernel_shape_ce0;
reg[13:0] bias_array_address0;
reg bias_array_ce0;

(* fsm_encoding = "none" *) reg   [26:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] i2_reg_196;
reg   [63:0] i_reg_207;
reg   [31:0] reg_265;
wire    ap_CS_fsm_state6;
wire    ap_block_state17_pp0_stage0_iter0;
wire    ap_block_state18_pp0_stage0_iter1;
wire    ap_block_state19_pp0_stage0_iter2;
wire    ap_block_state20_pp0_stage0_iter3;
wire    ap_block_state21_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
wire    ap_block_state30_pp1_stage0_iter0;
wire    ap_block_state31_pp1_stage0_iter1;
wire    ap_block_state32_pp1_stage0_iter2;
wire    ap_block_state33_pp1_stage0_iter3;
wire    ap_block_state34_pp1_stage0_iter4;
wire    ap_block_pp1_stage0_11001;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire   [0:0] tmp_fu_272_p2;
wire   [63:0] tmp_26_fu_278_p2;
reg   [63:0] tmp_26_reg_471;
wire   [0:0] icmp_fu_295_p2;
reg   [0:0] icmp_reg_476;
wire   [0:0] tmp_i_fu_301_p2;
wire    ap_CS_fsm_state3;
wire   [7:0] j_fu_318_p2;
reg   [7:0] j_reg_498;
wire    ap_CS_fsm_state4;
wire   [0:0] exitcond_i_fu_312_p2;
wire   [7:0] tmp_i_43_fu_324_p2;
reg   [7:0] tmp_i_43_reg_508;
wire   [7:0] i_28_fu_330_p2;
reg   [31:0] bias_array_load_reg_518;
wire    ap_CS_fsm_state5;
reg   [13:0] output_array_addr_2_reg_523;
wire   [31:0] grp_fu_256_p2;
reg   [31:0] tmp_43_i_reg_528;
wire    ap_CS_fsm_state15;
wire   [0:0] exitcond9_fu_340_p2;
wire   [7:0] i_65_fu_346_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [13:0] output_array_addr_reg_542;
reg   [13:0] output_array_addr_reg_542_pp0_iter1_reg;
reg   [13:0] output_array_addr_reg_542_pp0_iter2_reg;
reg   [13:0] output_array_addr_reg_542_pp0_iter3_reg;
wire   [0:0] notlhs_fu_375_p2;
reg   [0:0] notlhs_reg_548;
reg   [0:0] notlhs_reg_548_pp0_iter3_reg;
wire   [0:0] notrhs_fu_381_p2;
reg   [0:0] notrhs_reg_553;
reg   [0:0] notrhs_reg_553_pp0_iter3_reg;
wire   [0:0] grp_fu_260_p2;
reg   [0:0] tmp_15_reg_558;
reg    ap_enable_reg_pp0_iter3;
wire  signed [63:0] outrows1_fu_396_p3;
reg   [63:0] outrows1_reg_566;
wire    ap_CS_fsm_state23;
reg   [63:0] outcols_reg_572;
reg   [63:0] innerdim_reg_583;
wire    ap_CS_fsm_state24;
wire   [63:0] grp_fu_403_p2;
reg   [63:0] tmp_s_reg_588;
wire    ap_CS_fsm_state29;
wire   [0:0] exitcond1_fu_407_p2;
wire   [63:0] i_64_fu_412_p2;
reg    ap_enable_reg_pp1_iter0;
reg   [13:0] output_array_addr_1_reg_602;
reg   [13:0] output_array_addr_1_reg_602_pp1_iter1_reg;
reg   [13:0] output_array_addr_1_reg_602_pp1_iter2_reg;
reg   [13:0] output_array_addr_1_reg_602_pp1_iter3_reg;
wire   [0:0] notlhs4_fu_436_p2;
reg   [0:0] notlhs4_reg_608;
reg   [0:0] notlhs4_reg_608_pp1_iter3_reg;
wire   [0:0] notrhs5_fu_442_p2;
reg   [0:0] notrhs5_reg_613;
reg   [0:0] notrhs5_reg_613_pp1_iter3_reg;
reg   [0:0] tmp_8_reg_618;
reg    ap_enable_reg_pp1_iter3;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state17;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state30;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter4;
wire    grp_k2c_dot_fu_219_ap_start;
wire    grp_k2c_dot_fu_219_ap_done;
wire    grp_k2c_dot_fu_219_ap_idle;
wire    grp_k2c_dot_fu_219_ap_ready;
wire   [13:0] grp_k2c_dot_fu_219_C_array_address0;
wire    grp_k2c_dot_fu_219_C_array_ce0;
wire    grp_k2c_dot_fu_219_C_array_we0;
wire   [31:0] grp_k2c_dot_fu_219_C_array_d0;
wire   [13:0] grp_k2c_dot_fu_219_A_array_address0;
wire    grp_k2c_dot_fu_219_A_array_ce0;
wire   [2:0] grp_k2c_dot_fu_219_A_shape_address0;
wire    grp_k2c_dot_fu_219_A_shape_ce0;
wire   [13:0] grp_k2c_dot_fu_219_B_array_address0;
wire    grp_k2c_dot_fu_219_B_array_ce0;
wire   [2:0] grp_k2c_dot_fu_219_B_shape_address0;
wire    grp_k2c_dot_fu_219_B_shape_ce0;
wire   [11:0] grp_k2c_dot_fu_219_fwork_address0;
wire    grp_k2c_dot_fu_219_fwork_ce0;
wire    grp_k2c_dot_fu_219_fwork_we0;
wire   [31:0] grp_k2c_dot_fu_219_fwork_d0;
wire   [11:0] grp_k2c_dot_fu_219_fwork_address1;
wire    grp_k2c_dot_fu_219_fwork_ce1;
wire    grp_k2c_affine_matmul_fu_240_ap_start;
wire    grp_k2c_affine_matmul_fu_240_ap_done;
wire    grp_k2c_affine_matmul_fu_240_ap_idle;
wire    grp_k2c_affine_matmul_fu_240_ap_ready;
wire   [13:0] grp_k2c_affine_matmul_fu_240_C_address0;
wire    grp_k2c_affine_matmul_fu_240_C_ce0;
wire    grp_k2c_affine_matmul_fu_240_C_we0;
wire   [31:0] grp_k2c_affine_matmul_fu_240_C_d0;
wire   [13:0] grp_k2c_affine_matmul_fu_240_A_address0;
wire    grp_k2c_affine_matmul_fu_240_A_ce0;
wire   [13:0] grp_k2c_affine_matmul_fu_240_B_address0;
wire    grp_k2c_affine_matmul_fu_240_B_ce0;
wire   [13:0] grp_k2c_affine_matmul_fu_240_d_address0;
wire    grp_k2c_affine_matmul_fu_240_d_ce0;
reg   [7:0] i_i_reg_173;
wire    ap_CS_fsm_state2;
reg   [7:0] j_i_reg_185;
wire    ap_CS_fsm_state16;
reg    grp_k2c_dot_fu_219_ap_start_reg;
reg    grp_k2c_affine_matmul_fu_240_ap_start_reg;
wire    ap_CS_fsm_state25;
wire   [63:0] j_i_cast2_fu_307_p1;
wire   [63:0] tmp_i_cast_fu_336_p1;
wire   [63:0] i2_cast1_fu_352_p1;
wire    ap_block_pp0_stage0;
wire    ap_block_pp1_stage0;
wire   [0:0] tmp_16_fu_391_p2;
wire   [0:0] tmp_11_fu_452_p2;
wire    ap_CS_fsm_state7;
wire   [62:0] tmp_67_fu_285_p4;
wire   [31:0] output_array_load_to_fu_357_p1;
wire   [7:0] tmp_12_fu_361_p4;
wire   [22:0] tmp_69_fu_371_p1;
wire   [0:0] tmp_14_fu_387_p2;
wire   [31:0] output_array_load_1_s_fu_418_p1;
wire   [7:0] tmp_5_fu_422_p4;
wire   [22:0] tmp_68_fu_432_p1;
wire   [0:0] tmp_7_fu_448_p2;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp1_stage0_00001;
reg    grp_fu_403_ce;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state35;
reg   [26:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 27'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 grp_k2c_dot_fu_219_ap_start_reg = 1'b0;
#0 grp_k2c_affine_matmul_fu_240_ap_start_reg = 1'b0;
end

k2c_dot grp_k2c_dot_fu_219(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_dot_fu_219_ap_start),
    .ap_done(grp_k2c_dot_fu_219_ap_done),
    .ap_idle(grp_k2c_dot_fu_219_ap_idle),
    .ap_ready(grp_k2c_dot_fu_219_ap_ready),
    .C_array_address0(grp_k2c_dot_fu_219_C_array_address0),
    .C_array_ce0(grp_k2c_dot_fu_219_C_array_ce0),
    .C_array_we0(grp_k2c_dot_fu_219_C_array_we0),
    .C_array_d0(grp_k2c_dot_fu_219_C_array_d0),
    .C_array_q0(output_array_q0),
    .A_array_address0(grp_k2c_dot_fu_219_A_array_address0),
    .A_array_ce0(grp_k2c_dot_fu_219_A_array_ce0),
    .A_array_q0(input_array_q0),
    .A_ndim_read(input_ndim_read),
    .A_numel_read(input_numel_read),
    .A_shape_address0(grp_k2c_dot_fu_219_A_shape_address0),
    .A_shape_ce0(grp_k2c_dot_fu_219_A_shape_ce0),
    .A_shape_q0(input_shape_q0),
    .B_array_address0(grp_k2c_dot_fu_219_B_array_address0),
    .B_array_ce0(grp_k2c_dot_fu_219_B_array_ce0),
    .B_array_q0(kernel_array_q0),
    .B_shape_address0(grp_k2c_dot_fu_219_B_shape_address0),
    .B_shape_ce0(grp_k2c_dot_fu_219_B_shape_ce0),
    .B_shape_q0(kernel_shape_q0),
    .axesA_0_read(tmp_26_reg_471),
    .fwork_address0(grp_k2c_dot_fu_219_fwork_address0),
    .fwork_ce0(grp_k2c_dot_fu_219_fwork_ce0),
    .fwork_we0(grp_k2c_dot_fu_219_fwork_we0),
    .fwork_d0(grp_k2c_dot_fu_219_fwork_d0),
    .fwork_q0(fwork_q0),
    .fwork_address1(grp_k2c_dot_fu_219_fwork_address1),
    .fwork_ce1(grp_k2c_dot_fu_219_fwork_ce1),
    .fwork_q1(fwork_q1)
);

k2c_affine_matmul grp_k2c_affine_matmul_fu_240(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_affine_matmul_fu_240_ap_start),
    .ap_done(grp_k2c_affine_matmul_fu_240_ap_done),
    .ap_idle(grp_k2c_affine_matmul_fu_240_ap_idle),
    .ap_ready(grp_k2c_affine_matmul_fu_240_ap_ready),
    .C_address0(grp_k2c_affine_matmul_fu_240_C_address0),
    .C_ce0(grp_k2c_affine_matmul_fu_240_C_ce0),
    .C_we0(grp_k2c_affine_matmul_fu_240_C_we0),
    .C_d0(grp_k2c_affine_matmul_fu_240_C_d0),
    .C_q0(output_array_q0),
    .A_address0(grp_k2c_affine_matmul_fu_240_A_address0),
    .A_ce0(grp_k2c_affine_matmul_fu_240_A_ce0),
    .A_q0(input_array_q0),
    .B_address0(grp_k2c_affine_matmul_fu_240_B_address0),
    .B_ce0(grp_k2c_affine_matmul_fu_240_B_ce0),
    .B_q0(kernel_array_q0),
    .d_address0(grp_k2c_affine_matmul_fu_240_d_address0),
    .d_ce0(grp_k2c_affine_matmul_fu_240_d_ce0),
    .d_q0(bias_array_q0),
    .outrows(outrows1_reg_566),
    .outcols(outcols_reg_572),
    .innerdim(innerdim_reg_583)
);

sample0_fadd_32nscud #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample0_fadd_32nscud_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_265),
    .din1(bias_array_load_reg_518),
    .ce(1'b1),
    .dout(grp_fu_256_p2)
);

sample0_fcmp_32nslbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
sample0_fcmp_32nslbW_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_265),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd5),
    .dout(grp_fu_260_p2)
);

sample0_mul_64s_6bkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sample0_mul_64s_6bkb_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(outcols_reg_572),
    .din1(outrows1_reg_566),
    .ce(grp_fu_403_ce),
    .dout(grp_fu_403_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state17) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state3) & (tmp_i_fu_301_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state17)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state17);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((1'b1 == ap_CS_fsm_state3) & (tmp_i_fu_301_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state30) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state29)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state30)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state30);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end else if ((1'b1 == ap_CS_fsm_state29)) begin
            ap_enable_reg_pp1_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_affine_matmul_fu_240_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state24)) begin
            grp_k2c_affine_matmul_fu_240_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_affine_matmul_fu_240_ap_ready == 1'b1)) begin
            grp_k2c_affine_matmul_fu_240_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_dot_fu_219_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_272_p2 == 1'd0))) begin
            grp_k2c_dot_fu_219_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_dot_fu_219_ap_ready == 1'b1)) begin
            grp_k2c_dot_fu_219_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_i_fu_301_p2 == 1'd1))) begin
        i2_reg_196 <= 8'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond9_fu_340_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i2_reg_196 <= i_65_fu_346_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond_i_fu_312_p2 == 1'd1))) begin
        i_i_reg_173 <= i_28_fu_330_p2;
    end else if (((grp_k2c_dot_fu_219_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_i_reg_173 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        i_reg_207 <= 64'd0;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond1_fu_407_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        i_reg_207 <= i_64_fu_412_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_i_fu_301_p2 == 1'd0))) begin
        j_i_reg_185 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        j_i_reg_185 <= j_reg_498;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        reg_265 <= output_array_q1;
    end else if (((1'b1 == ap_CS_fsm_state6) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_265 <= output_array_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        bias_array_load_reg_518 <= bias_array_q0;
        output_array_addr_2_reg_523[7 : 0] <= tmp_i_cast_fu_336_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_272_p2 == 1'd1))) begin
        icmp_reg_476 <= icmp_fu_295_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        innerdim_reg_583 <= kernel_shape_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        j_reg_498 <= j_fu_318_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        notlhs4_reg_608 <= notlhs4_fu_436_p2;
        notlhs4_reg_608_pp1_iter3_reg <= notlhs4_reg_608;
        notrhs5_reg_613 <= notrhs5_fu_442_p2;
        notrhs5_reg_613_pp1_iter3_reg <= notrhs5_reg_613;
        output_array_addr_1_reg_602_pp1_iter2_reg <= output_array_addr_1_reg_602_pp1_iter1_reg;
        output_array_addr_1_reg_602_pp1_iter3_reg <= output_array_addr_1_reg_602_pp1_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        notlhs_reg_548 <= notlhs_fu_375_p2;
        notlhs_reg_548_pp0_iter3_reg <= notlhs_reg_548;
        notrhs_reg_553 <= notrhs_fu_381_p2;
        notrhs_reg_553_pp0_iter3_reg <= notrhs_reg_553;
        output_array_addr_reg_542_pp0_iter2_reg[7 : 0] <= output_array_addr_reg_542_pp0_iter1_reg[7 : 0];
        output_array_addr_reg_542_pp0_iter3_reg[7 : 0] <= output_array_addr_reg_542_pp0_iter2_reg[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        outcols_reg_572 <= kernel_shape_q0;
        outrows1_reg_566 <= outrows1_fu_396_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond1_fu_407_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        output_array_addr_1_reg_602 <= i_reg_207;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        output_array_addr_1_reg_602_pp1_iter1_reg <= output_array_addr_1_reg_602;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond9_fu_340_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_array_addr_reg_542[7 : 0] <= i2_cast1_fu_352_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_array_addr_reg_542_pp0_iter1_reg[7 : 0] <= output_array_addr_reg_542[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_15_reg_558 <= grp_fu_260_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_272_p2 == 1'd0))) begin
        tmp_26_reg_471 <= tmp_26_fu_278_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_43_i_reg_528 <= grp_fu_256_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_8_reg_618 <= grp_fu_260_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond_i_fu_312_p2 == 1'd0))) begin
        tmp_i_43_reg_508 <= tmp_i_43_fu_324_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        tmp_s_reg_588 <= grp_fu_403_p2;
    end
end

always @ (*) begin
    if ((exitcond9_fu_340_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state17 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state17 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond1_fu_407_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state30 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state30 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bias_array_address0 = j_i_cast2_fu_307_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        bias_array_address0 = grp_k2c_affine_matmul_fu_240_d_address0;
    end else begin
        bias_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bias_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        bias_array_ce0 = grp_k2c_affine_matmul_fu_240_d_ce0;
    end else begin
        bias_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state24) | ((grp_k2c_affine_matmul_fu_240_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state25)))) begin
        grp_fu_403_ce = 1'b1;
    end else begin
        grp_fu_403_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_array_address0 = grp_k2c_affine_matmul_fu_240_A_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_array_address0 = grp_k2c_dot_fu_219_A_array_address0;
    end else begin
        input_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_array_ce0 = grp_k2c_affine_matmul_fu_240_A_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_array_ce0 = grp_k2c_dot_fu_219_A_array_ce0;
    end else begin
        input_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (tmp_fu_272_p2 == 1'd1))) begin
        input_shape_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_shape_address0 = grp_k2c_dot_fu_219_A_shape_address0;
    end else begin
        input_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_272_p2 == 1'd1))) begin
        input_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_shape_ce0 = grp_k2c_dot_fu_219_A_shape_ce0;
    end else begin
        input_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        kernel_array_address0 = grp_k2c_affine_matmul_fu_240_B_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_array_address0 = grp_k2c_dot_fu_219_B_array_address0;
    end else begin
        kernel_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        kernel_array_ce0 = grp_k2c_affine_matmul_fu_240_B_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_array_ce0 = grp_k2c_dot_fu_219_B_array_ce0;
    end else begin
        kernel_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        kernel_shape_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state1) & (tmp_fu_272_p2 == 1'd1))) begin
        kernel_shape_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_shape_address0 = grp_k2c_dot_fu_219_B_shape_address0;
    end else begin
        kernel_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_272_p2 == 1'd1)))) begin
        kernel_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_shape_ce0 = grp_k2c_dot_fu_219_B_shape_ce0;
    end else begin
        kernel_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        output_array_address0 = output_array_addr_1_reg_602_pp1_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        output_array_address0 = i2_cast1_fu_352_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        output_array_address0 = output_array_addr_2_reg_523;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        output_array_address0 = tmp_i_cast_fu_336_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        output_array_address0 = grp_k2c_affine_matmul_fu_240_C_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_array_address0 = grp_k2c_dot_fu_219_C_array_address0;
    end else begin
        output_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        output_array_address1 = i_reg_207;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_array_address1 = output_array_addr_reg_542_pp0_iter3_reg;
    end else begin
        output_array_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        output_array_ce0 = grp_k2c_affine_matmul_fu_240_C_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_array_ce0 = grp_k2c_dot_fu_219_C_array_ce0;
    end else begin
        output_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_array_ce1 = 1'b1;
    end else begin
        output_array_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        output_array_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        output_array_d0 = tmp_43_i_reg_528;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        output_array_d0 = grp_k2c_affine_matmul_fu_240_C_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_array_d0 = grp_k2c_dot_fu_219_C_array_d0;
    end else begin
        output_array_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((ap_enable_reg_pp1_iter4 == 1'b1) & (tmp_11_fu_452_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        output_array_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        output_array_we0 = grp_k2c_affine_matmul_fu_240_C_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_array_we0 = grp_k2c_dot_fu_219_C_array_we0;
    end else begin
        output_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (tmp_16_fu_391_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_array_we1 = 1'b1;
    end else begin
        output_array_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_272_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_272_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_k2c_dot_fu_219_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (tmp_i_fu_301_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (exitcond_i_fu_312_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond9_fu_340_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond9_fu_340_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((grp_k2c_affine_matmul_fu_240_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond1_fu_407_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond1_fu_407_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign exitcond1_fu_407_p2 = ((i_reg_207 == tmp_s_reg_588) ? 1'b1 : 1'b0);

assign exitcond9_fu_340_p2 = ((i2_reg_196 == 8'd128) ? 1'b1 : 1'b0);

assign exitcond_i_fu_312_p2 = ((j_i_reg_185 == 8'd128) ? 1'b1 : 1'b0);

assign fwork_address0 = grp_k2c_dot_fu_219_fwork_address0;

assign fwork_address1 = grp_k2c_dot_fu_219_fwork_address1;

assign fwork_ce0 = grp_k2c_dot_fu_219_fwork_ce0;

assign fwork_ce1 = grp_k2c_dot_fu_219_fwork_ce1;

assign fwork_d0 = grp_k2c_dot_fu_219_fwork_d0;

assign fwork_we0 = grp_k2c_dot_fu_219_fwork_we0;

assign grp_k2c_affine_matmul_fu_240_ap_start = grp_k2c_affine_matmul_fu_240_ap_start_reg;

assign grp_k2c_dot_fu_219_ap_start = grp_k2c_dot_fu_219_ap_start_reg;

assign i2_cast1_fu_352_p1 = i2_reg_196;

assign i_28_fu_330_p2 = (i_i_reg_173 ^ 8'd128);

assign i_64_fu_412_p2 = (i_reg_207 + 64'd1);

assign i_65_fu_346_p2 = (i2_reg_196 + 8'd1);

assign icmp_fu_295_p2 = ((tmp_67_fu_285_p4 != 63'd0) ? 1'b1 : 1'b0);

assign j_fu_318_p2 = (j_i_reg_185 + 8'd1);

assign j_i_cast2_fu_307_p1 = j_i_reg_185;

assign notlhs4_fu_436_p2 = ((tmp_5_fu_422_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs_fu_375_p2 = ((tmp_12_fu_361_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs5_fu_442_p2 = ((tmp_68_fu_432_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_381_p2 = ((tmp_69_fu_371_p1 == 23'd0) ? 1'b1 : 1'b0);

assign output_array_d1 = 32'd0;

assign output_array_load_1_s_fu_418_p1 = reg_265;

assign output_array_load_to_fu_357_p1 = reg_265;

assign outrows1_fu_396_p3 = ((icmp_reg_476[0:0] === 1'b1) ? input_shape_q0 : 64'd1);

assign tmp_11_fu_452_p2 = (tmp_8_reg_618 & tmp_7_fu_448_p2);

assign tmp_12_fu_361_p4 = {{output_array_load_to_fu_357_p1[30:23]}};

assign tmp_14_fu_387_p2 = (notrhs_reg_553_pp0_iter3_reg | notlhs_reg_548_pp0_iter3_reg);

assign tmp_16_fu_391_p2 = (tmp_15_reg_558 & tmp_14_fu_387_p2);

assign tmp_26_fu_278_p2 = ($signed(input_ndim_read) + $signed(64'd18446744073709551615));

assign tmp_5_fu_422_p4 = {{output_array_load_1_s_fu_418_p1[30:23]}};

assign tmp_67_fu_285_p4 = {{input_ndim_read[63:1]}};

assign tmp_68_fu_432_p1 = output_array_load_1_s_fu_418_p1[22:0];

assign tmp_69_fu_371_p1 = output_array_load_to_fu_357_p1[22:0];

assign tmp_7_fu_448_p2 = (notrhs5_reg_613_pp1_iter3_reg | notlhs4_reg_608_pp1_iter3_reg);

assign tmp_fu_272_p2 = ((input_ndim_read < 64'd3) ? 1'b1 : 1'b0);

assign tmp_i_43_fu_324_p2 = (j_i_reg_185 + i_i_reg_173);

assign tmp_i_cast_fu_336_p1 = tmp_i_43_reg_508;

assign tmp_i_fu_301_p2 = ((i_i_reg_173 == 8'd128) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    output_array_addr_2_reg_523[13:8] <= 6'b000000;
    output_array_addr_reg_542[13:8] <= 6'b000000;
    output_array_addr_reg_542_pp0_iter1_reg[13:8] <= 6'b000000;
    output_array_addr_reg_542_pp0_iter2_reg[13:8] <= 6'b000000;
    output_array_addr_reg_542_pp0_iter3_reg[13:8] <= 6'b000000;
end

endmodule //k2c_dense_3
