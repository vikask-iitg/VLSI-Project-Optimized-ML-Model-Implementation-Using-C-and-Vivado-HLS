-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity k2c_dense is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    output_array_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    output_array_ce0 : OUT STD_LOGIC;
    output_array_we0 : OUT STD_LOGIC;
    output_array_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_array_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    output_array_ce1 : OUT STD_LOGIC;
    output_array_we1 : OUT STD_LOGIC;
    output_array_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_array_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
    input_array_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_array_ce0 : OUT STD_LOGIC;
    input_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_ndim_read : IN STD_LOGIC_VECTOR (63 downto 0);
    input_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
    input_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    input_shape_ce0 : OUT STD_LOGIC;
    input_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    kernel_array_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    kernel_array_ce0 : OUT STD_LOGIC;
    kernel_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_ndim_read : IN STD_LOGIC_VECTOR (63 downto 0);
    kernel_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
    kernel_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    kernel_shape_ce0 : OUT STD_LOGIC;
    kernel_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    bias_array_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    bias_array_ce0 : OUT STD_LOGIC;
    bias_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    bias_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
    fwork_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    fwork_ce0 : OUT STD_LOGIC;
    fwork_we0 : OUT STD_LOGIC;
    fwork_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    fwork_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    fwork_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    fwork_ce1 : OUT STD_LOGIC;
    fwork_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of k2c_dense is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (26 downto 0) := "000000000001000000000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000010000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (26 downto 0) := "000000000100000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (26 downto 0) := "000000001000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (26 downto 0) := "000000010000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (26 downto 0) := "000000100000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (26 downto 0) := "000001000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (26 downto 0) := "000010000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (26 downto 0) := "000100000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (26 downto 0) := "001000000000000000000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (26 downto 0) := "010000000000000000000000000";
    constant ap_ST_fsm_state145 : STD_LOGIC_VECTOR (26 downto 0) := "100000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i3_reg_214 : STD_LOGIC_VECTOR (13 downto 0);
    signal i1_reg_225 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_277_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_292 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_block_state17_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state34_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state35_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state36_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state37_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state38_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state39_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state40_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state41_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state42_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state43_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state44_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_state45_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_state46_pp0_stage0_iter29 : BOOLEAN;
    signal ap_block_state47_pp0_stage0_iter30 : BOOLEAN;
    signal ap_block_state48_pp0_stage0_iter31 : BOOLEAN;
    signal ap_block_state49_pp0_stage0_iter32 : BOOLEAN;
    signal ap_block_state50_pp0_stage0_iter33 : BOOLEAN;
    signal ap_block_state51_pp0_stage0_iter34 : BOOLEAN;
    signal ap_block_state52_pp0_stage0_iter35 : BOOLEAN;
    signal ap_block_state53_pp0_stage0_iter36 : BOOLEAN;
    signal ap_block_state54_pp0_stage0_iter37 : BOOLEAN;
    signal ap_block_state55_pp0_stage0_iter38 : BOOLEAN;
    signal ap_block_state56_pp0_stage0_iter39 : BOOLEAN;
    signal ap_block_state57_pp0_stage0_iter40 : BOOLEAN;
    signal ap_block_state58_pp0_stage0_iter41 : BOOLEAN;
    signal ap_block_state59_pp0_stage0_iter42 : BOOLEAN;
    signal ap_block_state60_pp0_stage0_iter43 : BOOLEAN;
    signal ap_block_state61_pp0_stage0_iter44 : BOOLEAN;
    signal ap_block_state62_pp0_stage0_iter45 : BOOLEAN;
    signal ap_block_state63_pp0_stage0_iter46 : BOOLEAN;
    signal ap_block_state64_pp0_stage0_iter47 : BOOLEAN;
    signal ap_block_state65_pp0_stage0_iter48 : BOOLEAN;
    signal ap_block_state66_pp0_stage0_iter49 : BOOLEAN;
    signal ap_block_state67_pp0_stage0_iter50 : BOOLEAN;
    signal ap_block_state68_pp0_stage0_iter51 : BOOLEAN;
    signal ap_block_state69_pp0_stage0_iter52 : BOOLEAN;
    signal ap_block_state70_pp0_stage0_iter53 : BOOLEAN;
    signal ap_block_state71_pp0_stage0_iter54 : BOOLEAN;
    signal ap_block_state72_pp0_stage0_iter55 : BOOLEAN;
    signal ap_block_state73_pp0_stage0_iter56 : BOOLEAN;
    signal ap_block_state74_pp0_stage0_iter57 : BOOLEAN;
    signal ap_block_state75_pp0_stage0_iter58 : BOOLEAN;
    signal ap_block_state76_pp0_stage0_iter59 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_block_state85_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state86_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state87_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state88_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state89_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state90_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state91_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_state92_pp1_stage0_iter7 : BOOLEAN;
    signal ap_block_state93_pp1_stage0_iter8 : BOOLEAN;
    signal ap_block_state94_pp1_stage0_iter9 : BOOLEAN;
    signal ap_block_state95_pp1_stage0_iter10 : BOOLEAN;
    signal ap_block_state96_pp1_stage0_iter11 : BOOLEAN;
    signal ap_block_state97_pp1_stage0_iter12 : BOOLEAN;
    signal ap_block_state98_pp1_stage0_iter13 : BOOLEAN;
    signal ap_block_state99_pp1_stage0_iter14 : BOOLEAN;
    signal ap_block_state100_pp1_stage0_iter15 : BOOLEAN;
    signal ap_block_state101_pp1_stage0_iter16 : BOOLEAN;
    signal ap_block_state102_pp1_stage0_iter17 : BOOLEAN;
    signal ap_block_state103_pp1_stage0_iter18 : BOOLEAN;
    signal ap_block_state104_pp1_stage0_iter19 : BOOLEAN;
    signal ap_block_state105_pp1_stage0_iter20 : BOOLEAN;
    signal ap_block_state106_pp1_stage0_iter21 : BOOLEAN;
    signal ap_block_state107_pp1_stage0_iter22 : BOOLEAN;
    signal ap_block_state108_pp1_stage0_iter23 : BOOLEAN;
    signal ap_block_state109_pp1_stage0_iter24 : BOOLEAN;
    signal ap_block_state110_pp1_stage0_iter25 : BOOLEAN;
    signal ap_block_state111_pp1_stage0_iter26 : BOOLEAN;
    signal ap_block_state112_pp1_stage0_iter27 : BOOLEAN;
    signal ap_block_state113_pp1_stage0_iter28 : BOOLEAN;
    signal ap_block_state114_pp1_stage0_iter29 : BOOLEAN;
    signal ap_block_state115_pp1_stage0_iter30 : BOOLEAN;
    signal ap_block_state116_pp1_stage0_iter31 : BOOLEAN;
    signal ap_block_state117_pp1_stage0_iter32 : BOOLEAN;
    signal ap_block_state118_pp1_stage0_iter33 : BOOLEAN;
    signal ap_block_state119_pp1_stage0_iter34 : BOOLEAN;
    signal ap_block_state120_pp1_stage0_iter35 : BOOLEAN;
    signal ap_block_state121_pp1_stage0_iter36 : BOOLEAN;
    signal ap_block_state122_pp1_stage0_iter37 : BOOLEAN;
    signal ap_block_state123_pp1_stage0_iter38 : BOOLEAN;
    signal ap_block_state124_pp1_stage0_iter39 : BOOLEAN;
    signal ap_block_state125_pp1_stage0_iter40 : BOOLEAN;
    signal ap_block_state126_pp1_stage0_iter41 : BOOLEAN;
    signal ap_block_state127_pp1_stage0_iter42 : BOOLEAN;
    signal ap_block_state128_pp1_stage0_iter43 : BOOLEAN;
    signal ap_block_state129_pp1_stage0_iter44 : BOOLEAN;
    signal ap_block_state130_pp1_stage0_iter45 : BOOLEAN;
    signal ap_block_state131_pp1_stage0_iter46 : BOOLEAN;
    signal ap_block_state132_pp1_stage0_iter47 : BOOLEAN;
    signal ap_block_state133_pp1_stage0_iter48 : BOOLEAN;
    signal ap_block_state134_pp1_stage0_iter49 : BOOLEAN;
    signal ap_block_state135_pp1_stage0_iter50 : BOOLEAN;
    signal ap_block_state136_pp1_stage0_iter51 : BOOLEAN;
    signal ap_block_state137_pp1_stage0_iter52 : BOOLEAN;
    signal ap_block_state138_pp1_stage0_iter53 : BOOLEAN;
    signal ap_block_state139_pp1_stage0_iter54 : BOOLEAN;
    signal ap_block_state140_pp1_stage0_iter55 : BOOLEAN;
    signal ap_block_state141_pp1_stage0_iter56 : BOOLEAN;
    signal ap_block_state142_pp1_stage0_iter57 : BOOLEAN;
    signal ap_block_state143_pp1_stage0_iter58 : BOOLEAN;
    signal ap_block_state144_pp1_stage0_iter59 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal exitcond8_reg_542 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter28 : STD_LOGIC := '0';
    signal exitcond_reg_594 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_287_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_298 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal exitcond8_reg_542_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter19 : STD_LOGIC := '0';
    signal exitcond_reg_594_pp1_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_282_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_303 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter58 : STD_LOGIC := '0';
    signal exitcond8_reg_542_pp0_iter57_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter58 : STD_LOGIC := '0';
    signal exitcond_reg_594_pp1_iter57_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_315_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_reg_485 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_fu_332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_490 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_fu_338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal j_fu_352_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_reg_512 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal exitcond_i_fu_347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_array_addr_5_reg_522 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_71_fu_373_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bias_array_load_reg_532 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal output_array_load_5_reg_537 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal exitcond8_fu_383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal exitcond8_reg_542_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter35_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter37_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter38_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter39_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter40_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter41_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter42_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter43_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter44_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter45_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter46_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter47_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter48_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter49_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter50_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter51_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter52_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter53_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter54_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter55_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter56_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_542_pp0_iter58_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_388_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal output_array_addr_reg_551 : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter4_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter5_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter6_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter7_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter8_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter9_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter10_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter11_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter12_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter13_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter14_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter15_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter16_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter17_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter18_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter19_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter20_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter21_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter22_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter23_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter24_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter25_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter26_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter27_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter28_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter29_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter30_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter31_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter32_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter33_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter34_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter35_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter36_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter37_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter38_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter39_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter40_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter41_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter42_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter43_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter44_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter45_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter46_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter47_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter48_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter49_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter50_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter51_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter52_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter53_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter54_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter55_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter56_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter57_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_reg_551_pp0_iter58_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_37_neg_fu_398_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_neg_reg_557 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_fu_404_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal outrows1_fu_408_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal outrows1_reg_567 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal outcols_reg_573 : STD_LOGIC_VECTOR (63 downto 0);
    signal innerdim_reg_584 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal grp_fu_415_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_reg_589 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state84 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal exitcond_fu_424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal exitcond_reg_594_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter35_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter37_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter38_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter39_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter40_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter41_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter42_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter43_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter44_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter45_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter46_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter47_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter48_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter49_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter50_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter51_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter52_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter53_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter54_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter55_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter56_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_594_pp1_iter58_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_70_fu_429_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal output_array_addr_2_reg_603 : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter4_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter5_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter6_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter7_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter8_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter9_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter10_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter11_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter12_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter13_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter14_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter15_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter16_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter17_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter18_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter19_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter20_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter21_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter22_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter23_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter24_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter25_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter26_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter27_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter28_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter29_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter30_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter31_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter32_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter33_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter34_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter35_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter36_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter37_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter38_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter39_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter40_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter41_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter42_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter43_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter44_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter45_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter46_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter47_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter48_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter49_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter50_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter51_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter52_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter53_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter54_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter55_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter56_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter57_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal output_array_addr_2_reg_603_pp1_iter58_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_42_neg_fu_439_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_neg_reg_609 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_fu_445_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state17 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter29 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter30 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter31 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter32 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter33 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter34 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter35 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter36 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter37 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter38 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter39 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter40 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter41 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter42 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter43 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter44 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter45 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter46 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter47 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter48 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter49 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter50 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter51 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter52 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter53 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter54 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter55 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter56 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter57 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter59 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state85 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter29 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter30 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter31 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter32 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter33 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter34 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter35 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter36 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter37 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter38 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter39 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter40 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter41 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter42 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter43 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter44 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter45 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter46 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter47 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter48 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter49 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter50 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter51 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter52 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter53 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter54 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter55 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter56 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter57 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter59 : STD_LOGIC := '0';
    signal grp_k2c_dot_3_fu_236_ap_start : STD_LOGIC;
    signal grp_k2c_dot_3_fu_236_ap_done : STD_LOGIC;
    signal grp_k2c_dot_3_fu_236_ap_idle : STD_LOGIC;
    signal grp_k2c_dot_3_fu_236_ap_ready : STD_LOGIC;
    signal grp_k2c_dot_3_fu_236_C_array_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_k2c_dot_3_fu_236_C_array_ce0 : STD_LOGIC;
    signal grp_k2c_dot_3_fu_236_C_array_we0 : STD_LOGIC;
    signal grp_k2c_dot_3_fu_236_C_array_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_k2c_dot_3_fu_236_A_array_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_k2c_dot_3_fu_236_A_array_ce0 : STD_LOGIC;
    signal grp_k2c_dot_3_fu_236_A_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_k2c_dot_3_fu_236_A_shape_ce0 : STD_LOGIC;
    signal grp_k2c_dot_3_fu_236_B_array_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_k2c_dot_3_fu_236_B_array_ce0 : STD_LOGIC;
    signal grp_k2c_dot_3_fu_236_B_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_k2c_dot_3_fu_236_B_shape_ce0 : STD_LOGIC;
    signal grp_k2c_dot_3_fu_236_fwork_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_k2c_dot_3_fu_236_fwork_ce0 : STD_LOGIC;
    signal grp_k2c_dot_3_fu_236_fwork_we0 : STD_LOGIC;
    signal grp_k2c_dot_3_fu_236_fwork_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_k2c_dot_3_fu_236_fwork_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_k2c_dot_3_fu_236_fwork_ce1 : STD_LOGIC;
    signal grp_k2c_affine_matmul_fu_261_ap_start : STD_LOGIC;
    signal grp_k2c_affine_matmul_fu_261_ap_done : STD_LOGIC;
    signal grp_k2c_affine_matmul_fu_261_ap_idle : STD_LOGIC;
    signal grp_k2c_affine_matmul_fu_261_ap_ready : STD_LOGIC;
    signal grp_k2c_affine_matmul_fu_261_C_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_k2c_affine_matmul_fu_261_C_ce0 : STD_LOGIC;
    signal grp_k2c_affine_matmul_fu_261_C_we0 : STD_LOGIC;
    signal grp_k2c_affine_matmul_fu_261_C_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_k2c_affine_matmul_fu_261_A_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_k2c_affine_matmul_fu_261_A_ce0 : STD_LOGIC;
    signal grp_k2c_affine_matmul_fu_261_B_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_k2c_affine_matmul_fu_261_B_ce0 : STD_LOGIC;
    signal grp_k2c_affine_matmul_fu_261_d_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_k2c_affine_matmul_fu_261_d_ce0 : STD_LOGIC;
    signal i_i_reg_190 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal j_i_reg_202 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_k2c_dot_3_fu_236_ap_start_reg : STD_LOGIC := '0';
    signal grp_k2c_affine_matmul_fu_261_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal tmp_i_cast_fu_368_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i3_cast_fu_378_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal i1_cast_fu_419_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal grp_fu_277_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_277_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_fu_287_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_80_fu_322_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_82_fu_358_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_81_fu_343_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_i_50_fu_362_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_37_to_int_fu_394_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_to_int_fu_435_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_415_ce : STD_LOGIC;
    signal ap_CS_fsm_state81 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal ap_CS_fsm_state83 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal ap_CS_fsm_state145 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state145 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;

    component k2c_dot_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        C_array_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        C_array_ce0 : OUT STD_LOGIC;
        C_array_we0 : OUT STD_LOGIC;
        C_array_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_array_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        A_array_ce0 : OUT STD_LOGIC;
        A_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_ndim_read : IN STD_LOGIC_VECTOR (63 downto 0);
        A_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        A_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A_shape_ce0 : OUT STD_LOGIC;
        A_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        B_array_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        B_array_ce0 : OUT STD_LOGIC;
        B_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_ndim_read : IN STD_LOGIC_VECTOR (63 downto 0);
        B_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        B_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        B_shape_ce0 : OUT STD_LOGIC;
        B_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (63 downto 0);
        fwork_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        fwork_ce0 : OUT STD_LOGIC;
        fwork_we0 : OUT STD_LOGIC;
        fwork_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        fwork_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fwork_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        fwork_ce1 : OUT STD_LOGIC;
        fwork_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component k2c_affine_matmul IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        C_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        C_ce0 : OUT STD_LOGIC;
        C_we0 : OUT STD_LOGIC;
        C_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        B_ce0 : OUT STD_LOGIC;
        B_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        d_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        d_ce0 : OUT STD_LOGIC;
        d_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        outrows : IN STD_LOGIC_VECTOR (63 downto 0);
        outcols : IN STD_LOGIC_VECTOR (63 downto 0);
        innerdim : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component sample0_fadd_32nscud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sample0_fdiv_32nsrcU IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sample0_fexp_32nssc4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sample0_mul_64s_6bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_k2c_dot_3_fu_236 : component k2c_dot_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_k2c_dot_3_fu_236_ap_start,
        ap_done => grp_k2c_dot_3_fu_236_ap_done,
        ap_idle => grp_k2c_dot_3_fu_236_ap_idle,
        ap_ready => grp_k2c_dot_3_fu_236_ap_ready,
        C_array_address0 => grp_k2c_dot_3_fu_236_C_array_address0,
        C_array_ce0 => grp_k2c_dot_3_fu_236_C_array_ce0,
        C_array_we0 => grp_k2c_dot_3_fu_236_C_array_we0,
        C_array_d0 => grp_k2c_dot_3_fu_236_C_array_d0,
        C_array_q0 => output_array_q0,
        A_array_address0 => grp_k2c_dot_3_fu_236_A_array_address0,
        A_array_ce0 => grp_k2c_dot_3_fu_236_A_array_ce0,
        A_array_q0 => input_array_q0,
        A_ndim_read => input_ndim_read,
        A_numel_read => input_numel_read,
        A_shape_address0 => grp_k2c_dot_3_fu_236_A_shape_address0,
        A_shape_ce0 => grp_k2c_dot_3_fu_236_A_shape_ce0,
        A_shape_q0 => input_shape_q0,
        B_array_address0 => grp_k2c_dot_3_fu_236_B_array_address0,
        B_array_ce0 => grp_k2c_dot_3_fu_236_B_array_ce0,
        B_array_q0 => kernel_array_q0,
        B_ndim_read => kernel_ndim_read,
        B_numel_read => kernel_numel_read,
        B_shape_address0 => grp_k2c_dot_3_fu_236_B_shape_address0,
        B_shape_ce0 => grp_k2c_dot_3_fu_236_B_shape_ce0,
        B_shape_q0 => kernel_shape_q0,
        p_read4 => tmp_29_reg_485,
        fwork_address0 => grp_k2c_dot_3_fu_236_fwork_address0,
        fwork_ce0 => grp_k2c_dot_3_fu_236_fwork_ce0,
        fwork_we0 => grp_k2c_dot_3_fu_236_fwork_we0,
        fwork_d0 => grp_k2c_dot_3_fu_236_fwork_d0,
        fwork_q0 => fwork_q0,
        fwork_address1 => grp_k2c_dot_3_fu_236_fwork_address1,
        fwork_ce1 => grp_k2c_dot_3_fu_236_fwork_ce1,
        fwork_q1 => fwork_q1);

    grp_k2c_affine_matmul_fu_261 : component k2c_affine_matmul
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_k2c_affine_matmul_fu_261_ap_start,
        ap_done => grp_k2c_affine_matmul_fu_261_ap_done,
        ap_idle => grp_k2c_affine_matmul_fu_261_ap_idle,
        ap_ready => grp_k2c_affine_matmul_fu_261_ap_ready,
        C_address0 => grp_k2c_affine_matmul_fu_261_C_address0,
        C_ce0 => grp_k2c_affine_matmul_fu_261_C_ce0,
        C_we0 => grp_k2c_affine_matmul_fu_261_C_we0,
        C_d0 => grp_k2c_affine_matmul_fu_261_C_d0,
        C_q0 => output_array_q0,
        A_address0 => grp_k2c_affine_matmul_fu_261_A_address0,
        A_ce0 => grp_k2c_affine_matmul_fu_261_A_ce0,
        A_q0 => input_array_q0,
        B_address0 => grp_k2c_affine_matmul_fu_261_B_address0,
        B_ce0 => grp_k2c_affine_matmul_fu_261_B_ce0,
        B_q0 => kernel_array_q0,
        d_address0 => grp_k2c_affine_matmul_fu_261_d_address0,
        d_ce0 => grp_k2c_affine_matmul_fu_261_d_ce0,
        d_q0 => bias_array_q0,
        outrows => outrows1_reg_567,
        outcols => outcols_reg_573,
        innerdim => innerdim_reg_584);

    sample0_fadd_32nscud_U193 : component sample0_fadd_32nscud
    generic map (
        ID => 1,
        NUM_STAGE => 9,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_277_p0,
        din1 => grp_fu_277_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_277_p2);

    sample0_fdiv_32nsrcU_U194 : component sample0_fdiv_32nsrcU
    generic map (
        ID => 1,
        NUM_STAGE => 30,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_3F800000,
        din1 => reg_292,
        ce => ap_const_logic_1,
        dout => grp_fu_282_p2);

    sample0_fexp_32nssc4_U195 : component sample0_fexp_32nssc4
    generic map (
        ID => 1,
        NUM_STAGE => 18,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_0,
        din1 => grp_fu_287_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_287_p2);

    sample0_mul_64s_6bkb_U196 : component sample0_mul_64s_6bkb
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => outcols_reg_573,
        din1 => outrows1_reg_567,
        ce => grp_fu_415_ce,
        dout => grp_fu_415_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state17) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((tmp_i_fu_338_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state17)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state17);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter29 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter30 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter31 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter32 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter33 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter34 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter35_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter35 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter36_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter36 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter37_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter37 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter38_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter38 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter39_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter39 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter40_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter40 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter41_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter41 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter42_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter42 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter43_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter43 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter44_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter44 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter45_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter45 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter46_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter46 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter47_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter47 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter48_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter48 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter49_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter49 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter50_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter50 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter51_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter51 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter52_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter52 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter53_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter53 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter54_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter54 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter55_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter55 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter56_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter56 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter57_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter57 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter58_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter58 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter59_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter59 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter59 <= ap_enable_reg_pp0_iter58;
                elsif (((tmp_i_fu_338_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter59 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state85) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state85)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state85);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter16 <= ap_enable_reg_pp1_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter17 <= ap_enable_reg_pp1_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter18 <= ap_enable_reg_pp1_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter19 <= ap_enable_reg_pp1_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter20 <= ap_enable_reg_pp1_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter21 <= ap_enable_reg_pp1_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter22 <= ap_enable_reg_pp1_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter23 <= ap_enable_reg_pp1_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter24 <= ap_enable_reg_pp1_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter25 <= ap_enable_reg_pp1_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter26 <= ap_enable_reg_pp1_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter27 <= ap_enable_reg_pp1_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter28 <= ap_enable_reg_pp1_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter29 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter29 <= ap_enable_reg_pp1_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter30 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter30 <= ap_enable_reg_pp1_iter29;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter31 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter31 <= ap_enable_reg_pp1_iter30;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter32 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter32 <= ap_enable_reg_pp1_iter31;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter33 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter33 <= ap_enable_reg_pp1_iter32;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter34 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter34 <= ap_enable_reg_pp1_iter33;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter35_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter35 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter35 <= ap_enable_reg_pp1_iter34;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter36_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter36 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter36 <= ap_enable_reg_pp1_iter35;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter37_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter37 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter37 <= ap_enable_reg_pp1_iter36;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter38_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter38 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter38 <= ap_enable_reg_pp1_iter37;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter39_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter39 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter39 <= ap_enable_reg_pp1_iter38;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter40_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter40 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter40 <= ap_enable_reg_pp1_iter39;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter41_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter41 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter41 <= ap_enable_reg_pp1_iter40;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter42_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter42 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter42 <= ap_enable_reg_pp1_iter41;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter43_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter43 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter43 <= ap_enable_reg_pp1_iter42;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter44_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter44 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter44 <= ap_enable_reg_pp1_iter43;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter45_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter45 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter45 <= ap_enable_reg_pp1_iter44;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter46_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter46 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter46 <= ap_enable_reg_pp1_iter45;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter47_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter47 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter47 <= ap_enable_reg_pp1_iter46;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter48_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter48 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter48 <= ap_enable_reg_pp1_iter47;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter49_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter49 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter49 <= ap_enable_reg_pp1_iter48;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter50_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter50 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter50 <= ap_enable_reg_pp1_iter49;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter51_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter51 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter51 <= ap_enable_reg_pp1_iter50;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter52_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter52 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter52 <= ap_enable_reg_pp1_iter51;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter53_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter53 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter53 <= ap_enable_reg_pp1_iter52;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter54_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter54 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter54 <= ap_enable_reg_pp1_iter53;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter55_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter55 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter55 <= ap_enable_reg_pp1_iter54;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter56_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter56 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter56 <= ap_enable_reg_pp1_iter55;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter57_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter57 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter57 <= ap_enable_reg_pp1_iter56;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter58_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter58 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter58 <= ap_enable_reg_pp1_iter57;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter59_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter59 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter59 <= ap_enable_reg_pp1_iter58;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
                    ap_enable_reg_pp1_iter59 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
                end if; 
            end if;
        end if;
    end process;


    grp_k2c_affine_matmul_fu_261_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_k2c_affine_matmul_fu_261_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
                    grp_k2c_affine_matmul_fu_261_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_k2c_affine_matmul_fu_261_ap_ready = ap_const_logic_1)) then 
                    grp_k2c_affine_matmul_fu_261_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_k2c_dot_3_fu_236_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_k2c_dot_3_fu_236_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (tmp_fu_309_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_k2c_dot_3_fu_236_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_k2c_dot_3_fu_236_ap_ready = ap_const_logic_1)) then 
                    grp_k2c_dot_3_fu_236_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i1_reg_225_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
                i1_reg_225 <= ap_const_lv14_0;
            elsif (((exitcond_fu_424_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                i1_reg_225 <= i_70_fu_429_p2;
            end if; 
        end if;
    end process;

    i3_reg_214_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_fu_338_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i3_reg_214 <= ap_const_lv14_0;
            elsif (((exitcond8_fu_383_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i3_reg_214 <= i_fu_388_p2;
            end if; 
        end if;
    end process;

    i_i_reg_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_fu_347_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                i_i_reg_190 <= i_71_fu_373_p2;
            elsif (((grp_k2c_dot_3_fu_236_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_i_reg_190 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    j_i_reg_202_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_fu_338_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                j_i_reg_202 <= ap_const_lv64_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                j_i_reg_202 <= j_reg_512;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                bias_array_load_reg_532 <= bias_array_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond8_reg_542 <= exitcond8_fu_383_p2;
                exitcond8_reg_542_pp0_iter1_reg <= exitcond8_reg_542;
                output_array_addr_reg_551_pp0_iter1_reg <= output_array_addr_reg_551;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                exitcond8_reg_542_pp0_iter10_reg <= exitcond8_reg_542_pp0_iter9_reg;
                exitcond8_reg_542_pp0_iter11_reg <= exitcond8_reg_542_pp0_iter10_reg;
                exitcond8_reg_542_pp0_iter12_reg <= exitcond8_reg_542_pp0_iter11_reg;
                exitcond8_reg_542_pp0_iter13_reg <= exitcond8_reg_542_pp0_iter12_reg;
                exitcond8_reg_542_pp0_iter14_reg <= exitcond8_reg_542_pp0_iter13_reg;
                exitcond8_reg_542_pp0_iter15_reg <= exitcond8_reg_542_pp0_iter14_reg;
                exitcond8_reg_542_pp0_iter16_reg <= exitcond8_reg_542_pp0_iter15_reg;
                exitcond8_reg_542_pp0_iter17_reg <= exitcond8_reg_542_pp0_iter16_reg;
                exitcond8_reg_542_pp0_iter18_reg <= exitcond8_reg_542_pp0_iter17_reg;
                exitcond8_reg_542_pp0_iter19_reg <= exitcond8_reg_542_pp0_iter18_reg;
                exitcond8_reg_542_pp0_iter20_reg <= exitcond8_reg_542_pp0_iter19_reg;
                exitcond8_reg_542_pp0_iter21_reg <= exitcond8_reg_542_pp0_iter20_reg;
                exitcond8_reg_542_pp0_iter22_reg <= exitcond8_reg_542_pp0_iter21_reg;
                exitcond8_reg_542_pp0_iter23_reg <= exitcond8_reg_542_pp0_iter22_reg;
                exitcond8_reg_542_pp0_iter24_reg <= exitcond8_reg_542_pp0_iter23_reg;
                exitcond8_reg_542_pp0_iter25_reg <= exitcond8_reg_542_pp0_iter24_reg;
                exitcond8_reg_542_pp0_iter26_reg <= exitcond8_reg_542_pp0_iter25_reg;
                exitcond8_reg_542_pp0_iter27_reg <= exitcond8_reg_542_pp0_iter26_reg;
                exitcond8_reg_542_pp0_iter28_reg <= exitcond8_reg_542_pp0_iter27_reg;
                exitcond8_reg_542_pp0_iter29_reg <= exitcond8_reg_542_pp0_iter28_reg;
                exitcond8_reg_542_pp0_iter2_reg <= exitcond8_reg_542_pp0_iter1_reg;
                exitcond8_reg_542_pp0_iter30_reg <= exitcond8_reg_542_pp0_iter29_reg;
                exitcond8_reg_542_pp0_iter31_reg <= exitcond8_reg_542_pp0_iter30_reg;
                exitcond8_reg_542_pp0_iter32_reg <= exitcond8_reg_542_pp0_iter31_reg;
                exitcond8_reg_542_pp0_iter33_reg <= exitcond8_reg_542_pp0_iter32_reg;
                exitcond8_reg_542_pp0_iter34_reg <= exitcond8_reg_542_pp0_iter33_reg;
                exitcond8_reg_542_pp0_iter35_reg <= exitcond8_reg_542_pp0_iter34_reg;
                exitcond8_reg_542_pp0_iter36_reg <= exitcond8_reg_542_pp0_iter35_reg;
                exitcond8_reg_542_pp0_iter37_reg <= exitcond8_reg_542_pp0_iter36_reg;
                exitcond8_reg_542_pp0_iter38_reg <= exitcond8_reg_542_pp0_iter37_reg;
                exitcond8_reg_542_pp0_iter39_reg <= exitcond8_reg_542_pp0_iter38_reg;
                exitcond8_reg_542_pp0_iter3_reg <= exitcond8_reg_542_pp0_iter2_reg;
                exitcond8_reg_542_pp0_iter40_reg <= exitcond8_reg_542_pp0_iter39_reg;
                exitcond8_reg_542_pp0_iter41_reg <= exitcond8_reg_542_pp0_iter40_reg;
                exitcond8_reg_542_pp0_iter42_reg <= exitcond8_reg_542_pp0_iter41_reg;
                exitcond8_reg_542_pp0_iter43_reg <= exitcond8_reg_542_pp0_iter42_reg;
                exitcond8_reg_542_pp0_iter44_reg <= exitcond8_reg_542_pp0_iter43_reg;
                exitcond8_reg_542_pp0_iter45_reg <= exitcond8_reg_542_pp0_iter44_reg;
                exitcond8_reg_542_pp0_iter46_reg <= exitcond8_reg_542_pp0_iter45_reg;
                exitcond8_reg_542_pp0_iter47_reg <= exitcond8_reg_542_pp0_iter46_reg;
                exitcond8_reg_542_pp0_iter48_reg <= exitcond8_reg_542_pp0_iter47_reg;
                exitcond8_reg_542_pp0_iter49_reg <= exitcond8_reg_542_pp0_iter48_reg;
                exitcond8_reg_542_pp0_iter4_reg <= exitcond8_reg_542_pp0_iter3_reg;
                exitcond8_reg_542_pp0_iter50_reg <= exitcond8_reg_542_pp0_iter49_reg;
                exitcond8_reg_542_pp0_iter51_reg <= exitcond8_reg_542_pp0_iter50_reg;
                exitcond8_reg_542_pp0_iter52_reg <= exitcond8_reg_542_pp0_iter51_reg;
                exitcond8_reg_542_pp0_iter53_reg <= exitcond8_reg_542_pp0_iter52_reg;
                exitcond8_reg_542_pp0_iter54_reg <= exitcond8_reg_542_pp0_iter53_reg;
                exitcond8_reg_542_pp0_iter55_reg <= exitcond8_reg_542_pp0_iter54_reg;
                exitcond8_reg_542_pp0_iter56_reg <= exitcond8_reg_542_pp0_iter55_reg;
                exitcond8_reg_542_pp0_iter57_reg <= exitcond8_reg_542_pp0_iter56_reg;
                exitcond8_reg_542_pp0_iter58_reg <= exitcond8_reg_542_pp0_iter57_reg;
                exitcond8_reg_542_pp0_iter5_reg <= exitcond8_reg_542_pp0_iter4_reg;
                exitcond8_reg_542_pp0_iter6_reg <= exitcond8_reg_542_pp0_iter5_reg;
                exitcond8_reg_542_pp0_iter7_reg <= exitcond8_reg_542_pp0_iter6_reg;
                exitcond8_reg_542_pp0_iter8_reg <= exitcond8_reg_542_pp0_iter7_reg;
                exitcond8_reg_542_pp0_iter9_reg <= exitcond8_reg_542_pp0_iter8_reg;
                output_array_addr_reg_551_pp0_iter10_reg <= output_array_addr_reg_551_pp0_iter9_reg;
                output_array_addr_reg_551_pp0_iter11_reg <= output_array_addr_reg_551_pp0_iter10_reg;
                output_array_addr_reg_551_pp0_iter12_reg <= output_array_addr_reg_551_pp0_iter11_reg;
                output_array_addr_reg_551_pp0_iter13_reg <= output_array_addr_reg_551_pp0_iter12_reg;
                output_array_addr_reg_551_pp0_iter14_reg <= output_array_addr_reg_551_pp0_iter13_reg;
                output_array_addr_reg_551_pp0_iter15_reg <= output_array_addr_reg_551_pp0_iter14_reg;
                output_array_addr_reg_551_pp0_iter16_reg <= output_array_addr_reg_551_pp0_iter15_reg;
                output_array_addr_reg_551_pp0_iter17_reg <= output_array_addr_reg_551_pp0_iter16_reg;
                output_array_addr_reg_551_pp0_iter18_reg <= output_array_addr_reg_551_pp0_iter17_reg;
                output_array_addr_reg_551_pp0_iter19_reg <= output_array_addr_reg_551_pp0_iter18_reg;
                output_array_addr_reg_551_pp0_iter20_reg <= output_array_addr_reg_551_pp0_iter19_reg;
                output_array_addr_reg_551_pp0_iter21_reg <= output_array_addr_reg_551_pp0_iter20_reg;
                output_array_addr_reg_551_pp0_iter22_reg <= output_array_addr_reg_551_pp0_iter21_reg;
                output_array_addr_reg_551_pp0_iter23_reg <= output_array_addr_reg_551_pp0_iter22_reg;
                output_array_addr_reg_551_pp0_iter24_reg <= output_array_addr_reg_551_pp0_iter23_reg;
                output_array_addr_reg_551_pp0_iter25_reg <= output_array_addr_reg_551_pp0_iter24_reg;
                output_array_addr_reg_551_pp0_iter26_reg <= output_array_addr_reg_551_pp0_iter25_reg;
                output_array_addr_reg_551_pp0_iter27_reg <= output_array_addr_reg_551_pp0_iter26_reg;
                output_array_addr_reg_551_pp0_iter28_reg <= output_array_addr_reg_551_pp0_iter27_reg;
                output_array_addr_reg_551_pp0_iter29_reg <= output_array_addr_reg_551_pp0_iter28_reg;
                output_array_addr_reg_551_pp0_iter2_reg <= output_array_addr_reg_551_pp0_iter1_reg;
                output_array_addr_reg_551_pp0_iter30_reg <= output_array_addr_reg_551_pp0_iter29_reg;
                output_array_addr_reg_551_pp0_iter31_reg <= output_array_addr_reg_551_pp0_iter30_reg;
                output_array_addr_reg_551_pp0_iter32_reg <= output_array_addr_reg_551_pp0_iter31_reg;
                output_array_addr_reg_551_pp0_iter33_reg <= output_array_addr_reg_551_pp0_iter32_reg;
                output_array_addr_reg_551_pp0_iter34_reg <= output_array_addr_reg_551_pp0_iter33_reg;
                output_array_addr_reg_551_pp0_iter35_reg <= output_array_addr_reg_551_pp0_iter34_reg;
                output_array_addr_reg_551_pp0_iter36_reg <= output_array_addr_reg_551_pp0_iter35_reg;
                output_array_addr_reg_551_pp0_iter37_reg <= output_array_addr_reg_551_pp0_iter36_reg;
                output_array_addr_reg_551_pp0_iter38_reg <= output_array_addr_reg_551_pp0_iter37_reg;
                output_array_addr_reg_551_pp0_iter39_reg <= output_array_addr_reg_551_pp0_iter38_reg;
                output_array_addr_reg_551_pp0_iter3_reg <= output_array_addr_reg_551_pp0_iter2_reg;
                output_array_addr_reg_551_pp0_iter40_reg <= output_array_addr_reg_551_pp0_iter39_reg;
                output_array_addr_reg_551_pp0_iter41_reg <= output_array_addr_reg_551_pp0_iter40_reg;
                output_array_addr_reg_551_pp0_iter42_reg <= output_array_addr_reg_551_pp0_iter41_reg;
                output_array_addr_reg_551_pp0_iter43_reg <= output_array_addr_reg_551_pp0_iter42_reg;
                output_array_addr_reg_551_pp0_iter44_reg <= output_array_addr_reg_551_pp0_iter43_reg;
                output_array_addr_reg_551_pp0_iter45_reg <= output_array_addr_reg_551_pp0_iter44_reg;
                output_array_addr_reg_551_pp0_iter46_reg <= output_array_addr_reg_551_pp0_iter45_reg;
                output_array_addr_reg_551_pp0_iter47_reg <= output_array_addr_reg_551_pp0_iter46_reg;
                output_array_addr_reg_551_pp0_iter48_reg <= output_array_addr_reg_551_pp0_iter47_reg;
                output_array_addr_reg_551_pp0_iter49_reg <= output_array_addr_reg_551_pp0_iter48_reg;
                output_array_addr_reg_551_pp0_iter4_reg <= output_array_addr_reg_551_pp0_iter3_reg;
                output_array_addr_reg_551_pp0_iter50_reg <= output_array_addr_reg_551_pp0_iter49_reg;
                output_array_addr_reg_551_pp0_iter51_reg <= output_array_addr_reg_551_pp0_iter50_reg;
                output_array_addr_reg_551_pp0_iter52_reg <= output_array_addr_reg_551_pp0_iter51_reg;
                output_array_addr_reg_551_pp0_iter53_reg <= output_array_addr_reg_551_pp0_iter52_reg;
                output_array_addr_reg_551_pp0_iter54_reg <= output_array_addr_reg_551_pp0_iter53_reg;
                output_array_addr_reg_551_pp0_iter55_reg <= output_array_addr_reg_551_pp0_iter54_reg;
                output_array_addr_reg_551_pp0_iter56_reg <= output_array_addr_reg_551_pp0_iter55_reg;
                output_array_addr_reg_551_pp0_iter57_reg <= output_array_addr_reg_551_pp0_iter56_reg;
                output_array_addr_reg_551_pp0_iter58_reg <= output_array_addr_reg_551_pp0_iter57_reg;
                output_array_addr_reg_551_pp0_iter5_reg <= output_array_addr_reg_551_pp0_iter4_reg;
                output_array_addr_reg_551_pp0_iter6_reg <= output_array_addr_reg_551_pp0_iter5_reg;
                output_array_addr_reg_551_pp0_iter7_reg <= output_array_addr_reg_551_pp0_iter6_reg;
                output_array_addr_reg_551_pp0_iter8_reg <= output_array_addr_reg_551_pp0_iter7_reg;
                output_array_addr_reg_551_pp0_iter9_reg <= output_array_addr_reg_551_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                exitcond_reg_594 <= exitcond_fu_424_p2;
                exitcond_reg_594_pp1_iter1_reg <= exitcond_reg_594;
                output_array_addr_2_reg_603_pp1_iter1_reg <= output_array_addr_2_reg_603;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                exitcond_reg_594_pp1_iter10_reg <= exitcond_reg_594_pp1_iter9_reg;
                exitcond_reg_594_pp1_iter11_reg <= exitcond_reg_594_pp1_iter10_reg;
                exitcond_reg_594_pp1_iter12_reg <= exitcond_reg_594_pp1_iter11_reg;
                exitcond_reg_594_pp1_iter13_reg <= exitcond_reg_594_pp1_iter12_reg;
                exitcond_reg_594_pp1_iter14_reg <= exitcond_reg_594_pp1_iter13_reg;
                exitcond_reg_594_pp1_iter15_reg <= exitcond_reg_594_pp1_iter14_reg;
                exitcond_reg_594_pp1_iter16_reg <= exitcond_reg_594_pp1_iter15_reg;
                exitcond_reg_594_pp1_iter17_reg <= exitcond_reg_594_pp1_iter16_reg;
                exitcond_reg_594_pp1_iter18_reg <= exitcond_reg_594_pp1_iter17_reg;
                exitcond_reg_594_pp1_iter19_reg <= exitcond_reg_594_pp1_iter18_reg;
                exitcond_reg_594_pp1_iter20_reg <= exitcond_reg_594_pp1_iter19_reg;
                exitcond_reg_594_pp1_iter21_reg <= exitcond_reg_594_pp1_iter20_reg;
                exitcond_reg_594_pp1_iter22_reg <= exitcond_reg_594_pp1_iter21_reg;
                exitcond_reg_594_pp1_iter23_reg <= exitcond_reg_594_pp1_iter22_reg;
                exitcond_reg_594_pp1_iter24_reg <= exitcond_reg_594_pp1_iter23_reg;
                exitcond_reg_594_pp1_iter25_reg <= exitcond_reg_594_pp1_iter24_reg;
                exitcond_reg_594_pp1_iter26_reg <= exitcond_reg_594_pp1_iter25_reg;
                exitcond_reg_594_pp1_iter27_reg <= exitcond_reg_594_pp1_iter26_reg;
                exitcond_reg_594_pp1_iter28_reg <= exitcond_reg_594_pp1_iter27_reg;
                exitcond_reg_594_pp1_iter29_reg <= exitcond_reg_594_pp1_iter28_reg;
                exitcond_reg_594_pp1_iter2_reg <= exitcond_reg_594_pp1_iter1_reg;
                exitcond_reg_594_pp1_iter30_reg <= exitcond_reg_594_pp1_iter29_reg;
                exitcond_reg_594_pp1_iter31_reg <= exitcond_reg_594_pp1_iter30_reg;
                exitcond_reg_594_pp1_iter32_reg <= exitcond_reg_594_pp1_iter31_reg;
                exitcond_reg_594_pp1_iter33_reg <= exitcond_reg_594_pp1_iter32_reg;
                exitcond_reg_594_pp1_iter34_reg <= exitcond_reg_594_pp1_iter33_reg;
                exitcond_reg_594_pp1_iter35_reg <= exitcond_reg_594_pp1_iter34_reg;
                exitcond_reg_594_pp1_iter36_reg <= exitcond_reg_594_pp1_iter35_reg;
                exitcond_reg_594_pp1_iter37_reg <= exitcond_reg_594_pp1_iter36_reg;
                exitcond_reg_594_pp1_iter38_reg <= exitcond_reg_594_pp1_iter37_reg;
                exitcond_reg_594_pp1_iter39_reg <= exitcond_reg_594_pp1_iter38_reg;
                exitcond_reg_594_pp1_iter3_reg <= exitcond_reg_594_pp1_iter2_reg;
                exitcond_reg_594_pp1_iter40_reg <= exitcond_reg_594_pp1_iter39_reg;
                exitcond_reg_594_pp1_iter41_reg <= exitcond_reg_594_pp1_iter40_reg;
                exitcond_reg_594_pp1_iter42_reg <= exitcond_reg_594_pp1_iter41_reg;
                exitcond_reg_594_pp1_iter43_reg <= exitcond_reg_594_pp1_iter42_reg;
                exitcond_reg_594_pp1_iter44_reg <= exitcond_reg_594_pp1_iter43_reg;
                exitcond_reg_594_pp1_iter45_reg <= exitcond_reg_594_pp1_iter44_reg;
                exitcond_reg_594_pp1_iter46_reg <= exitcond_reg_594_pp1_iter45_reg;
                exitcond_reg_594_pp1_iter47_reg <= exitcond_reg_594_pp1_iter46_reg;
                exitcond_reg_594_pp1_iter48_reg <= exitcond_reg_594_pp1_iter47_reg;
                exitcond_reg_594_pp1_iter49_reg <= exitcond_reg_594_pp1_iter48_reg;
                exitcond_reg_594_pp1_iter4_reg <= exitcond_reg_594_pp1_iter3_reg;
                exitcond_reg_594_pp1_iter50_reg <= exitcond_reg_594_pp1_iter49_reg;
                exitcond_reg_594_pp1_iter51_reg <= exitcond_reg_594_pp1_iter50_reg;
                exitcond_reg_594_pp1_iter52_reg <= exitcond_reg_594_pp1_iter51_reg;
                exitcond_reg_594_pp1_iter53_reg <= exitcond_reg_594_pp1_iter52_reg;
                exitcond_reg_594_pp1_iter54_reg <= exitcond_reg_594_pp1_iter53_reg;
                exitcond_reg_594_pp1_iter55_reg <= exitcond_reg_594_pp1_iter54_reg;
                exitcond_reg_594_pp1_iter56_reg <= exitcond_reg_594_pp1_iter55_reg;
                exitcond_reg_594_pp1_iter57_reg <= exitcond_reg_594_pp1_iter56_reg;
                exitcond_reg_594_pp1_iter58_reg <= exitcond_reg_594_pp1_iter57_reg;
                exitcond_reg_594_pp1_iter5_reg <= exitcond_reg_594_pp1_iter4_reg;
                exitcond_reg_594_pp1_iter6_reg <= exitcond_reg_594_pp1_iter5_reg;
                exitcond_reg_594_pp1_iter7_reg <= exitcond_reg_594_pp1_iter6_reg;
                exitcond_reg_594_pp1_iter8_reg <= exitcond_reg_594_pp1_iter7_reg;
                exitcond_reg_594_pp1_iter9_reg <= exitcond_reg_594_pp1_iter8_reg;
                output_array_addr_2_reg_603_pp1_iter10_reg <= output_array_addr_2_reg_603_pp1_iter9_reg;
                output_array_addr_2_reg_603_pp1_iter11_reg <= output_array_addr_2_reg_603_pp1_iter10_reg;
                output_array_addr_2_reg_603_pp1_iter12_reg <= output_array_addr_2_reg_603_pp1_iter11_reg;
                output_array_addr_2_reg_603_pp1_iter13_reg <= output_array_addr_2_reg_603_pp1_iter12_reg;
                output_array_addr_2_reg_603_pp1_iter14_reg <= output_array_addr_2_reg_603_pp1_iter13_reg;
                output_array_addr_2_reg_603_pp1_iter15_reg <= output_array_addr_2_reg_603_pp1_iter14_reg;
                output_array_addr_2_reg_603_pp1_iter16_reg <= output_array_addr_2_reg_603_pp1_iter15_reg;
                output_array_addr_2_reg_603_pp1_iter17_reg <= output_array_addr_2_reg_603_pp1_iter16_reg;
                output_array_addr_2_reg_603_pp1_iter18_reg <= output_array_addr_2_reg_603_pp1_iter17_reg;
                output_array_addr_2_reg_603_pp1_iter19_reg <= output_array_addr_2_reg_603_pp1_iter18_reg;
                output_array_addr_2_reg_603_pp1_iter20_reg <= output_array_addr_2_reg_603_pp1_iter19_reg;
                output_array_addr_2_reg_603_pp1_iter21_reg <= output_array_addr_2_reg_603_pp1_iter20_reg;
                output_array_addr_2_reg_603_pp1_iter22_reg <= output_array_addr_2_reg_603_pp1_iter21_reg;
                output_array_addr_2_reg_603_pp1_iter23_reg <= output_array_addr_2_reg_603_pp1_iter22_reg;
                output_array_addr_2_reg_603_pp1_iter24_reg <= output_array_addr_2_reg_603_pp1_iter23_reg;
                output_array_addr_2_reg_603_pp1_iter25_reg <= output_array_addr_2_reg_603_pp1_iter24_reg;
                output_array_addr_2_reg_603_pp1_iter26_reg <= output_array_addr_2_reg_603_pp1_iter25_reg;
                output_array_addr_2_reg_603_pp1_iter27_reg <= output_array_addr_2_reg_603_pp1_iter26_reg;
                output_array_addr_2_reg_603_pp1_iter28_reg <= output_array_addr_2_reg_603_pp1_iter27_reg;
                output_array_addr_2_reg_603_pp1_iter29_reg <= output_array_addr_2_reg_603_pp1_iter28_reg;
                output_array_addr_2_reg_603_pp1_iter2_reg <= output_array_addr_2_reg_603_pp1_iter1_reg;
                output_array_addr_2_reg_603_pp1_iter30_reg <= output_array_addr_2_reg_603_pp1_iter29_reg;
                output_array_addr_2_reg_603_pp1_iter31_reg <= output_array_addr_2_reg_603_pp1_iter30_reg;
                output_array_addr_2_reg_603_pp1_iter32_reg <= output_array_addr_2_reg_603_pp1_iter31_reg;
                output_array_addr_2_reg_603_pp1_iter33_reg <= output_array_addr_2_reg_603_pp1_iter32_reg;
                output_array_addr_2_reg_603_pp1_iter34_reg <= output_array_addr_2_reg_603_pp1_iter33_reg;
                output_array_addr_2_reg_603_pp1_iter35_reg <= output_array_addr_2_reg_603_pp1_iter34_reg;
                output_array_addr_2_reg_603_pp1_iter36_reg <= output_array_addr_2_reg_603_pp1_iter35_reg;
                output_array_addr_2_reg_603_pp1_iter37_reg <= output_array_addr_2_reg_603_pp1_iter36_reg;
                output_array_addr_2_reg_603_pp1_iter38_reg <= output_array_addr_2_reg_603_pp1_iter37_reg;
                output_array_addr_2_reg_603_pp1_iter39_reg <= output_array_addr_2_reg_603_pp1_iter38_reg;
                output_array_addr_2_reg_603_pp1_iter3_reg <= output_array_addr_2_reg_603_pp1_iter2_reg;
                output_array_addr_2_reg_603_pp1_iter40_reg <= output_array_addr_2_reg_603_pp1_iter39_reg;
                output_array_addr_2_reg_603_pp1_iter41_reg <= output_array_addr_2_reg_603_pp1_iter40_reg;
                output_array_addr_2_reg_603_pp1_iter42_reg <= output_array_addr_2_reg_603_pp1_iter41_reg;
                output_array_addr_2_reg_603_pp1_iter43_reg <= output_array_addr_2_reg_603_pp1_iter42_reg;
                output_array_addr_2_reg_603_pp1_iter44_reg <= output_array_addr_2_reg_603_pp1_iter43_reg;
                output_array_addr_2_reg_603_pp1_iter45_reg <= output_array_addr_2_reg_603_pp1_iter44_reg;
                output_array_addr_2_reg_603_pp1_iter46_reg <= output_array_addr_2_reg_603_pp1_iter45_reg;
                output_array_addr_2_reg_603_pp1_iter47_reg <= output_array_addr_2_reg_603_pp1_iter46_reg;
                output_array_addr_2_reg_603_pp1_iter48_reg <= output_array_addr_2_reg_603_pp1_iter47_reg;
                output_array_addr_2_reg_603_pp1_iter49_reg <= output_array_addr_2_reg_603_pp1_iter48_reg;
                output_array_addr_2_reg_603_pp1_iter4_reg <= output_array_addr_2_reg_603_pp1_iter3_reg;
                output_array_addr_2_reg_603_pp1_iter50_reg <= output_array_addr_2_reg_603_pp1_iter49_reg;
                output_array_addr_2_reg_603_pp1_iter51_reg <= output_array_addr_2_reg_603_pp1_iter50_reg;
                output_array_addr_2_reg_603_pp1_iter52_reg <= output_array_addr_2_reg_603_pp1_iter51_reg;
                output_array_addr_2_reg_603_pp1_iter53_reg <= output_array_addr_2_reg_603_pp1_iter52_reg;
                output_array_addr_2_reg_603_pp1_iter54_reg <= output_array_addr_2_reg_603_pp1_iter53_reg;
                output_array_addr_2_reg_603_pp1_iter55_reg <= output_array_addr_2_reg_603_pp1_iter54_reg;
                output_array_addr_2_reg_603_pp1_iter56_reg <= output_array_addr_2_reg_603_pp1_iter55_reg;
                output_array_addr_2_reg_603_pp1_iter57_reg <= output_array_addr_2_reg_603_pp1_iter56_reg;
                output_array_addr_2_reg_603_pp1_iter58_reg <= output_array_addr_2_reg_603_pp1_iter57_reg;
                output_array_addr_2_reg_603_pp1_iter5_reg <= output_array_addr_2_reg_603_pp1_iter4_reg;
                output_array_addr_2_reg_603_pp1_iter6_reg <= output_array_addr_2_reg_603_pp1_iter5_reg;
                output_array_addr_2_reg_603_pp1_iter7_reg <= output_array_addr_2_reg_603_pp1_iter6_reg;
                output_array_addr_2_reg_603_pp1_iter8_reg <= output_array_addr_2_reg_603_pp1_iter7_reg;
                output_array_addr_2_reg_603_pp1_iter9_reg <= output_array_addr_2_reg_603_pp1_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_309_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                icmp_reg_490 <= icmp_fu_332_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state79)) then
                innerdim_reg_584 <= kernel_shape_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                j_reg_512 <= j_fu_352_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state78)) then
                outcols_reg_573 <= kernel_shape_q0;
                outrows1_reg_567 <= outrows1_fu_408_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_424_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                output_array_addr_2_reg_603 <= i1_cast_fu_419_p1(14 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_fu_347_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                output_array_addr_5_reg_522 <= tmp_i_cast_fu_368_p1(14 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond8_fu_383_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                output_array_addr_reg_551 <= i3_cast_fu_378_p1(14 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                output_array_load_5_reg_537 <= output_array_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) or ((exitcond_reg_594_pp1_iter27_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter28 = ap_const_logic_1)) or ((exitcond8_reg_542_pp0_iter27_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_292 <= grp_fu_277_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((exitcond_reg_594_pp1_iter18_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter19 = ap_const_logic_1)) or ((exitcond8_reg_542_pp0_iter18_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_298 <= grp_fu_287_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((exitcond_reg_594_pp1_iter57_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter58 = ap_const_logic_1)) or ((exitcond8_reg_542_pp0_iter57_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter58 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_303 <= grp_fu_282_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (tmp_fu_309_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_29_reg_485 <= tmp_29_fu_315_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state84)) then
                tmp_31_reg_589 <= grp_fu_415_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond8_reg_542 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_37_neg_reg_557 <= tmp_37_neg_fu_398_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_594 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                tmp_42_neg_reg_609 <= tmp_42_neg_fu_439_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter58, ap_enable_reg_pp1_iter58, tmp_fu_309_p2, tmp_i_fu_338_p2, ap_CS_fsm_state3, ap_CS_fsm_state4, exitcond_i_fu_347_p2, exitcond8_fu_383_p2, ap_enable_reg_pp0_iter0, exitcond_fu_424_p2, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter59, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter59, grp_k2c_dot_3_fu_236_ap_done, grp_k2c_affine_matmul_fu_261_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state80)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((tmp_fu_309_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state78;
                elsif (((ap_start = ap_const_logic_1) and (tmp_fu_309_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_k2c_dot_3_fu_236_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((tmp_i_fu_338_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((exitcond_i_fu_347_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond8_fu_383_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter58 = ap_const_logic_0) and (ap_enable_reg_pp0_iter59 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter58 = ap_const_logic_0) and (ap_enable_reg_pp0_iter59 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond8_fu_383_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state77;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state145;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                if (((grp_k2c_affine_matmul_fu_261_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then
                    ap_NS_fsm <= ap_ST_fsm_state81;
                else
                    ap_NS_fsm <= ap_ST_fsm_state80;
                end if;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (exitcond_fu_424_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter58 = ap_const_logic_0) and (ap_enable_reg_pp1_iter59 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter58 = ap_const_logic_0) and (ap_enable_reg_pp1_iter59 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (exitcond_fu_424_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state145;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state145 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(16);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(25);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state145 <= ap_CS_fsm(26);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state78 <= ap_CS_fsm(18);
    ap_CS_fsm_state79 <= ap_CS_fsm(19);
    ap_CS_fsm_state80 <= ap_CS_fsm(20);
    ap_CS_fsm_state81 <= ap_CS_fsm(21);
    ap_CS_fsm_state82 <= ap_CS_fsm(22);
    ap_CS_fsm_state83 <= ap_CS_fsm(23);
    ap_CS_fsm_state84 <= ap_CS_fsm(24);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state100_pp1_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state101_pp1_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state102_pp1_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state103_pp1_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state104_pp1_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state105_pp1_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state106_pp1_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state107_pp1_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state108_pp1_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state109_pp1_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state110_pp1_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state111_pp1_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state112_pp1_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state113_pp1_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state114_pp1_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state115_pp1_stage0_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state116_pp1_stage0_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state117_pp1_stage0_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state118_pp1_stage0_iter33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state119_pp1_stage0_iter34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state120_pp1_stage0_iter35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state121_pp1_stage0_iter36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state122_pp1_stage0_iter37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state123_pp1_stage0_iter38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state124_pp1_stage0_iter39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state125_pp1_stage0_iter40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state126_pp1_stage0_iter41 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state127_pp1_stage0_iter42 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state128_pp1_stage0_iter43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state129_pp1_stage0_iter44 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state130_pp1_stage0_iter45 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state131_pp1_stage0_iter46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state132_pp1_stage0_iter47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state133_pp1_stage0_iter48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state134_pp1_stage0_iter49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state135_pp1_stage0_iter50 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state136_pp1_stage0_iter51 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state137_pp1_stage0_iter52 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state138_pp1_stage0_iter53 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state139_pp1_stage0_iter54 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state140_pp1_stage0_iter55 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state141_pp1_stage0_iter56 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state142_pp1_stage0_iter57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state143_pp1_stage0_iter58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state144_pp1_stage0_iter59 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage0_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage0_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage0_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage0_iter33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage0_iter34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage0_iter35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage0_iter36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage0_iter37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage0_iter38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage0_iter39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage0_iter40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage0_iter41 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage0_iter42 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage0_iter43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp0_stage0_iter44 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp0_stage0_iter45 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp0_stage0_iter46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp0_stage0_iter47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp0_stage0_iter48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp0_stage0_iter49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp0_stage0_iter50 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp0_stage0_iter51 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp0_stage0_iter52 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp0_stage0_iter53 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp0_stage0_iter54 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state72_pp0_stage0_iter55 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state73_pp0_stage0_iter56 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state74_pp0_stage0_iter57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state75_pp0_stage0_iter58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state76_pp0_stage0_iter59 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state85_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state86_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state87_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state88_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state89_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state90_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state91_pp1_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state92_pp1_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state93_pp1_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state94_pp1_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state95_pp1_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state96_pp1_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state97_pp1_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state98_pp1_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state99_pp1_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state17_assign_proc : process(exitcond8_fu_383_p2)
    begin
        if ((exitcond8_fu_383_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state17 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state85_assign_proc : process(exitcond_fu_424_p2)
    begin
        if ((exitcond_fu_424_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state85 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state85 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state145)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state145) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter58, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, ap_enable_reg_pp0_iter32, ap_enable_reg_pp0_iter33, ap_enable_reg_pp0_iter34, ap_enable_reg_pp0_iter35, ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter37, ap_enable_reg_pp0_iter38, ap_enable_reg_pp0_iter39, ap_enable_reg_pp0_iter40, ap_enable_reg_pp0_iter41, ap_enable_reg_pp0_iter42, ap_enable_reg_pp0_iter43, ap_enable_reg_pp0_iter44, ap_enable_reg_pp0_iter45, ap_enable_reg_pp0_iter46, ap_enable_reg_pp0_iter47, ap_enable_reg_pp0_iter48, ap_enable_reg_pp0_iter49, ap_enable_reg_pp0_iter50, ap_enable_reg_pp0_iter51, ap_enable_reg_pp0_iter52, ap_enable_reg_pp0_iter53, ap_enable_reg_pp0_iter54, ap_enable_reg_pp0_iter55, ap_enable_reg_pp0_iter56, ap_enable_reg_pp0_iter57, ap_enable_reg_pp0_iter59)
    begin
        if (((ap_enable_reg_pp0_iter59 = ap_const_logic_0) and (ap_enable_reg_pp0_iter57 = ap_const_logic_0) and (ap_enable_reg_pp0_iter56 = ap_const_logic_0) and (ap_enable_reg_pp0_iter55 = ap_const_logic_0) and (ap_enable_reg_pp0_iter54 = ap_const_logic_0) and (ap_enable_reg_pp0_iter53 = ap_const_logic_0) and (ap_enable_reg_pp0_iter52 = ap_const_logic_0) and (ap_enable_reg_pp0_iter51 = ap_const_logic_0) and (ap_enable_reg_pp0_iter50 = ap_const_logic_0) and (ap_enable_reg_pp0_iter49 = ap_const_logic_0) and (ap_enable_reg_pp0_iter48 = ap_const_logic_0) and (ap_enable_reg_pp0_iter47 = ap_const_logic_0) and (ap_enable_reg_pp0_iter46 = ap_const_logic_0) and (ap_enable_reg_pp0_iter45 = ap_const_logic_0) and (ap_enable_reg_pp0_iter44 = ap_const_logic_0) and (ap_enable_reg_pp0_iter43 = ap_const_logic_0) and (ap_enable_reg_pp0_iter42 = ap_const_logic_0) and (ap_enable_reg_pp0_iter41 = ap_const_logic_0) and (ap_enable_reg_pp0_iter40 = ap_const_logic_0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_0) and (ap_enable_reg_pp0_iter38 = ap_const_logic_0) and (ap_enable_reg_pp0_iter37 = ap_const_logic_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_0) and (ap_enable_reg_pp0_iter35 = ap_const_logic_0) and (ap_enable_reg_pp0_iter34 = ap_const_logic_0) and (ap_enable_reg_pp0_iter33 = ap_const_logic_0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter58 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter28, ap_enable_reg_pp1_iter19, ap_enable_reg_pp1_iter58, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter7, ap_enable_reg_pp1_iter8, ap_enable_reg_pp1_iter9, ap_enable_reg_pp1_iter10, ap_enable_reg_pp1_iter11, ap_enable_reg_pp1_iter12, ap_enable_reg_pp1_iter13, ap_enable_reg_pp1_iter14, ap_enable_reg_pp1_iter15, ap_enable_reg_pp1_iter16, ap_enable_reg_pp1_iter17, ap_enable_reg_pp1_iter18, ap_enable_reg_pp1_iter20, ap_enable_reg_pp1_iter21, ap_enable_reg_pp1_iter22, ap_enable_reg_pp1_iter23, ap_enable_reg_pp1_iter24, ap_enable_reg_pp1_iter25, ap_enable_reg_pp1_iter26, ap_enable_reg_pp1_iter27, ap_enable_reg_pp1_iter29, ap_enable_reg_pp1_iter30, ap_enable_reg_pp1_iter31, ap_enable_reg_pp1_iter32, ap_enable_reg_pp1_iter33, ap_enable_reg_pp1_iter34, ap_enable_reg_pp1_iter35, ap_enable_reg_pp1_iter36, ap_enable_reg_pp1_iter37, ap_enable_reg_pp1_iter38, ap_enable_reg_pp1_iter39, ap_enable_reg_pp1_iter40, ap_enable_reg_pp1_iter41, ap_enable_reg_pp1_iter42, ap_enable_reg_pp1_iter43, ap_enable_reg_pp1_iter44, ap_enable_reg_pp1_iter45, ap_enable_reg_pp1_iter46, ap_enable_reg_pp1_iter47, ap_enable_reg_pp1_iter48, ap_enable_reg_pp1_iter49, ap_enable_reg_pp1_iter50, ap_enable_reg_pp1_iter51, ap_enable_reg_pp1_iter52, ap_enable_reg_pp1_iter53, ap_enable_reg_pp1_iter54, ap_enable_reg_pp1_iter55, ap_enable_reg_pp1_iter56, ap_enable_reg_pp1_iter57, ap_enable_reg_pp1_iter59)
    begin
        if (((ap_enable_reg_pp1_iter59 = ap_const_logic_0) and (ap_enable_reg_pp1_iter57 = ap_const_logic_0) and (ap_enable_reg_pp1_iter56 = ap_const_logic_0) and (ap_enable_reg_pp1_iter55 = ap_const_logic_0) and (ap_enable_reg_pp1_iter54 = ap_const_logic_0) and (ap_enable_reg_pp1_iter53 = ap_const_logic_0) and (ap_enable_reg_pp1_iter52 = ap_const_logic_0) and (ap_enable_reg_pp1_iter51 = ap_const_logic_0) and (ap_enable_reg_pp1_iter50 = ap_const_logic_0) and (ap_enable_reg_pp1_iter49 = ap_const_logic_0) and (ap_enable_reg_pp1_iter48 = ap_const_logic_0) and (ap_enable_reg_pp1_iter47 = ap_const_logic_0) and (ap_enable_reg_pp1_iter46 = ap_const_logic_0) and (ap_enable_reg_pp1_iter45 = ap_const_logic_0) and (ap_enable_reg_pp1_iter44 = ap_const_logic_0) and (ap_enable_reg_pp1_iter43 = ap_const_logic_0) and (ap_enable_reg_pp1_iter42 = ap_const_logic_0) and (ap_enable_reg_pp1_iter41 = ap_const_logic_0) and (ap_enable_reg_pp1_iter40 = ap_const_logic_0) and (ap_enable_reg_pp1_iter39 = ap_const_logic_0) and (ap_enable_reg_pp1_iter38 = ap_const_logic_0) and (ap_enable_reg_pp1_iter37 = ap_const_logic_0) and (ap_enable_reg_pp1_iter36 = ap_const_logic_0) and (ap_enable_reg_pp1_iter35 = ap_const_logic_0) and (ap_enable_reg_pp1_iter34 = ap_const_logic_0) and (ap_enable_reg_pp1_iter33 = ap_const_logic_0) and (ap_enable_reg_pp1_iter32 = ap_const_logic_0) and (ap_enable_reg_pp1_iter31 = ap_const_logic_0) and (ap_enable_reg_pp1_iter30 = ap_const_logic_0) and (ap_enable_reg_pp1_iter29 = ap_const_logic_0) and (ap_enable_reg_pp1_iter27 = ap_const_logic_0) and (ap_enable_reg_pp1_iter26 = ap_const_logic_0) and (ap_enable_reg_pp1_iter25 = ap_const_logic_0) and (ap_enable_reg_pp1_iter24 = ap_const_logic_0) and (ap_enable_reg_pp1_iter23 = ap_const_logic_0) and (ap_enable_reg_pp1_iter22 = ap_const_logic_0) and (ap_enable_reg_pp1_iter21 = ap_const_logic_0) and (ap_enable_reg_pp1_iter20 = ap_const_logic_0) and (ap_enable_reg_pp1_iter18 = ap_const_logic_0) and (ap_enable_reg_pp1_iter17 = ap_const_logic_0) and (ap_enable_reg_pp1_iter16 = ap_const_logic_0) and (ap_enable_reg_pp1_iter15 = ap_const_logic_0) and (ap_enable_reg_pp1_iter14 = ap_const_logic_0) and (ap_enable_reg_pp1_iter13 = ap_const_logic_0) and (ap_enable_reg_pp1_iter12 = ap_const_logic_0) and (ap_enable_reg_pp1_iter11 = ap_const_logic_0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_0) and (ap_enable_reg_pp1_iter9 = ap_const_logic_0) and (ap_enable_reg_pp1_iter8 = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter58 = ap_const_logic_0) and (ap_enable_reg_pp1_iter19 = ap_const_logic_0) and (ap_enable_reg_pp1_iter28 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state145)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state145)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    bias_array_address0_assign_proc : process(ap_CS_fsm_state4, grp_k2c_affine_matmul_fu_261_d_address0, j_i_reg_202, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            bias_array_address0 <= j_i_reg_202(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            bias_array_address0 <= grp_k2c_affine_matmul_fu_261_d_address0;
        else 
            bias_array_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    bias_array_ce0_assign_proc : process(ap_CS_fsm_state4, grp_k2c_affine_matmul_fu_261_d_ce0, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            bias_array_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            bias_array_ce0 <= grp_k2c_affine_matmul_fu_261_d_ce0;
        else 
            bias_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond8_fu_383_p2 <= "1" when (i3_cast_fu_378_p1 = output_numel_read) else "0";
    exitcond_fu_424_p2 <= "1" when (i1_cast_fu_419_p1 = tmp_31_reg_589) else "0";
    exitcond_i_fu_347_p2 <= "1" when (j_i_reg_202 = bias_numel_read) else "0";
    fwork_address0 <= grp_k2c_dot_3_fu_236_fwork_address0;
    fwork_address1 <= grp_k2c_dot_3_fu_236_fwork_address1;
    fwork_ce0 <= grp_k2c_dot_3_fu_236_fwork_ce0;
    fwork_ce1 <= grp_k2c_dot_3_fu_236_fwork_ce1;
    fwork_d0 <= grp_k2c_dot_3_fu_236_fwork_d0;
    fwork_we0 <= grp_k2c_dot_3_fu_236_fwork_we0;

    grp_fu_277_p0_assign_proc : process(reg_298, output_array_load_5_reg_537, ap_enable_reg_pp0_iter20, ap_enable_reg_pp1_iter20, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_state7)
    begin
        if ((((ap_enable_reg_pp1_iter20 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0)) or ((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            grp_fu_277_p0 <= reg_298;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_277_p0 <= output_array_load_5_reg_537;
        else 
            grp_fu_277_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_277_p1_assign_proc : process(bias_array_load_reg_532, ap_enable_reg_pp0_iter20, ap_enable_reg_pp1_iter20, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_state7)
    begin
        if ((((ap_enable_reg_pp1_iter20 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0)) or ((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            grp_fu_277_p1 <= ap_const_lv32_3F800000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_277_p1 <= bias_array_load_reg_532;
        else 
            grp_fu_277_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_287_p1_assign_proc : process(tmp_35_fu_404_p1, tmp_32_fu_445_p1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0, ap_block_pp1_stage0)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            grp_fu_287_p1 <= tmp_32_fu_445_p1;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_287_p1 <= tmp_35_fu_404_p1;
        else 
            grp_fu_287_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_415_ce_assign_proc : process(ap_CS_fsm_state79, ap_CS_fsm_state84, grp_k2c_affine_matmul_fu_261_ap_done, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81) or ((grp_k2c_affine_matmul_fu_261_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state80)))) then 
            grp_fu_415_ce <= ap_const_logic_1;
        else 
            grp_fu_415_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_k2c_affine_matmul_fu_261_ap_start <= grp_k2c_affine_matmul_fu_261_ap_start_reg;
    grp_k2c_dot_3_fu_236_ap_start <= grp_k2c_dot_3_fu_236_ap_start_reg;
    i1_cast_fu_419_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i1_reg_225),64));
    i3_cast_fu_378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i3_reg_214),64));
    i_70_fu_429_p2 <= std_logic_vector(unsigned(i1_reg_225) + unsigned(ap_const_lv14_1));
    i_71_fu_373_p2 <= std_logic_vector(unsigned(i_i_reg_190) + unsigned(bias_numel_read));
    i_fu_388_p2 <= std_logic_vector(unsigned(i3_reg_214) + unsigned(ap_const_lv14_1));
    icmp_fu_332_p2 <= "0" when (tmp_80_fu_322_p4 = ap_const_lv63_0) else "1";

    input_array_address0_assign_proc : process(grp_k2c_dot_3_fu_236_A_array_address0, grp_k2c_affine_matmul_fu_261_A_address0, ap_CS_fsm_state2, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            input_array_address0 <= grp_k2c_affine_matmul_fu_261_A_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_array_address0 <= grp_k2c_dot_3_fu_236_A_array_address0;
        else 
            input_array_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    input_array_ce0_assign_proc : process(grp_k2c_dot_3_fu_236_A_array_ce0, grp_k2c_affine_matmul_fu_261_A_ce0, ap_CS_fsm_state2, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            input_array_ce0 <= grp_k2c_affine_matmul_fu_261_A_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_array_ce0 <= grp_k2c_dot_3_fu_236_A_array_ce0;
        else 
            input_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_shape_address0_assign_proc : process(ap_CS_fsm_state1, tmp_fu_309_p2, grp_k2c_dot_3_fu_236_A_shape_address0, ap_CS_fsm_state2)
    begin
        if (((tmp_fu_309_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            input_shape_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_shape_address0 <= grp_k2c_dot_3_fu_236_A_shape_address0;
        else 
            input_shape_address0 <= "XXX";
        end if; 
    end process;


    input_shape_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_fu_309_p2, grp_k2c_dot_3_fu_236_A_shape_ce0, ap_CS_fsm_state2)
    begin
        if (((tmp_fu_309_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            input_shape_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_shape_ce0 <= grp_k2c_dot_3_fu_236_A_shape_ce0;
        else 
            input_shape_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    j_fu_352_p2 <= std_logic_vector(unsigned(ap_const_lv64_1) + unsigned(j_i_reg_202));

    kernel_array_address0_assign_proc : process(grp_k2c_dot_3_fu_236_B_array_address0, grp_k2c_affine_matmul_fu_261_B_address0, ap_CS_fsm_state2, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            kernel_array_address0 <= grp_k2c_affine_matmul_fu_261_B_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_array_address0 <= grp_k2c_dot_3_fu_236_B_array_address0;
        else 
            kernel_array_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    kernel_array_ce0_assign_proc : process(grp_k2c_dot_3_fu_236_B_array_ce0, grp_k2c_affine_matmul_fu_261_B_ce0, ap_CS_fsm_state2, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            kernel_array_ce0 <= grp_k2c_affine_matmul_fu_261_B_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_array_ce0 <= grp_k2c_dot_3_fu_236_B_array_ce0;
        else 
            kernel_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_shape_address0_assign_proc : process(ap_CS_fsm_state1, tmp_fu_309_p2, ap_CS_fsm_state78, grp_k2c_dot_3_fu_236_B_shape_address0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            kernel_shape_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif (((tmp_fu_309_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            kernel_shape_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_shape_address0 <= grp_k2c_dot_3_fu_236_B_shape_address0;
        else 
            kernel_shape_address0 <= "XXX";
        end if; 
    end process;


    kernel_shape_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_fu_309_p2, ap_CS_fsm_state78, grp_k2c_dot_3_fu_236_B_shape_ce0, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state78) or ((tmp_fu_309_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            kernel_shape_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_shape_ce0 <= grp_k2c_dot_3_fu_236_B_shape_ce0;
        else 
            kernel_shape_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_array_address0_assign_proc : process(output_array_addr_5_reg_522, ap_CS_fsm_state5, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, output_array_addr_2_reg_603_pp1_iter58_reg, ap_enable_reg_pp1_iter59, grp_k2c_dot_3_fu_236_C_array_address0, grp_k2c_affine_matmul_fu_261_C_address0, ap_CS_fsm_state2, ap_CS_fsm_state16, ap_CS_fsm_state80, i3_cast_fu_378_p1, ap_block_pp0_stage0, ap_block_pp1_stage0)
    begin
        if (((ap_enable_reg_pp1_iter59 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            output_array_address0 <= output_array_addr_2_reg_603_pp1_iter58_reg;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            output_array_address0 <= i3_cast_fu_378_p1(14 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            output_array_address0 <= output_array_addr_5_reg_522;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            output_array_address0 <= grp_k2c_affine_matmul_fu_261_C_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            output_array_address0 <= grp_k2c_dot_3_fu_236_C_array_address0;
        else 
            output_array_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    output_array_address1_assign_proc : process(output_array_addr_reg_551_pp0_iter58_reg, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter59, ap_block_pp0_stage0, i1_cast_fu_419_p1, ap_block_pp1_stage0)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            output_array_address1 <= i1_cast_fu_419_p1(14 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter59 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            output_array_address1 <= output_array_addr_reg_551_pp0_iter58_reg;
        else 
            output_array_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    output_array_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_CS_fsm_state5, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter59, grp_k2c_dot_3_fu_236_C_array_ce0, grp_k2c_affine_matmul_fu_261_C_ce0, ap_CS_fsm_state2, ap_CS_fsm_state16, ap_CS_fsm_state80)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter59 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            output_array_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            output_array_ce0 <= grp_k2c_affine_matmul_fu_261_C_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            output_array_ce0 <= grp_k2c_dot_3_fu_236_C_array_ce0;
        else 
            output_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_array_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter59 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            output_array_ce1 <= ap_const_logic_1;
        else 
            output_array_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_array_d0_assign_proc : process(reg_292, reg_303, ap_enable_reg_pp1_iter59, grp_k2c_dot_3_fu_236_C_array_d0, grp_k2c_affine_matmul_fu_261_C_d0, ap_CS_fsm_state2, ap_CS_fsm_state16, ap_CS_fsm_state80, ap_block_pp1_stage0)
    begin
        if (((ap_enable_reg_pp1_iter59 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            output_array_d0 <= reg_303;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            output_array_d0 <= reg_292;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            output_array_d0 <= grp_k2c_affine_matmul_fu_261_C_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            output_array_d0 <= grp_k2c_dot_3_fu_236_C_array_d0;
        else 
            output_array_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_array_d1 <= reg_303;

    output_array_we0_assign_proc : process(ap_block_pp1_stage0_11001, exitcond_reg_594_pp1_iter58_reg, ap_enable_reg_pp1_iter59, grp_k2c_dot_3_fu_236_C_array_we0, grp_k2c_affine_matmul_fu_261_C_we0, ap_CS_fsm_state2, ap_CS_fsm_state16, ap_CS_fsm_state80)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or ((exitcond_reg_594_pp1_iter58_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter59 = ap_const_logic_1)))) then 
            output_array_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            output_array_we0 <= grp_k2c_affine_matmul_fu_261_C_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            output_array_we0 <= grp_k2c_dot_3_fu_236_C_array_we0;
        else 
            output_array_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_array_we1_assign_proc : process(ap_block_pp0_stage0_11001, exitcond8_reg_542_pp0_iter58_reg, ap_enable_reg_pp0_iter59)
    begin
        if (((exitcond8_reg_542_pp0_iter58_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter59 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            output_array_we1 <= ap_const_logic_1;
        else 
            output_array_we1 <= ap_const_logic_0;
        end if; 
    end process;

    outrows1_fu_408_p3 <= 
        input_shape_q0 when (icmp_reg_490(0) = '1') else 
        ap_const_lv64_1;
    tmp_29_fu_315_p2 <= std_logic_vector(unsigned(input_ndim_read) + unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF));
    tmp_32_fu_445_p1 <= tmp_42_neg_reg_609;
    tmp_35_fu_404_p1 <= tmp_37_neg_reg_557;
    tmp_37_neg_fu_398_p2 <= (tmp_37_to_int_fu_394_p1 xor ap_const_lv32_80000000);
    tmp_37_to_int_fu_394_p1 <= output_array_q0;
    tmp_42_neg_fu_439_p2 <= (tmp_42_to_int_fu_435_p1 xor ap_const_lv32_80000000);
    tmp_42_to_int_fu_435_p1 <= output_array_q1;
    tmp_80_fu_322_p4 <= input_ndim_read(63 downto 1);
    tmp_81_fu_343_p1 <= j_i_reg_202(15 - 1 downto 0);
    tmp_82_fu_358_p1 <= i_i_reg_190(15 - 1 downto 0);
    tmp_fu_309_p2 <= "1" when (unsigned(input_ndim_read) < unsigned(ap_const_lv64_3)) else "0";
    tmp_i_50_fu_362_p2 <= std_logic_vector(unsigned(tmp_82_fu_358_p1) + unsigned(tmp_81_fu_343_p1));
    tmp_i_cast_fu_368_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i_50_fu_362_p2),64));
    tmp_i_fu_338_p2 <= "1" when (unsigned(i_i_reg_190) < unsigned(output_numel_read)) else "0";
end behav;
