// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module k2c_dense (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        output_array_address0,
        output_array_ce0,
        output_array_we0,
        output_array_d0,
        output_array_q0,
        output_numel_read,
        input_dim,
        input_numel_read,
        kernel_dim,
        fwork_address0,
        fwork_ce0,
        fwork_we0,
        fwork_d0,
        fwork_q0,
        fwork_address1,
        fwork_ce1,
        fwork_q1,
        dense_15_output_arra_address0,
        dense_15_output_arra_ce0,
        dense_15_output_arra_q0
);

parameter    ap_ST_fsm_state1 = 136'd1;
parameter    ap_ST_fsm_state2 = 136'd2;
parameter    ap_ST_fsm_state3 = 136'd4;
parameter    ap_ST_fsm_state4 = 136'd8;
parameter    ap_ST_fsm_state5 = 136'd16;
parameter    ap_ST_fsm_state6 = 136'd32;
parameter    ap_ST_fsm_state7 = 136'd64;
parameter    ap_ST_fsm_state8 = 136'd128;
parameter    ap_ST_fsm_state9 = 136'd256;
parameter    ap_ST_fsm_state10 = 136'd512;
parameter    ap_ST_fsm_state11 = 136'd1024;
parameter    ap_ST_fsm_state12 = 136'd2048;
parameter    ap_ST_fsm_state13 = 136'd4096;
parameter    ap_ST_fsm_state14 = 136'd8192;
parameter    ap_ST_fsm_state15 = 136'd16384;
parameter    ap_ST_fsm_state16 = 136'd32768;
parameter    ap_ST_fsm_state17 = 136'd65536;
parameter    ap_ST_fsm_state18 = 136'd131072;
parameter    ap_ST_fsm_state19 = 136'd262144;
parameter    ap_ST_fsm_state20 = 136'd524288;
parameter    ap_ST_fsm_state21 = 136'd1048576;
parameter    ap_ST_fsm_state22 = 136'd2097152;
parameter    ap_ST_fsm_state23 = 136'd4194304;
parameter    ap_ST_fsm_state24 = 136'd8388608;
parameter    ap_ST_fsm_state25 = 136'd16777216;
parameter    ap_ST_fsm_state26 = 136'd33554432;
parameter    ap_ST_fsm_state27 = 136'd67108864;
parameter    ap_ST_fsm_state28 = 136'd134217728;
parameter    ap_ST_fsm_state29 = 136'd268435456;
parameter    ap_ST_fsm_state30 = 136'd536870912;
parameter    ap_ST_fsm_state31 = 136'd1073741824;
parameter    ap_ST_fsm_state32 = 136'd2147483648;
parameter    ap_ST_fsm_state33 = 136'd4294967296;
parameter    ap_ST_fsm_state34 = 136'd8589934592;
parameter    ap_ST_fsm_state35 = 136'd17179869184;
parameter    ap_ST_fsm_state36 = 136'd34359738368;
parameter    ap_ST_fsm_state37 = 136'd68719476736;
parameter    ap_ST_fsm_state38 = 136'd137438953472;
parameter    ap_ST_fsm_state39 = 136'd274877906944;
parameter    ap_ST_fsm_state40 = 136'd549755813888;
parameter    ap_ST_fsm_state41 = 136'd1099511627776;
parameter    ap_ST_fsm_state42 = 136'd2199023255552;
parameter    ap_ST_fsm_state43 = 136'd4398046511104;
parameter    ap_ST_fsm_state44 = 136'd8796093022208;
parameter    ap_ST_fsm_state45 = 136'd17592186044416;
parameter    ap_ST_fsm_state46 = 136'd35184372088832;
parameter    ap_ST_fsm_state47 = 136'd70368744177664;
parameter    ap_ST_fsm_state48 = 136'd140737488355328;
parameter    ap_ST_fsm_state49 = 136'd281474976710656;
parameter    ap_ST_fsm_state50 = 136'd562949953421312;
parameter    ap_ST_fsm_state51 = 136'd1125899906842624;
parameter    ap_ST_fsm_state52 = 136'd2251799813685248;
parameter    ap_ST_fsm_state53 = 136'd4503599627370496;
parameter    ap_ST_fsm_state54 = 136'd9007199254740992;
parameter    ap_ST_fsm_state55 = 136'd18014398509481984;
parameter    ap_ST_fsm_state56 = 136'd36028797018963968;
parameter    ap_ST_fsm_state57 = 136'd72057594037927936;
parameter    ap_ST_fsm_state58 = 136'd144115188075855872;
parameter    ap_ST_fsm_state59 = 136'd288230376151711744;
parameter    ap_ST_fsm_state60 = 136'd576460752303423488;
parameter    ap_ST_fsm_state61 = 136'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 136'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 136'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 136'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 136'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 136'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 136'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 136'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 136'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 136'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 136'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 136'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 136'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 136'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 136'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 136'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 136'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 136'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 136'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 136'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 136'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 136'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 136'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 136'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 136'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 136'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 136'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 136'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 136'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 136'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 136'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 136'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 136'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 136'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 136'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 136'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 136'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 136'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 136'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 136'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 136'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 136'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 136'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 136'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 136'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 136'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 136'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 136'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 136'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 136'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 136'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 136'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 136'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 136'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 136'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 136'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 136'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 136'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 136'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 136'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 136'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 136'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 136'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 136'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 136'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 136'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 136'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 136'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 136'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 136'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 136'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 136'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 136'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 136'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 136'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 136'd43556142965880123323311949751266331066368;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [0:0] output_array_address0;
output   output_array_ce0;
output   output_array_we0;
output  [31:0] output_array_d0;
input  [31:0] output_array_q0;
input  [63:0] output_numel_read;
input  [63:0] input_dim;
input  [63:0] input_numel_read;
input  [63:0] kernel_dim;
output  [4:0] fwork_address0;
output   fwork_ce0;
output   fwork_we0;
output  [31:0] fwork_d0;
input  [31:0] fwork_q0;
output  [4:0] fwork_address1;
output   fwork_ce1;
input  [31:0] fwork_q1;
output  [3:0] dense_15_output_arra_address0;
output   dense_15_output_arra_ce0;
input  [31:0] dense_15_output_arra_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[0:0] output_array_address0;
reg output_array_ce0;
reg output_array_we0;
reg[31:0] output_array_d0;
reg[3:0] dense_15_output_arra_address0;
reg dense_15_output_arra_ce0;

(* fsm_encoding = "none" *) reg   [135:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [3:0] dense_16_kernel_arra_address0;
reg    dense_16_kernel_arra_ce0;
wire   [31:0] dense_16_kernel_arra_q0;
reg   [63:0] dense_16_kernel_nume;
reg   [63:0] dense_16_bias_numel;
wire   [31:0] grp_fu_201_p2;
reg   [31:0] reg_217;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state105;
wire   [31:0] grp_fu_212_p2;
reg   [31:0] reg_223;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state96;
wire   [31:0] grp_fu_207_p2;
reg   [31:0] reg_228;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state135;
wire   [0:0] tmp_fu_233_p2;
reg   [0:0] tmp_reg_401;
wire   [63:0] tmp_16_fu_239_p2;
reg   [63:0] tmp_16_reg_405;
wire   [4:0] p_s_fu_267_p3;
reg   [4:0] p_s_reg_415;
wire    ap_CS_fsm_state2;
wire    grp_k2c_dot_3_fu_166_ap_idle;
wire    grp_k2c_dot_3_fu_166_ap_ready;
wire    grp_k2c_dot_3_fu_166_ap_done;
wire   [63:0] j_fu_294_p2;
reg   [63:0] j_reg_433;
wire    ap_CS_fsm_state4;
reg   [0:0] output_array_addr_2_reg_438;
wire   [0:0] exitcond_i_fu_289_p2;
wire   [63:0] i_36_fu_315_p2;
reg   [31:0] output_array_load_2_reg_448;
wire    ap_CS_fsm_state5;
reg   [0:0] output_array_addr_reg_456;
wire    ap_CS_fsm_state16;
wire   [0:0] exitcond3_fu_325_p2;
wire   [0:0] i_fu_330_p2;
reg   [0:0] i_reg_461;
wire   [31:0] tmp_24_neg_fu_340_p2;
reg   [31:0] tmp_24_neg_reg_466;
wire    ap_CS_fsm_state17;
wire   [31:0] tmp_21_fu_346_p1;
wire    ap_CS_fsm_state18;
wire   [4:0] i_35_fu_360_p2;
reg   [4:0] i_35_reg_479;
wire    ap_CS_fsm_state77;
reg   [0:0] output_array_addr_1_reg_484;
wire   [0:0] exitcond_fu_355_p2;
wire   [31:0] tmp_29_neg_fu_370_p2;
reg   [31:0] tmp_29_neg_reg_489;
wire    ap_CS_fsm_state78;
wire   [31:0] tmp_17_fu_376_p1;
wire    ap_CS_fsm_state79;
wire    grp_k2c_dot_3_fu_166_ap_start;
wire   [0:0] grp_k2c_dot_3_fu_166_C_array_address0;
wire    grp_k2c_dot_3_fu_166_C_array_ce0;
wire    grp_k2c_dot_3_fu_166_C_array_we0;
wire   [31:0] grp_k2c_dot_3_fu_166_C_array_d0;
wire   [3:0] grp_k2c_dot_3_fu_166_A_array_address0;
wire    grp_k2c_dot_3_fu_166_A_array_ce0;
wire   [4:0] grp_k2c_dot_3_fu_166_fwork_address0;
wire    grp_k2c_dot_3_fu_166_fwork_ce0;
wire    grp_k2c_dot_3_fu_166_fwork_we0;
wire   [31:0] grp_k2c_dot_3_fu_166_fwork_d0;
wire   [4:0] grp_k2c_dot_3_fu_166_fwork_address1;
wire    grp_k2c_dot_3_fu_166_fwork_ce1;
wire    grp_k2c_affine_matmul_3_fu_190_ap_start;
wire    grp_k2c_affine_matmul_3_fu_190_ap_done;
wire    grp_k2c_affine_matmul_3_fu_190_ap_idle;
wire    grp_k2c_affine_matmul_3_fu_190_ap_ready;
wire   [0:0] grp_k2c_affine_matmul_3_fu_190_C_address0;
wire    grp_k2c_affine_matmul_3_fu_190_C_ce0;
wire    grp_k2c_affine_matmul_3_fu_190_C_we0;
wire   [31:0] grp_k2c_affine_matmul_3_fu_190_C_d0;
wire   [3:0] grp_k2c_affine_matmul_3_fu_190_A_address0;
wire    grp_k2c_affine_matmul_3_fu_190_A_ce0;
wire   [3:0] grp_k2c_affine_matmul_3_fu_190_B_address0;
wire    grp_k2c_affine_matmul_3_fu_190_B_ce0;
reg   [63:0] i_i_reg_121;
reg   [63:0] j_i_reg_133;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_i_fu_280_p2;
reg   [0:0] i_3_reg_144;
wire    ap_CS_fsm_state75;
reg   [4:0] i_1_reg_155;
wire    ap_CS_fsm_state136;
wire    ap_CS_fsm_state76;
reg    grp_k2c_dot_3_fu_166_ap_start_reg;
reg    grp_k2c_affine_matmul_3_fu_190_ap_start_reg;
wire   [63:0] sum_i_cast_fu_310_p1;
wire   [63:0] i_3_cast_fu_320_p1;
wire   [63:0] i_1_cast1_fu_350_p1;
reg   [31:0] grp_fu_201_p0;
reg   [31:0] grp_fu_201_p1;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state97;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state106;
reg   [31:0] grp_fu_212_p1;
wire   [62:0] tmp_66_fu_251_p4;
wire   [0:0] icmp_fu_261_p2;
wire   [1:0] tmp_68_fu_300_p1;
wire   [1:0] tmp_67_fu_285_p1;
wire   [1:0] sum_i_fu_304_p2;
wire   [31:0] tmp_24_to_int_fu_336_p1;
wire   [31:0] tmp_29_to_int_fu_366_p1;
reg   [135:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 136'd1;
#0 dense_16_kernel_nume = 64'd16;
#0 dense_16_bias_numel = 64'd1;
#0 grp_k2c_dot_3_fu_166_ap_start_reg = 1'b0;
#0 grp_k2c_affine_matmul_3_fu_190_ap_start_reg = 1'b0;
end

k2c_dense_dense_1Ngs #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
dense_16_kernel_arra_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_16_kernel_arra_address0),
    .ce0(dense_16_kernel_arra_ce0),
    .q0(dense_16_kernel_arra_q0)
);

k2c_dot_3 grp_k2c_dot_3_fu_166(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_dot_3_fu_166_ap_start),
    .ap_done(grp_k2c_dot_3_fu_166_ap_done),
    .ap_idle(grp_k2c_dot_3_fu_166_ap_idle),
    .ap_ready(grp_k2c_dot_3_fu_166_ap_ready),
    .C_array_address0(grp_k2c_dot_3_fu_166_C_array_address0),
    .C_array_ce0(grp_k2c_dot_3_fu_166_C_array_ce0),
    .C_array_we0(grp_k2c_dot_3_fu_166_C_array_we0),
    .C_array_d0(grp_k2c_dot_3_fu_166_C_array_d0),
    .C_array_q0(output_array_q0),
    .A_array_address0(grp_k2c_dot_3_fu_166_A_array_address0),
    .A_array_ce0(grp_k2c_dot_3_fu_166_A_array_ce0),
    .A_array_q0(dense_15_output_arra_q0),
    .A_dim(input_dim),
    .A_numel_read(input_numel_read),
    .B_dim(kernel_dim),
    .B_numel_read(dense_16_kernel_nume),
    .p_read2(tmp_16_reg_405),
    .fwork_address0(grp_k2c_dot_3_fu_166_fwork_address0),
    .fwork_ce0(grp_k2c_dot_3_fu_166_fwork_ce0),
    .fwork_we0(grp_k2c_dot_3_fu_166_fwork_we0),
    .fwork_d0(grp_k2c_dot_3_fu_166_fwork_d0),
    .fwork_q0(fwork_q0),
    .fwork_address1(grp_k2c_dot_3_fu_166_fwork_address1),
    .fwork_ce1(grp_k2c_dot_3_fu_166_fwork_ce1),
    .fwork_q1(fwork_q1)
);

k2c_affine_matmul_3 grp_k2c_affine_matmul_3_fu_190(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_affine_matmul_3_fu_190_ap_start),
    .ap_done(grp_k2c_affine_matmul_3_fu_190_ap_done),
    .ap_idle(grp_k2c_affine_matmul_3_fu_190_ap_idle),
    .ap_ready(grp_k2c_affine_matmul_3_fu_190_ap_ready),
    .C_address0(grp_k2c_affine_matmul_3_fu_190_C_address0),
    .C_ce0(grp_k2c_affine_matmul_3_fu_190_C_ce0),
    .C_we0(grp_k2c_affine_matmul_3_fu_190_C_we0),
    .C_d0(grp_k2c_affine_matmul_3_fu_190_C_d0),
    .C_q0(output_array_q0),
    .A_address0(grp_k2c_affine_matmul_3_fu_190_A_address0),
    .A_ce0(grp_k2c_affine_matmul_3_fu_190_A_ce0),
    .A_q0(dense_15_output_arra_q0),
    .B_address0(grp_k2c_affine_matmul_3_fu_190_B_address0),
    .B_ce0(grp_k2c_affine_matmul_3_fu_190_B_ce0),
    .B_q0(dense_16_kernel_arra_q0),
    .outrows(p_s_reg_415)
);

sample_fadd_32ns_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample_fadd_32ns_hbi_U158(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_201_p0),
    .din1(grp_fu_201_p1),
    .ce(1'b1),
    .dout(grp_fu_201_p2)
);

sample_fdiv_32ns_OgC #(
    .ID( 1 ),
    .NUM_STAGE( 30 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample_fdiv_32ns_OgC_U159(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd1065353216),
    .din1(reg_217),
    .ce(1'b1),
    .dout(grp_fu_207_p2)
);

sample_fexp_32ns_PgM #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample_fexp_32ns_PgM_U160(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(grp_fu_212_p1),
    .ce(1'b1),
    .dout(grp_fu_212_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_affine_matmul_3_fu_190_ap_start_reg <= 1'b0;
    end else begin
        if (((tmp_fu_233_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_k2c_affine_matmul_3_fu_190_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_affine_matmul_3_fu_190_ap_ready == 1'b1)) begin
            grp_k2c_affine_matmul_3_fu_190_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_dot_3_fu_166_ap_start_reg <= 1'b0;
    end else begin
        if (((tmp_fu_233_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_k2c_dot_3_fu_166_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_dot_3_fu_166_ap_ready == 1'b1)) begin
            grp_k2c_dot_3_fu_166_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_k2c_affine_matmul_3_fu_190_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state76))) begin
        i_1_reg_155 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        i_1_reg_155 <= i_35_reg_479;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_fu_280_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i_3_reg_144 <= 1'd0;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        i_3_reg_144 <= i_reg_461;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_289_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i_i_reg_121 <= i_36_fu_315_p2;
    end else if (((grp_k2c_dot_3_fu_166_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_i_reg_121 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_fu_280_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        j_i_reg_133 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        j_i_reg_133 <= j_reg_433;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        i_35_reg_479 <= i_35_fu_360_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_325_p2 == 1'd0) & (tmp_reg_401 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        i_reg_461 <= i_fu_330_p2;
        output_array_addr_reg_456 <= i_3_cast_fu_320_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        j_reg_433 <= j_fu_294_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_355_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state77))) begin
        output_array_addr_1_reg_484 <= i_1_cast1_fu_350_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_289_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        output_array_addr_2_reg_438 <= sum_i_cast_fu_310_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        output_array_load_2_reg_448 <= output_array_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_233_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_s_reg_415[0] <= p_s_fu_267_p3[0];
p_s_reg_415[4] <= p_s_fu_267_p3[4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state14))) begin
        reg_217 <= grp_fu_201_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state35))) begin
        reg_223 <= grp_fu_212_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state74))) begin
        reg_228 <= grp_fu_207_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_233_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_16_reg_405 <= tmp_16_fu_239_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_24_neg_reg_466 <= tmp_24_neg_fu_340_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        tmp_29_neg_reg_489 <= tmp_29_neg_fu_370_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_reg_401 <= tmp_fu_233_p2;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state16) & ((exitcond3_fu_325_p2 == 1'd1) | (tmp_reg_401 == 1'd1))) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & ((exitcond3_fu_325_p2 == 1'd1) | (tmp_reg_401 == 1'd1)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        dense_15_output_arra_address0 = grp_k2c_affine_matmul_3_fu_190_A_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dense_15_output_arra_address0 = grp_k2c_dot_3_fu_166_A_array_address0;
    end else begin
        dense_15_output_arra_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        dense_15_output_arra_ce0 = grp_k2c_affine_matmul_3_fu_190_A_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dense_15_output_arra_ce0 = grp_k2c_dot_3_fu_166_A_array_ce0;
    end else begin
        dense_15_output_arra_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        dense_16_kernel_arra_address0 = grp_k2c_affine_matmul_3_fu_190_B_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dense_16_kernel_arra_address0 = 4'd0;
    end else begin
        dense_16_kernel_arra_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        dense_16_kernel_arra_ce0 = grp_k2c_affine_matmul_3_fu_190_B_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dense_16_kernel_arra_ce0 = 1'b0;
    end else begin
        dense_16_kernel_arra_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state36))) begin
        grp_fu_201_p0 = reg_223;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_201_p0 = output_array_load_2_reg_448;
    end else begin
        grp_fu_201_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state36))) begin
        grp_fu_201_p1 = 32'd1065353216;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_201_p1 = 32'd3172971855;
    end else begin
        grp_fu_201_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        grp_fu_212_p1 = tmp_17_fu_376_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_212_p1 = tmp_21_fu_346_p1;
    end else begin
        grp_fu_212_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        output_array_address0 = output_array_addr_1_reg_484;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        output_array_address0 = i_1_cast1_fu_350_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        output_array_address0 = output_array_addr_reg_456;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        output_array_address0 = i_3_cast_fu_320_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        output_array_address0 = output_array_addr_2_reg_438;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        output_array_address0 = sum_i_cast_fu_310_p1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        output_array_address0 = grp_k2c_affine_matmul_3_fu_190_C_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_array_address0 = grp_k2c_dot_3_fu_166_C_array_address0;
    end else begin
        output_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state4))) begin
        output_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        output_array_ce0 = grp_k2c_affine_matmul_3_fu_190_C_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_array_ce0 = grp_k2c_dot_3_fu_166_C_array_ce0;
    end else begin
        output_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state75))) begin
        output_array_d0 = reg_228;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        output_array_d0 = reg_217;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        output_array_d0 = grp_k2c_affine_matmul_3_fu_190_C_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_array_d0 = grp_k2c_dot_3_fu_166_C_array_d0;
    end else begin
        output_array_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state15))) begin
        output_array_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        output_array_we0 = grp_k2c_affine_matmul_3_fu_190_C_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_array_we0 = grp_k2c_dot_3_fu_166_C_array_we0;
    end else begin
        output_array_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((tmp_fu_233_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else if (((tmp_fu_233_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_k2c_dot_3_fu_166_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((tmp_i_fu_280_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((exitcond_i_fu_289_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & ((exitcond3_fu_325_p2 == 1'd1) | (tmp_reg_401 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state76 : begin
            if (((grp_k2c_affine_matmul_3_fu_190_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state76))) begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end
        end
        ap_ST_fsm_state77 : begin
            if (((exitcond_fu_355_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state77))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state135 = ap_CS_fsm[32'd134];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd135];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign exitcond3_fu_325_p2 = ((i_3_cast_fu_320_p1 == output_numel_read) ? 1'b1 : 1'b0);

assign exitcond_fu_355_p2 = ((i_1_reg_155 == p_s_reg_415) ? 1'b1 : 1'b0);

assign exitcond_i_fu_289_p2 = ((j_i_reg_133 == dense_16_bias_numel) ? 1'b1 : 1'b0);

assign fwork_address0 = grp_k2c_dot_3_fu_166_fwork_address0;

assign fwork_address1 = grp_k2c_dot_3_fu_166_fwork_address1;

assign fwork_ce0 = grp_k2c_dot_3_fu_166_fwork_ce0;

assign fwork_ce1 = grp_k2c_dot_3_fu_166_fwork_ce1;

assign fwork_d0 = grp_k2c_dot_3_fu_166_fwork_d0;

assign fwork_we0 = grp_k2c_dot_3_fu_166_fwork_we0;

assign grp_k2c_affine_matmul_3_fu_190_ap_start = grp_k2c_affine_matmul_3_fu_190_ap_start_reg;

assign grp_k2c_dot_3_fu_166_ap_start = grp_k2c_dot_3_fu_166_ap_start_reg;

assign i_1_cast1_fu_350_p1 = i_1_reg_155;

assign i_35_fu_360_p2 = (i_1_reg_155 + 5'd1);

assign i_36_fu_315_p2 = (dense_16_bias_numel + i_i_reg_121);

assign i_3_cast_fu_320_p1 = i_3_reg_144;

assign i_fu_330_p2 = (i_3_reg_144 ^ 1'd1);

assign icmp_fu_261_p2 = ((tmp_66_fu_251_p4 != 63'd0) ? 1'b1 : 1'b0);

assign j_fu_294_p2 = (64'd1 + j_i_reg_133);

assign p_s_fu_267_p3 = ((icmp_fu_261_p2[0:0] === 1'b1) ? 5'd16 : 5'd1);

assign sum_i_cast_fu_310_p1 = sum_i_fu_304_p2;

assign sum_i_fu_304_p2 = (tmp_68_fu_300_p1 + tmp_67_fu_285_p1);

assign tmp_16_fu_239_p2 = ($signed(input_dim) + $signed(64'd18446744073709551615));

assign tmp_17_fu_376_p1 = tmp_29_neg_reg_489;

assign tmp_21_fu_346_p1 = tmp_24_neg_reg_466;

assign tmp_24_neg_fu_340_p2 = (tmp_24_to_int_fu_336_p1 ^ 32'd2147483648);

assign tmp_24_to_int_fu_336_p1 = output_array_q0;

assign tmp_29_neg_fu_370_p2 = (tmp_29_to_int_fu_366_p1 ^ 32'd2147483648);

assign tmp_29_to_int_fu_366_p1 = output_array_q0;

assign tmp_66_fu_251_p4 = {{input_dim[63:1]}};

assign tmp_67_fu_285_p1 = j_i_reg_133[1:0];

assign tmp_68_fu_300_p1 = i_i_reg_121[1:0];

assign tmp_fu_233_p2 = ((input_dim < 64'd3) ? 1'b1 : 1'b0);

assign tmp_i_fu_280_p2 = ((i_i_reg_121 < output_numel_read) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    p_s_reg_415[3:1] <= 3'b000;
end

endmodule //k2c_dense
