

================================================================
== Vivado HLS Report for 'k2c_sub2idx'
================================================================
* Date:           Wed Apr 24 12:32:21 2024

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        Group_5
* Solution:       Resource_optimized
* Product family: artix7
* Target device:  xc7a200tfbg676-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.609|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |             |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1     |    ?|    ?|         ?|          -|          -|     ?|    no    |
        | + Loop 1.1  |    ?|    ?|         4|          -|          -|     ?|    no    |
        | + Loop 1.2  |    ?|    ?|         4|          -|          -|     ?|    no    |
        +-------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 13
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond)
	13  / (exitcond)
3 --> 
	4  / true
4 --> 
	5  / (tmp)
	8  / (!tmp & !exitcond_1)
	13  / (!tmp & exitcond_1)
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	4  / true
8 --> 
	9  / true
9 --> 
	10  / (tmp_1)
	2  / (!tmp_1)
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	9  / true
13 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.35>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%ndim_read = call i64 @_ssdm_op_Read.ap_auto.i64(i64 %ndim)"   --->   Operation 14 'read' 'ndim_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (1.35ns)   --->   "br label %1" [Group_5/sample.c:1574]   --->   Operation 15 'br' <Predicate = true> <Delay = 1.35>

State 2 <SV = 1> <Delay = 3.69>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%idx = phi i64 [ 0, %0 ], [ %idx_1_1, %6 ]" [Group_5/sample.c:1580]   --->   Operation 16 'phi' 'idx' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%i = phi i64 [ 0, %0 ], [ %i_1_1, %6 ]" [Group_5/sample.c:1574]   --->   Operation 17 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (2.34ns)   --->   "%exitcond = icmp eq i64 %i, %ndim_read" [Group_5/sample.c:1574]   --->   Operation 18 'icmp' 'exitcond' <Predicate = true> <Delay = 2.34> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (1.35ns)   --->   "br i1 %exitcond, label %10, label %4" [Group_5/sample.c:1574]   --->   Operation 19 'br' <Predicate = true> <Delay = 1.35>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%sub_addr = getelementptr [5 x i64]* %sub, i64 0, i64 %i" [Group_5/sample.c:1576]   --->   Operation 20 'getelementptr' 'sub_addr' <Predicate = (!exitcond)> <Delay = 0.00>
ST_2 : Operation 21 [2/2] (1.75ns)   --->   "%sub_load = load i64* %sub_addr, align 8" [Group_5/sample.c:1576]   --->   Operation 21 'load' 'sub_load' <Predicate = (!exitcond)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 5> <RAM>

State 3 <SV = 2> <Delay = 1.75>
ST_3 : Operation 22 [1/2] (1.75ns)   --->   "%sub_load = load i64* %sub_addr, align 8" [Group_5/sample.c:1576]   --->   Operation 22 'load' 'sub_load' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 5> <RAM>
ST_3 : Operation 23 [1/1] (1.35ns)   --->   "br label %3" [Group_5/sample.c:1577]   --->   Operation 23 'br' <Predicate = true> <Delay = 1.35>

State 4 <SV = 3> <Delay = 5.33>
ST_4 : Operation 24 [1/1] (0.00ns)   --->   "%temp1 = phi i64 [ %sub_load, %4 ], [ %temp_1, %5 ]" [Group_5/sample.c:1576]   --->   Operation 24 'phi' 'temp1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 25 [1/1] (0.00ns)   --->   "%j_0_in = phi i64 [ %ndim_read, %4 ], [ %j, %5 ]" [Group_5/sample.c:1577]   --->   Operation 25 'phi' 'j_0_in' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 26 [1/1] (2.99ns)   --->   "%j = add i64 %j_0_in, -1" [Group_5/sample.c:1577]   --->   Operation 26 'add' 'j' <Predicate = true> <Delay = 2.99> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 27 [1/1] (2.34ns)   --->   "%tmp = icmp ugt i64 %j, %i" [Group_5/sample.c:1577]   --->   Operation 27 'icmp' 'tmp' <Predicate = true> <Delay = 2.34> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 28 [1/1] (0.00ns)   --->   "br i1 %tmp, label %5, label %2" [Group_5/sample.c:1577]   --->   Operation 28 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 29 [1/1] (0.00ns)   --->   "%shape_addr = getelementptr [5 x i64]* %shape, i64 0, i64 %j" [Group_5/sample.c:1578]   --->   Operation 29 'getelementptr' 'shape_addr' <Predicate = (tmp)> <Delay = 0.00>
ST_4 : Operation 30 [2/2] (1.75ns)   --->   "%shape_load = load i64* %shape_addr, align 8" [Group_5/sample.c:1578]   --->   Operation 30 'load' 'shape_load' <Predicate = (tmp)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 5> <RAM>
ST_4 : Operation 31 [1/1] (2.99ns)   --->   "%idx_1 = add i64 %temp1, %idx" [Group_5/sample.c:1580]   --->   Operation 31 'add' 'idx_1' <Predicate = (!tmp)> <Delay = 2.99> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 32 [1/1] (0.00ns)   --->   "%i_1_s = or i64 %i, 1" [Group_5/sample.c:1574]   --->   Operation 32 'or' 'i_1_s' <Predicate = (!tmp)> <Delay = 0.00>
ST_4 : Operation 33 [1/1] (2.34ns)   --->   "%exitcond_1 = icmp eq i64 %i_1_s, %ndim_read" [Group_5/sample.c:1574]   --->   Operation 33 'icmp' 'exitcond_1' <Predicate = (!tmp)> <Delay = 2.34> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 34 [1/1] (1.35ns)   --->   "br i1 %exitcond_1, label %10, label %8" [Group_5/sample.c:1574]   --->   Operation 34 'br' <Predicate = (!tmp)> <Delay = 1.35>
ST_4 : Operation 35 [1/1] (0.00ns)   --->   "%sub_addr_1 = getelementptr [5 x i64]* %sub, i64 0, i64 %i_1_s" [Group_5/sample.c:1576]   --->   Operation 35 'getelementptr' 'sub_addr_1' <Predicate = (!tmp & !exitcond_1)> <Delay = 0.00>
ST_4 : Operation 36 [2/2] (1.75ns)   --->   "%sub_load_1 = load i64* %sub_addr_1, align 8" [Group_5/sample.c:1576]   --->   Operation 36 'load' 'sub_load_1' <Predicate = (!tmp & !exitcond_1)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 5> <RAM>

State 5 <SV = 4> <Delay = 1.75>
ST_5 : Operation 37 [1/2] (1.75ns)   --->   "%shape_load = load i64* %shape_addr, align 8" [Group_5/sample.c:1578]   --->   Operation 37 'load' 'shape_load' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 5> <RAM>

State 6 <SV = 5> <Delay = 8.60>
ST_6 : Operation 38 [2/2] (8.60ns)   --->   "%temp_1 = mul i64 %shape_load, %temp1" [Group_5/sample.c:1578]   --->   Operation 38 'mul' 'temp_1' <Predicate = true> <Delay = 8.60> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 1> <II = 1> <Delay = 8.60> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 8.60>
ST_7 : Operation 39 [1/2] (8.60ns)   --->   "%temp_1 = mul i64 %shape_load, %temp1" [Group_5/sample.c:1578]   --->   Operation 39 'mul' 'temp_1' <Predicate = true> <Delay = 8.60> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 1> <II = 1> <Delay = 8.60> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 40 [1/1] (0.00ns)   --->   "br label %3" [Group_5/sample.c:1577]   --->   Operation 40 'br' <Predicate = true> <Delay = 0.00>

State 8 <SV = 4> <Delay = 1.75>
ST_8 : Operation 41 [1/2] (1.75ns)   --->   "%sub_load_1 = load i64* %sub_addr_1, align 8" [Group_5/sample.c:1576]   --->   Operation 41 'load' 'sub_load_1' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 5> <RAM>
ST_8 : Operation 42 [1/1] (1.35ns)   --->   "br label %7" [Group_5/sample.c:1577]   --->   Operation 42 'br' <Predicate = true> <Delay = 1.35>

State 9 <SV = 5> <Delay = 5.33>
ST_9 : Operation 43 [1/1] (0.00ns)   --->   "%temp1_1 = phi i64 [ %sub_load_1, %8 ], [ %temp_1_1, %9 ]" [Group_5/sample.c:1576]   --->   Operation 43 'phi' 'temp1_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 44 [1/1] (0.00ns)   --->   "%j_0_in_1 = phi i64 [ %ndim_read, %8 ], [ %j_1, %9 ]" [Group_5/sample.c:1577]   --->   Operation 44 'phi' 'j_0_in_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 45 [1/1] (2.99ns)   --->   "%j_1 = add i64 %j_0_in_1, -1" [Group_5/sample.c:1577]   --->   Operation 45 'add' 'j_1' <Predicate = true> <Delay = 2.99> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 46 [1/1] (2.34ns)   --->   "%tmp_1 = icmp ugt i64 %j_1, %i_1_s" [Group_5/sample.c:1577]   --->   Operation 46 'icmp' 'tmp_1' <Predicate = true> <Delay = 2.34> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 47 [1/1] (0.00ns)   --->   "br i1 %tmp_1, label %9, label %6" [Group_5/sample.c:1577]   --->   Operation 47 'br' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 48 [1/1] (0.00ns)   --->   "%shape_addr_1 = getelementptr [5 x i64]* %shape, i64 0, i64 %j_1" [Group_5/sample.c:1578]   --->   Operation 48 'getelementptr' 'shape_addr_1' <Predicate = (tmp_1)> <Delay = 0.00>
ST_9 : Operation 49 [2/2] (1.75ns)   --->   "%shape_load_1 = load i64* %shape_addr_1, align 8" [Group_5/sample.c:1578]   --->   Operation 49 'load' 'shape_load_1' <Predicate = (tmp_1)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 5> <RAM>
ST_9 : Operation 50 [1/1] (2.99ns)   --->   "%idx_1_1 = add i64 %temp1_1, %idx_1" [Group_5/sample.c:1580]   --->   Operation 50 'add' 'idx_1_1' <Predicate = (!tmp_1)> <Delay = 2.99> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 51 [1/1] (2.99ns)   --->   "%i_1_1 = add i64 %i, 2" [Group_5/sample.c:1574]   --->   Operation 51 'add' 'i_1_1' <Predicate = (!tmp_1)> <Delay = 2.99> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 52 [1/1] (0.00ns)   --->   "br label %1" [Group_5/sample.c:1574]   --->   Operation 52 'br' <Predicate = (!tmp_1)> <Delay = 0.00>

State 10 <SV = 6> <Delay = 1.75>
ST_10 : Operation 53 [1/2] (1.75ns)   --->   "%shape_load_1 = load i64* %shape_addr_1, align 8" [Group_5/sample.c:1578]   --->   Operation 53 'load' 'shape_load_1' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 5> <RAM>

State 11 <SV = 7> <Delay = 8.60>
ST_11 : Operation 54 [2/2] (8.60ns)   --->   "%temp_1_1 = mul i64 %shape_load_1, %temp1_1" [Group_5/sample.c:1578]   --->   Operation 54 'mul' 'temp_1_1' <Predicate = true> <Delay = 8.60> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 1> <II = 1> <Delay = 8.60> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 8> <Delay = 8.60>
ST_12 : Operation 55 [1/2] (8.60ns)   --->   "%temp_1_1 = mul i64 %shape_load_1, %temp1_1" [Group_5/sample.c:1578]   --->   Operation 55 'mul' 'temp_1_1' <Predicate = true> <Delay = 8.60> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 1> <II = 1> <Delay = 8.60> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 56 [1/1] (0.00ns)   --->   "br label %7" [Group_5/sample.c:1577]   --->   Operation 56 'br' <Predicate = true> <Delay = 0.00>

State 13 <SV = 4> <Delay = 0.00>
ST_13 : Operation 57 [1/1] (0.00ns)   --->   "%idx_lcssa = phi i64 [ %idx, %1 ], [ %idx_1, %2 ]" [Group_5/sample.c:1580]   --->   Operation 57 'phi' 'idx_lcssa' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 58 [1/1] (0.00ns)   --->   "ret i64 %idx_lcssa" [Group_5/sample.c:1582]   --->   Operation 58 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.35ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('idx', Group_5/sample.c:1580) with incoming values : ('idx_1_1', Group_5/sample.c:1580) [7]  (1.35 ns)

 <State 2>: 3.69ns
The critical path consists of the following:
	'phi' operation ('i', Group_5/sample.c:1574) with incoming values : ('i_1_1', Group_5/sample.c:1574) [8]  (0 ns)
	'icmp' operation ('exitcond', Group_5/sample.c:1574) [9]  (2.34 ns)
	multiplexor before 'phi' operation ('idx_lcssa', Group_5/sample.c:1580) with incoming values : ('idx_1', Group_5/sample.c:1580) ('idx_1_1', Group_5/sample.c:1580) [51]  (1.35 ns)

 <State 3>: 1.75ns
The critical path consists of the following:
	'load' operation ('sub_load', Group_5/sample.c:1576) on array 'sub' [13]  (1.75 ns)

 <State 4>: 5.34ns
The critical path consists of the following:
	'phi' operation ('j_0_in', Group_5/sample.c:1577) with incoming values : ('ndim') ('j', Group_5/sample.c:1577) [17]  (0 ns)
	'add' operation ('j', Group_5/sample.c:1577) [18]  (3 ns)
	'icmp' operation ('tmp', Group_5/sample.c:1577) [19]  (2.34 ns)

 <State 5>: 1.75ns
The critical path consists of the following:
	'load' operation ('shape_load', Group_5/sample.c:1578) on array 'shape' [23]  (1.75 ns)

 <State 6>: 8.61ns
The critical path consists of the following:
	'mul' operation ('temp_1', Group_5/sample.c:1578) [24]  (8.61 ns)

 <State 7>: 8.61ns
The critical path consists of the following:
	'mul' operation ('temp_1', Group_5/sample.c:1578) [24]  (8.61 ns)

 <State 8>: 1.75ns
The critical path consists of the following:
	'load' operation ('sub_load_1', Group_5/sample.c:1576) on array 'sub' [33]  (1.75 ns)

 <State 9>: 5.34ns
The critical path consists of the following:
	'phi' operation ('j_0_in_1', Group_5/sample.c:1577) with incoming values : ('ndim') ('j_1', Group_5/sample.c:1577) [37]  (0 ns)
	'add' operation ('j_1', Group_5/sample.c:1577) [38]  (3 ns)
	'icmp' operation ('tmp_1', Group_5/sample.c:1577) [39]  (2.34 ns)

 <State 10>: 1.75ns
The critical path consists of the following:
	'load' operation ('shape_load_1', Group_5/sample.c:1578) on array 'shape' [43]  (1.75 ns)

 <State 11>: 8.61ns
The critical path consists of the following:
	'mul' operation ('temp_1_1', Group_5/sample.c:1578) [44]  (8.61 ns)

 <State 12>: 8.61ns
The critical path consists of the following:
	'mul' operation ('temp_1_1', Group_5/sample.c:1578) [44]  (8.61 ns)

 <State 13>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
