-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity k2c_dense_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    output_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
    input_dim : IN STD_LOGIC_VECTOR (63 downto 0);
    input_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
    kernel_dim : IN STD_LOGIC_VECTOR (63 downto 0);
    dense_14_output_arra_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    dense_14_output_arra_ce0 : OUT STD_LOGIC;
    dense_14_output_arra_we0 : OUT STD_LOGIC;
    dense_14_output_arra_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dense_14_output_arra_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dense_13_output_arra_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    dense_13_output_arra_ce0 : OUT STD_LOGIC;
    dense_13_output_arra_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dense_13_output_arra_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    dense_13_output_arra_ce1 : OUT STD_LOGIC;
    dense_13_output_arra_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of k2c_dense_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (17 downto 0) := "000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (17 downto 0) := "000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (17 downto 0) := "000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (17 downto 0) := "001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv14_1000 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_const_lv14_20 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal dense_14_kernel_arra_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal dense_14_kernel_arra_ce0 : STD_LOGIC;
    signal dense_14_kernel_arra_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_14_kernel_arra_ce1 : STD_LOGIC;
    signal dense_14_kernel_arra_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_14_bias_array_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal dense_14_bias_array_ce0 : STD_LOGIC;
    signal dense_14_bias_array_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_14_kernel_nume : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000";
    signal dense_14_bias_numel : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000";
    signal tmp_fu_239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_463 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_245_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_reg_467 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_fu_267_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_477 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_fu_273_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_s_reg_482 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_k2c_dot_1_fu_192_ap_idle : STD_LOGIC;
    signal grp_k2c_dot_1_fu_192_ap_ready : STD_LOGIC;
    signal grp_k2c_dot_1_fu_192_ap_done : STD_LOGIC;
    signal j_fu_300_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_reg_499 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal exitcond_i_fu_295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dense_14_output_arra_4_reg_509 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_30_fu_321_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_14_bias_array_1_reg_519 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal dense_14_output_arra_5_reg_524 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_229_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_14_reg_529 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal i_32_fu_331_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_32_reg_537 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal dense_14_output_arra_6_reg_542 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond4_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_fu_355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_reg_547 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal notrhs_fu_361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs_reg_552 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_557 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_cast_cast_fu_376_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_18_cast_cast_reg_565 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_k2c_affine_matmul_1_fu_216_ap_idle : STD_LOGIC;
    signal grp_k2c_affine_matmul_1_fu_216_ap_ready : STD_LOGIC;
    signal grp_k2c_affine_matmul_1_fu_216_ap_done : STD_LOGIC;
    signal i_31_fu_397_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal i_31_reg_573 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal dense_14_output_arra_1_reg_578 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond1_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs3_fu_421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs3_reg_583 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal notrhs4_fu_427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs4_reg_588 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_reg_593 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_k2c_dot_1_fu_192_ap_start : STD_LOGIC;
    signal grp_k2c_dot_1_fu_192_C_array_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_k2c_dot_1_fu_192_C_array_ce0 : STD_LOGIC;
    signal grp_k2c_dot_1_fu_192_C_array_we0 : STD_LOGIC;
    signal grp_k2c_dot_1_fu_192_C_array_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_k2c_dot_1_fu_192_A_array_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_k2c_dot_1_fu_192_A_array_ce0 : STD_LOGIC;
    signal grp_k2c_affine_matmul_1_fu_216_ap_start : STD_LOGIC;
    signal grp_k2c_affine_matmul_1_fu_216_C_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_k2c_affine_matmul_1_fu_216_C_ce0 : STD_LOGIC;
    signal grp_k2c_affine_matmul_1_fu_216_C_we0 : STD_LOGIC;
    signal grp_k2c_affine_matmul_1_fu_216_C_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_k2c_affine_matmul_1_fu_216_A_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_k2c_affine_matmul_1_fu_216_A_ce0 : STD_LOGIC;
    signal grp_k2c_affine_matmul_1_fu_216_A_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_k2c_affine_matmul_1_fu_216_A_ce1 : STD_LOGIC;
    signal grp_k2c_affine_matmul_1_fu_216_B_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_k2c_affine_matmul_1_fu_216_B_ce0 : STD_LOGIC;
    signal grp_k2c_affine_matmul_1_fu_216_B_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_k2c_affine_matmul_1_fu_216_B_ce1 : STD_LOGIC;
    signal grp_k2c_affine_matmul_1_fu_216_d_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_k2c_affine_matmul_1_fu_216_d_ce0 : STD_LOGIC;
    signal i_i_reg_145 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_i_reg_157 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_i_fu_286_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_2_reg_169 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal i_reg_181 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_k2c_dot_1_fu_192_ap_start_reg : STD_LOGIC := '0';
    signal grp_k2c_affine_matmul_1_fu_216_ap_start_reg : STD_LOGIC := '0';
    signal sum_i_cast_fu_316_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_cast1_fu_383_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_56_fu_257_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_59_fu_306_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_58_fu_291_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sum_i_fu_310_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal dense_14_output_arra_8_fu_337_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_341_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_60_fu_351_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_15_fu_367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_cast_fu_388_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_14_output_arra_3_fu_403_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_407_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_57_fu_417_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_11_fu_433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (17 downto 0);

    component k2c_dot_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        C_array_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        C_array_ce0 : OUT STD_LOGIC;
        C_array_we0 : OUT STD_LOGIC;
        C_array_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_array_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        A_array_ce0 : OUT STD_LOGIC;
        A_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_dim : IN STD_LOGIC_VECTOR (63 downto 0);
        A_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        B_dim : IN STD_LOGIC_VECTOR (63 downto 0);
        B_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component k2c_affine_matmul_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        C_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        C_ce0 : OUT STD_LOGIC;
        C_we0 : OUT STD_LOGIC;
        C_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        A_ce1 : OUT STD_LOGIC;
        A_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        B_ce0 : OUT STD_LOGIC;
        B_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        B_ce1 : OUT STD_LOGIC;
        B_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        d_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        d_ce0 : OUT STD_LOGIC;
        d_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        outrows : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component sample_fadd_32ns_hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sample_fcmp_32ns_pcA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component k2c_dense_2_denseyd2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component k2c_dense_2_densezec IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    dense_14_kernel_arra_U : component k2c_dense_2_denseyd2
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_14_kernel_arra_address0,
        ce0 => dense_14_kernel_arra_ce0,
        q0 => dense_14_kernel_arra_q0,
        address1 => grp_k2c_affine_matmul_1_fu_216_B_address1,
        ce1 => dense_14_kernel_arra_ce1,
        q1 => dense_14_kernel_arra_q1);

    dense_14_bias_array_U : component k2c_dense_2_densezec
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_14_bias_array_address0,
        ce0 => dense_14_bias_array_ce0,
        q0 => dense_14_bias_array_q0);

    grp_k2c_dot_1_fu_192 : component k2c_dot_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_k2c_dot_1_fu_192_ap_start,
        ap_done => grp_k2c_dot_1_fu_192_ap_done,
        ap_idle => grp_k2c_dot_1_fu_192_ap_idle,
        ap_ready => grp_k2c_dot_1_fu_192_ap_ready,
        C_array_address0 => grp_k2c_dot_1_fu_192_C_array_address0,
        C_array_ce0 => grp_k2c_dot_1_fu_192_C_array_ce0,
        C_array_we0 => grp_k2c_dot_1_fu_192_C_array_we0,
        C_array_d0 => grp_k2c_dot_1_fu_192_C_array_d0,
        C_array_q0 => dense_14_output_arra_q0,
        A_array_address0 => grp_k2c_dot_1_fu_192_A_array_address0,
        A_array_ce0 => grp_k2c_dot_1_fu_192_A_array_ce0,
        A_array_q0 => dense_13_output_arra_q0,
        A_dim => input_dim,
        A_numel_read => input_numel_read,
        B_dim => kernel_dim,
        B_numel_read => dense_14_kernel_nume,
        p_read2 => tmp_s_reg_467);

    grp_k2c_affine_matmul_1_fu_216 : component k2c_affine_matmul_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_k2c_affine_matmul_1_fu_216_ap_start,
        ap_done => grp_k2c_affine_matmul_1_fu_216_ap_done,
        ap_idle => grp_k2c_affine_matmul_1_fu_216_ap_idle,
        ap_ready => grp_k2c_affine_matmul_1_fu_216_ap_ready,
        C_address0 => grp_k2c_affine_matmul_1_fu_216_C_address0,
        C_ce0 => grp_k2c_affine_matmul_1_fu_216_C_ce0,
        C_we0 => grp_k2c_affine_matmul_1_fu_216_C_we0,
        C_d0 => grp_k2c_affine_matmul_1_fu_216_C_d0,
        A_address0 => grp_k2c_affine_matmul_1_fu_216_A_address0,
        A_ce0 => grp_k2c_affine_matmul_1_fu_216_A_ce0,
        A_q0 => dense_13_output_arra_q0,
        A_address1 => grp_k2c_affine_matmul_1_fu_216_A_address1,
        A_ce1 => grp_k2c_affine_matmul_1_fu_216_A_ce1,
        A_q1 => dense_13_output_arra_q1,
        B_address0 => grp_k2c_affine_matmul_1_fu_216_B_address0,
        B_ce0 => grp_k2c_affine_matmul_1_fu_216_B_ce0,
        B_q0 => dense_14_kernel_arra_q0,
        B_address1 => grp_k2c_affine_matmul_1_fu_216_B_address1,
        B_ce1 => grp_k2c_affine_matmul_1_fu_216_B_ce1,
        B_q1 => dense_14_kernel_arra_q1,
        d_address0 => grp_k2c_affine_matmul_1_fu_216_d_address0,
        d_ce0 => grp_k2c_affine_matmul_1_fu_216_d_ce0,
        d_q0 => dense_14_bias_array_q0,
        outrows => p_s_reg_482);

    sample_fadd_32ns_hbi_U93 : component sample_fadd_32ns_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => dense_14_output_arra_5_reg_524,
        din1 => dense_14_bias_array_1_reg_519,
        ce => ap_const_logic_1,
        dout => grp_fu_229_p2);

    sample_fcmp_32ns_pcA_U94 : component sample_fcmp_32ns_pcA
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => dense_14_output_arra_q0,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_5,
        dout => grp_fu_233_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_k2c_affine_matmul_1_fu_216_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_k2c_affine_matmul_1_fu_216_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_fu_239_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_k2c_affine_matmul_1_fu_216_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_k2c_affine_matmul_1_fu_216_ap_ready = ap_const_logic_1)) then 
                    grp_k2c_affine_matmul_1_fu_216_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_k2c_dot_1_fu_192_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_k2c_dot_1_fu_192_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_fu_239_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_k2c_dot_1_fu_192_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_k2c_dot_1_fu_192_ap_ready = ap_const_logic_1)) then 
                    grp_k2c_dot_1_fu_192_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    dense_14_bias_numel_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    dense_14_kernel_nume_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    i_2_reg_169_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_fu_286_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_2_reg_169 <= ap_const_lv64_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                i_2_reg_169 <= i_32_reg_537;
            end if; 
        end if;
    end process;

    i_i_reg_145_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond_i_fu_295_p2 = ap_const_lv1_1))) then 
                i_i_reg_145 <= i_30_fu_321_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_k2c_dot_1_fu_192_ap_done = ap_const_logic_1))) then 
                i_i_reg_145 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    i_reg_181_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_k2c_affine_matmul_1_fu_216_ap_done = ap_const_logic_1))) then 
                i_reg_181 <= ap_const_lv13_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                i_reg_181 <= i_31_reg_573;
            end if; 
        end if;
    end process;

    j_i_reg_157_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_i_fu_286_p2 = ap_const_lv1_1))) then 
                j_i_reg_157 <= ap_const_lv64_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                j_i_reg_157 <= j_reg_499;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                dense_14_bias_array_1_reg_519 <= dense_14_bias_array_q0;
                dense_14_output_arra_5_reg_524 <= dense_14_output_arra_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_392_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                dense_14_output_arra_1_reg_578 <= i_cast1_fu_383_p1(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_fu_295_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                dense_14_output_arra_4_reg_509 <= sum_i_cast_fu_316_p1(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond4_fu_326_p2 = ap_const_lv1_0) and (tmp_reg_463 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                dense_14_output_arra_6_reg_542 <= i_2_reg_169(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                i_31_reg_573 <= i_31_fu_397_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_463 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                i_32_reg_537 <= i_32_fu_331_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_239_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                icmp_reg_477 <= icmp_fu_267_p2;
                    p_s_reg_482(0) <= p_s_fu_273_p3(0);    p_s_reg_482(7) <= p_s_fu_273_p3(7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                j_reg_499 <= j_fu_300_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                notlhs3_reg_583 <= notlhs3_fu_421_p2;
                notrhs4_reg_588 <= notrhs4_fu_427_p2;
                tmp_12_reg_593 <= grp_fu_233_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                notlhs_reg_547 <= notlhs_fu_355_p2;
                notrhs_reg_552 <= notrhs_fu_361_p2;
                tmp_16_reg_557 <= grp_fu_233_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_k2c_affine_matmul_1_fu_216_ap_done = ap_const_logic_1))) then
                    tmp_18_cast_cast_reg_565(5) <= tmp_18_cast_cast_fu_376_p3(5);    tmp_18_cast_cast_reg_565(12) <= tmp_18_cast_cast_fu_376_p3(12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                tmp_i_14_reg_529 <= grp_fu_229_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_reg_463 <= tmp_fu_239_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_239_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_s_reg_467 <= tmp_s_fu_245_p2;
            end if;
        end if;
    end process;
    p_s_reg_482(6 downto 1) <= "000000";
    tmp_18_cast_cast_reg_565(4 downto 0) <= "00000";
    tmp_18_cast_cast_reg_565(11 downto 6) <= "000000";
    tmp_18_cast_cast_reg_565(13) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, tmp_fu_239_p2, tmp_reg_463, ap_CS_fsm_state2, grp_k2c_dot_1_fu_192_ap_done, ap_CS_fsm_state4, exitcond_i_fu_295_p2, ap_CS_fsm_state12, exitcond4_fu_326_p2, ap_CS_fsm_state15, grp_k2c_affine_matmul_1_fu_216_ap_done, ap_CS_fsm_state16, exitcond1_fu_392_p2, ap_CS_fsm_state3, tmp_i_fu_286_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((tmp_fu_239_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                elsif (((tmp_fu_239_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_k2c_dot_1_fu_192_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((tmp_i_fu_286_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond_i_fu_295_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and ((tmp_reg_463 = ap_const_lv1_1) or (exitcond4_fu_326_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_k2c_affine_matmul_1_fu_216_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (exitcond1_fu_392_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_reg_463, ap_CS_fsm_state12, exitcond4_fu_326_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state12) and ((tmp_reg_463 = ap_const_lv1_1) or (exitcond4_fu_326_p2 = ap_const_lv1_1))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(tmp_reg_463, ap_CS_fsm_state12, exitcond4_fu_326_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and ((tmp_reg_463 = ap_const_lv1_1) or (exitcond4_fu_326_p2 = ap_const_lv1_1)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    dense_13_output_arra_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state15, grp_k2c_dot_1_fu_192_A_array_address0, grp_k2c_affine_matmul_1_fu_216_A_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            dense_13_output_arra_address0 <= grp_k2c_affine_matmul_1_fu_216_A_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dense_13_output_arra_address0 <= grp_k2c_dot_1_fu_192_A_array_address0;
        else 
            dense_13_output_arra_address0 <= "XXXXXXX";
        end if; 
    end process;

    dense_13_output_arra_address1 <= grp_k2c_affine_matmul_1_fu_216_A_address1;

    dense_13_output_arra_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state15, grp_k2c_dot_1_fu_192_A_array_ce0, grp_k2c_affine_matmul_1_fu_216_A_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            dense_13_output_arra_ce0 <= grp_k2c_affine_matmul_1_fu_216_A_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dense_13_output_arra_ce0 <= grp_k2c_dot_1_fu_192_A_array_ce0;
        else 
            dense_13_output_arra_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_13_output_arra_ce1_assign_proc : process(ap_CS_fsm_state15, grp_k2c_affine_matmul_1_fu_216_A_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            dense_13_output_arra_ce1 <= grp_k2c_affine_matmul_1_fu_216_A_ce1;
        else 
            dense_13_output_arra_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_14_bias_array_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state15, grp_k2c_affine_matmul_1_fu_216_d_address0, j_i_reg_157)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dense_14_bias_array_address0 <= j_i_reg_157(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            dense_14_bias_array_address0 <= grp_k2c_affine_matmul_1_fu_216_d_address0;
        else 
            dense_14_bias_array_address0 <= "XXXXX";
        end if; 
    end process;


    dense_14_bias_array_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state15, grp_k2c_affine_matmul_1_fu_216_d_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dense_14_bias_array_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            dense_14_bias_array_ce0 <= grp_k2c_affine_matmul_1_fu_216_d_ce0;
        else 
            dense_14_bias_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_14_kernel_arra_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state15, grp_k2c_affine_matmul_1_fu_216_B_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            dense_14_kernel_arra_address0 <= grp_k2c_affine_matmul_1_fu_216_B_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dense_14_kernel_arra_address0 <= ap_const_lv12_0;
        else 
            dense_14_kernel_arra_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    dense_14_kernel_arra_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state15, grp_k2c_affine_matmul_1_fu_216_B_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            dense_14_kernel_arra_ce0 <= grp_k2c_affine_matmul_1_fu_216_B_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dense_14_kernel_arra_ce0 <= ap_const_logic_0;
        else 
            dense_14_kernel_arra_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_14_kernel_arra_ce1_assign_proc : process(ap_CS_fsm_state15, grp_k2c_affine_matmul_1_fu_216_B_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            dense_14_kernel_arra_ce1 <= grp_k2c_affine_matmul_1_fu_216_B_ce1;
        else 
            dense_14_kernel_arra_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    dense_14_output_arra_3_fu_403_p1 <= dense_14_output_arra_q0;
    dense_14_output_arra_8_fu_337_p1 <= dense_14_output_arra_q0;

    dense_14_output_arra_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, dense_14_output_arra_4_reg_509, ap_CS_fsm_state12, dense_14_output_arra_6_reg_542, ap_CS_fsm_state15, ap_CS_fsm_state16, dense_14_output_arra_1_reg_578, grp_k2c_dot_1_fu_192_C_array_address0, grp_k2c_affine_matmul_1_fu_216_C_address0, ap_CS_fsm_state11, i_2_reg_169, ap_CS_fsm_state14, ap_CS_fsm_state18, sum_i_cast_fu_316_p1, i_cast1_fu_383_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            dense_14_output_arra_address0 <= dense_14_output_arra_1_reg_578;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            dense_14_output_arra_address0 <= i_cast1_fu_383_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            dense_14_output_arra_address0 <= dense_14_output_arra_6_reg_542;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dense_14_output_arra_address0 <= i_2_reg_169(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            dense_14_output_arra_address0 <= dense_14_output_arra_4_reg_509;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dense_14_output_arra_address0 <= sum_i_cast_fu_316_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            dense_14_output_arra_address0 <= grp_k2c_affine_matmul_1_fu_216_C_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dense_14_output_arra_address0 <= grp_k2c_dot_1_fu_192_C_array_address0;
        else 
            dense_14_output_arra_address0 <= "XXXXX";
        end if; 
    end process;


    dense_14_output_arra_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_k2c_dot_1_fu_192_C_array_ce0, grp_k2c_affine_matmul_1_fu_216_C_ce0, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            dense_14_output_arra_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            dense_14_output_arra_ce0 <= grp_k2c_affine_matmul_1_fu_216_C_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dense_14_output_arra_ce0 <= grp_k2c_dot_1_fu_192_C_array_ce0;
        else 
            dense_14_output_arra_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_14_output_arra_d0_assign_proc : process(ap_CS_fsm_state2, tmp_i_14_reg_529, ap_CS_fsm_state15, grp_k2c_dot_1_fu_192_C_array_d0, grp_k2c_affine_matmul_1_fu_216_C_d0, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            dense_14_output_arra_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            dense_14_output_arra_d0 <= tmp_i_14_reg_529;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            dense_14_output_arra_d0 <= grp_k2c_affine_matmul_1_fu_216_C_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dense_14_output_arra_d0 <= grp_k2c_dot_1_fu_192_C_array_d0;
        else 
            dense_14_output_arra_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_14_output_arra_we0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state15, grp_k2c_dot_1_fu_192_C_array_we0, grp_k2c_affine_matmul_1_fu_216_C_we0, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state18, tmp_17_fu_371_p2, tmp_13_fu_437_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((ap_const_logic_1 = ap_CS_fsm_state18) and (tmp_13_fu_437_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (tmp_17_fu_371_p2 = ap_const_lv1_1)))) then 
            dense_14_output_arra_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            dense_14_output_arra_we0 <= grp_k2c_affine_matmul_1_fu_216_C_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dense_14_output_arra_we0 <= grp_k2c_dot_1_fu_192_C_array_we0;
        else 
            dense_14_output_arra_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_392_p2 <= "1" when (i_cast_fu_388_p1 = tmp_18_cast_cast_reg_565) else "0";
    exitcond4_fu_326_p2 <= "1" when (i_2_reg_169 = output_numel_read) else "0";
    exitcond_i_fu_295_p2 <= "1" when (j_i_reg_157 = dense_14_bias_numel) else "0";
    grp_k2c_affine_matmul_1_fu_216_ap_start <= grp_k2c_affine_matmul_1_fu_216_ap_start_reg;
    grp_k2c_dot_1_fu_192_ap_start <= grp_k2c_dot_1_fu_192_ap_start_reg;
    i_30_fu_321_p2 <= std_logic_vector(unsigned(dense_14_bias_numel) + unsigned(i_i_reg_145));
    i_31_fu_397_p2 <= std_logic_vector(unsigned(i_reg_181) + unsigned(ap_const_lv13_1));
    i_32_fu_331_p2 <= std_logic_vector(unsigned(i_2_reg_169) + unsigned(ap_const_lv64_1));
    i_cast1_fu_383_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_181),64));
    i_cast_fu_388_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_181),14));
    icmp_fu_267_p2 <= "0" when (tmp_56_fu_257_p4 = ap_const_lv63_0) else "1";
    j_fu_300_p2 <= std_logic_vector(unsigned(ap_const_lv64_1) + unsigned(j_i_reg_157));
    notlhs3_fu_421_p2 <= "0" when (tmp_10_fu_407_p4 = ap_const_lv8_FF) else "1";
    notlhs_fu_355_p2 <= "0" when (tmp_14_fu_341_p4 = ap_const_lv8_FF) else "1";
    notrhs4_fu_427_p2 <= "1" when (tmp_57_fu_417_p1 = ap_const_lv23_0) else "0";
    notrhs_fu_361_p2 <= "1" when (tmp_60_fu_351_p1 = ap_const_lv23_0) else "0";
    p_s_fu_273_p3 <= 
        ap_const_lv8_80 when (icmp_fu_267_p2(0) = '1') else 
        ap_const_lv8_1;
    sum_i_cast_fu_316_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum_i_fu_310_p2),64));
    sum_i_fu_310_p2 <= std_logic_vector(unsigned(tmp_59_fu_306_p1) + unsigned(tmp_58_fu_291_p1));
    tmp_10_fu_407_p4 <= dense_14_output_arra_3_fu_403_p1(30 downto 23);
    tmp_11_fu_433_p2 <= (notrhs4_reg_588 or notlhs3_reg_583);
    tmp_13_fu_437_p2 <= (tmp_12_reg_593 and tmp_11_fu_433_p2);
    tmp_14_fu_341_p4 <= dense_14_output_arra_8_fu_337_p1(30 downto 23);
    tmp_15_fu_367_p2 <= (notrhs_reg_552 or notlhs_reg_547);
    tmp_17_fu_371_p2 <= (tmp_16_reg_557 and tmp_15_fu_367_p2);
    tmp_18_cast_cast_fu_376_p3 <= 
        ap_const_lv14_1000 when (icmp_reg_477(0) = '1') else 
        ap_const_lv14_20;
    tmp_56_fu_257_p4 <= input_dim(63 downto 1);
    tmp_57_fu_417_p1 <= dense_14_output_arra_3_fu_403_p1(23 - 1 downto 0);
    tmp_58_fu_291_p1 <= j_i_reg_157(7 - 1 downto 0);
    tmp_59_fu_306_p1 <= i_i_reg_145(7 - 1 downto 0);
    tmp_60_fu_351_p1 <= dense_14_output_arra_8_fu_337_p1(23 - 1 downto 0);
    tmp_fu_239_p2 <= "1" when (unsigned(input_dim) < unsigned(ap_const_lv64_3)) else "0";
    tmp_i_fu_286_p2 <= "1" when (unsigned(i_i_reg_145) < unsigned(output_numel_read)) else "0";
    tmp_s_fu_245_p2 <= std_logic_vector(unsigned(input_dim) + unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF));
end behav;
