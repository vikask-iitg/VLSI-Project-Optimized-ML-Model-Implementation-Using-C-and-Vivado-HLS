// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module k2c_affine_matmul_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        C_address0,
        C_ce0,
        C_we0,
        C_d0,
        A_address0,
        A_ce0,
        A_q0,
        A_address1,
        A_ce1,
        A_q1,
        B_address0,
        B_ce0,
        B_q0,
        B_address1,
        B_ce1,
        B_q1,
        outrows
);

parameter    ap_ST_fsm_state1 = 62'd1;
parameter    ap_ST_fsm_state2 = 62'd2;
parameter    ap_ST_fsm_state3 = 62'd4;
parameter    ap_ST_fsm_state4 = 62'd8;
parameter    ap_ST_fsm_state5 = 62'd16;
parameter    ap_ST_fsm_state6 = 62'd32;
parameter    ap_ST_fsm_state7 = 62'd64;
parameter    ap_ST_fsm_state8 = 62'd128;
parameter    ap_ST_fsm_state9 = 62'd256;
parameter    ap_ST_fsm_state10 = 62'd512;
parameter    ap_ST_fsm_state11 = 62'd1024;
parameter    ap_ST_fsm_state12 = 62'd2048;
parameter    ap_ST_fsm_state13 = 62'd4096;
parameter    ap_ST_fsm_state14 = 62'd8192;
parameter    ap_ST_fsm_state15 = 62'd16384;
parameter    ap_ST_fsm_state16 = 62'd32768;
parameter    ap_ST_fsm_state17 = 62'd65536;
parameter    ap_ST_fsm_state18 = 62'd131072;
parameter    ap_ST_fsm_state19 = 62'd262144;
parameter    ap_ST_fsm_state20 = 62'd524288;
parameter    ap_ST_fsm_state21 = 62'd1048576;
parameter    ap_ST_fsm_state22 = 62'd2097152;
parameter    ap_ST_fsm_state23 = 62'd4194304;
parameter    ap_ST_fsm_state24 = 62'd8388608;
parameter    ap_ST_fsm_state25 = 62'd16777216;
parameter    ap_ST_fsm_state26 = 62'd33554432;
parameter    ap_ST_fsm_state27 = 62'd67108864;
parameter    ap_ST_fsm_state28 = 62'd134217728;
parameter    ap_ST_fsm_state29 = 62'd268435456;
parameter    ap_ST_fsm_state30 = 62'd536870912;
parameter    ap_ST_fsm_state31 = 62'd1073741824;
parameter    ap_ST_fsm_state32 = 62'd2147483648;
parameter    ap_ST_fsm_state33 = 62'd4294967296;
parameter    ap_ST_fsm_state34 = 62'd8589934592;
parameter    ap_ST_fsm_state35 = 62'd17179869184;
parameter    ap_ST_fsm_state36 = 62'd34359738368;
parameter    ap_ST_fsm_state37 = 62'd68719476736;
parameter    ap_ST_fsm_state38 = 62'd137438953472;
parameter    ap_ST_fsm_state39 = 62'd274877906944;
parameter    ap_ST_fsm_state40 = 62'd549755813888;
parameter    ap_ST_fsm_state41 = 62'd1099511627776;
parameter    ap_ST_fsm_state42 = 62'd2199023255552;
parameter    ap_ST_fsm_state43 = 62'd4398046511104;
parameter    ap_ST_fsm_state44 = 62'd8796093022208;
parameter    ap_ST_fsm_state45 = 62'd17592186044416;
parameter    ap_ST_fsm_state46 = 62'd35184372088832;
parameter    ap_ST_fsm_state47 = 62'd70368744177664;
parameter    ap_ST_fsm_state48 = 62'd140737488355328;
parameter    ap_ST_fsm_state49 = 62'd281474976710656;
parameter    ap_ST_fsm_state50 = 62'd562949953421312;
parameter    ap_ST_fsm_state51 = 62'd1125899906842624;
parameter    ap_ST_fsm_state52 = 62'd2251799813685248;
parameter    ap_ST_fsm_state53 = 62'd4503599627370496;
parameter    ap_ST_fsm_state54 = 62'd9007199254740992;
parameter    ap_ST_fsm_state55 = 62'd18014398509481984;
parameter    ap_ST_fsm_state56 = 62'd36028797018963968;
parameter    ap_ST_fsm_state57 = 62'd72057594037927936;
parameter    ap_ST_fsm_state58 = 62'd144115188075855872;
parameter    ap_ST_fsm_state59 = 62'd288230376151711744;
parameter    ap_ST_fsm_state60 = 62'd576460752303423488;
parameter    ap_ST_fsm_state61 = 62'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 62'd2305843009213693952;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [0:0] C_address0;
output   C_ce0;
output   C_we0;
output  [31:0] C_d0;
output  [3:0] A_address0;
output   A_ce0;
input  [31:0] A_q0;
output  [3:0] A_address1;
output   A_ce1;
input  [31:0] A_q1;
output  [3:0] B_address0;
output   B_ce0;
input  [31:0] B_q0;
output  [3:0] B_address1;
output   B_ce1;
input  [31:0] B_q1;
input  [4:0] outrows;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg C_ce0;
reg C_we0;
reg[3:0] A_address0;
reg A_ce0;
reg[3:0] A_address1;
reg A_ce1;
reg[3:0] B_address0;
reg B_ce0;
reg[3:0] B_address1;
reg B_ce1;

(* fsm_encoding = "none" *) reg   [61:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_331;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state54;
reg   [31:0] reg_337;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state19;
reg   [31:0] reg_343;
wire    ap_CS_fsm_state20;
wire   [31:0] grp_fu_323_p2;
reg   [31:0] reg_350;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state57;
wire   [31:0] grp_fu_327_p2;
reg   [31:0] reg_356;
wire    ap_CS_fsm_state23;
wire   [31:0] grp_fu_317_p2;
reg   [31:0] reg_361;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state47;
wire   [1:0] tmp_fu_367_p1;
reg   [1:0] tmp_reg_574;
wire    ap_CS_fsm_state2;
wire   [4:0] i_fu_376_p2;
reg   [4:0] i_reg_583;
wire   [5:0] inneridx_fu_382_p3;
reg   [5:0] inneridx_reg_588;
wire   [0:0] exitcond1_fu_371_p2;
wire   [1:0] j_cast_fu_390_p1;
reg   [1:0] j_cast_reg_593;
wire    ap_CS_fsm_state3;
reg   [31:0] b2_reg_598;
wire    ap_CS_fsm_state5;
reg   [31:0] b3_reg_603;
reg   [31:0] b4_reg_608;
wire    ap_CS_fsm_state6;
reg   [31:0] b5_reg_613;
reg   [31:0] b6_reg_618;
wire    ap_CS_fsm_state7;
reg   [31:0] b7_reg_623;
wire   [5:0] sum3_fu_400_p3;
reg   [5:0] sum3_reg_631;
wire    ap_CS_fsm_state8;
wire   [0:0] tmp_s_fu_394_p2;
wire   [3:0] k_2_fu_428_p2;
reg   [3:0] k_2_reg_656;
reg   [31:0] b0_reg_661;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state18;
reg   [31:0] a5_reg_686;
reg   [31:0] a6_reg_701;
wire    ap_CS_fsm_state21;
reg   [31:0] a7_reg_706;
reg   [31:0] tmp_32_reg_711;
reg   [31:0] tmp_36_reg_716;
wire    ap_CS_fsm_state24;
reg   [31:0] tmp_38_reg_721;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state53;
wire   [0:0] exitcond8_fu_498_p2;
wire   [4:0] k_3_fu_519_p2;
reg   [4:0] k_3_reg_744;
wire    ap_CS_fsm_state62;
reg   [4:0] outrowidx_reg_247;
wire   [0:0] ap_phi_mux_j_phi_fu_263_p4;
reg   [0:0] j_reg_258;
reg   [31:0] temp3_reg_271;
reg   [3:0] k_reg_283;
reg   [31:0] temp_1_reg_294;
reg   [4:0] k_1_reg_306;
wire   [63:0] sum3_cast_fu_407_p1;
wire   [63:0] sum1_cast_fu_412_p1;
wire   [63:0] sum5_cast_fu_423_p1;
wire   [63:0] sum7_cast_fu_439_p1;
wire   [63:0] sum9_cast_fu_449_p1;
wire   [63:0] sum8_cast_fu_459_p1;
wire   [63:0] sum11_cast_fu_469_p1;
wire   [63:0] sum13_cast_fu_479_p1;
wire   [63:0] sum15_cast_fu_489_p1;
wire   [63:0] sum17_cast_fu_509_p1;
wire   [63:0] sum18_cast_fu_514_p1;
wire   [63:0] sum_cast_fu_529_p1;
reg   [31:0] grp_fu_317_p0;
reg   [31:0] grp_fu_317_p1;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state58;
reg   [31:0] grp_fu_323_p0;
reg   [31:0] grp_fu_323_p1;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state55;
reg   [31:0] grp_fu_327_p0;
reg   [31:0] grp_fu_327_p1;
wire   [5:0] sum5_fu_417_p2;
wire   [5:0] sum7_fu_434_p2;
wire   [5:0] sum9_fu_444_p2;
wire   [5:0] sum8_fu_454_p2;
wire   [5:0] sum1_fu_464_p2;
wire   [5:0] sum2_fu_474_p2;
wire   [5:0] sum4_fu_484_p2;
wire   [5:0] k_1_cast_fu_494_p1;
wire   [5:0] sum6_fu_504_p2;
wire   [1:0] sum_fu_525_p2;
reg   [61:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 62'd1;
end

sample_fadd_32ns_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample_fadd_32ns_hbi_U157(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_317_p0),
    .din1(grp_fu_317_p1),
    .ce(1'b1),
    .dout(grp_fu_317_p2)
);

sample_fmul_32ns_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample_fmul_32ns_ibs_U158(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_323_p0),
    .din1(grp_fu_323_p1),
    .ce(1'b1),
    .dout(grp_fu_323_p2)
);

sample_fmul_32ns_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample_fmul_32ns_ibs_U159(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_327_p0),
    .din1(grp_fu_327_p1),
    .ce(1'b1),
    .dout(grp_fu_327_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_fu_498_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state53))) begin
        j_reg_258 <= 1'd1;
    end else if (((exitcond1_fu_371_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_reg_258 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_394_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        k_1_reg_306 <= 5'd8;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        k_1_reg_306 <= k_3_reg_744;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        k_reg_283 <= k_2_reg_656;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        k_reg_283 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_j_phi_fu_263_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        outrowidx_reg_247 <= i_reg_583;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        outrowidx_reg_247 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        reg_337 <= A_q1;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state54))) begin
        reg_337 <= A_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        reg_343 <= A_q0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        reg_343 <= A_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        temp3_reg_271 <= grp_fu_317_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        temp3_reg_271 <= 32'd3172971855;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_394_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        temp_1_reg_294 <= temp3_reg_271;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        temp_1_reg_294 <= grp_fu_317_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        a5_reg_686 <= A_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        a6_reg_701 <= A_q0;
        a7_reg_706 <= A_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        b0_reg_661 <= B_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        b2_reg_598 <= B_q0;
        b3_reg_603 <= B_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        b4_reg_608 <= B_q1;
        b5_reg_613 <= B_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        b6_reg_618 <= B_q1;
        b7_reg_623 <= B_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_583 <= i_fu_376_p2;
        tmp_reg_574 <= tmp_fu_367_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_371_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        inneridx_reg_588[5 : 4] <= inneridx_fu_382_p3[5 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_cast_reg_593[0] <= j_cast_fu_390_p1[0];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_394_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        k_2_reg_656 <= k_2_fu_428_p2;
        sum3_reg_631 <= sum3_fu_400_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_fu_498_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state53))) begin
        k_3_reg_744 <= k_3_fu_519_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_331 <= B_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12))) begin
        reg_350 <= grp_fu_323_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state12))) begin
        reg_356 <= grp_fu_327_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_361 <= grp_fu_317_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        tmp_32_reg_711 <= grp_fu_323_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        tmp_36_reg_716 <= grp_fu_323_p2;
        tmp_38_reg_721 <= grp_fu_327_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        A_address0 = sum17_cast_fu_509_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        A_address0 = sum13_cast_fu_479_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        A_address0 = sum8_cast_fu_459_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        A_address0 = sum7_cast_fu_439_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_address0 = sum3_cast_fu_407_p1;
    end else begin
        A_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        A_address1 = sum15_cast_fu_489_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        A_address1 = sum11_cast_fu_469_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        A_address1 = sum9_cast_fu_449_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_address1 = sum5_cast_fu_423_p1;
    end else begin
        A_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        A_ce1 = 1'b1;
    end else begin
        A_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        B_address0 = sum18_cast_fu_514_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        B_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        B_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        B_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        B_address0 = 64'd1;
    end else begin
        B_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        B_address1 = sum1_cast_fu_412_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        B_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        B_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        B_address1 = 64'd3;
    end else begin
        B_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4))) begin
        B_ce0 = 1'b1;
    end else begin
        B_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        B_ce1 = 1'b1;
    end else begin
        B_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        C_ce0 = 1'b1;
    end else begin
        C_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond8_fu_498_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state53))) begin
        C_we0 = 1'b1;
    end else begin
        C_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((exitcond1_fu_371_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_fu_371_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_317_p0 = temp_1_reg_294;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_fu_317_p0 = temp3_reg_271;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_fu_317_p0 = reg_361;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_317_p0 = reg_350;
    end else begin
        grp_fu_317_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_fu_317_p1 = reg_361;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_fu_317_p1 = tmp_38_reg_721;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_317_p1 = tmp_36_reg_716;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_317_p1 = tmp_32_reg_711;
    end else if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_fu_317_p1 = reg_350;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_317_p1 = reg_356;
    end else begin
        grp_fu_317_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_323_p0 = a6_reg_701;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_323_p0 = reg_343;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_323_p0 = reg_337;
    end else begin
        grp_fu_323_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_323_p1 = reg_331;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_323_p1 = b6_reg_618;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_323_p1 = b4_reg_608;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_323_p1 = b3_reg_603;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_323_p1 = b2_reg_598;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_323_p1 = b0_reg_661;
    end else begin
        grp_fu_323_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_327_p0 = a7_reg_706;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_327_p0 = a5_reg_686;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_327_p0 = reg_343;
    end else begin
        grp_fu_327_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_327_p1 = b7_reg_623;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_327_p1 = b5_reg_613;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_327_p1 = reg_331;
    end else begin
        grp_fu_327_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond1_fu_371_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((ap_phi_mux_j_phi_fu_263_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((tmp_s_fu_394_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state53 : begin
            if (((exitcond8_fu_498_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state53))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C_address0 = sum_cast_fu_529_p1;

assign C_d0 = temp_1_reg_294;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_phi_mux_j_phi_fu_263_p4 = j_reg_258;

assign exitcond1_fu_371_p2 = ((outrowidx_reg_247 == outrows) ? 1'b1 : 1'b0);

assign exitcond8_fu_498_p2 = ((k_1_reg_306 == 5'd16) ? 1'b1 : 1'b0);

assign i_fu_376_p2 = (5'd1 + outrowidx_reg_247);

assign inneridx_fu_382_p3 = {{tmp_fu_367_p1}, {4'd0}};

assign j_cast_fu_390_p1 = j_reg_258;

assign k_1_cast_fu_494_p1 = k_1_reg_306;

assign k_2_fu_428_p2 = (k_reg_283 ^ 4'd8);

assign k_3_fu_519_p2 = (k_1_reg_306 + 5'd1);

assign sum11_cast_fu_469_p1 = sum1_fu_464_p2;

assign sum13_cast_fu_479_p1 = sum2_fu_474_p2;

assign sum15_cast_fu_489_p1 = sum4_fu_484_p2;

assign sum17_cast_fu_509_p1 = sum6_fu_504_p2;

assign sum18_cast_fu_514_p1 = k_1_reg_306;

assign sum1_cast_fu_412_p1 = k_reg_283;

assign sum1_fu_464_p2 = (sum3_reg_631 | 6'd5);

assign sum2_fu_474_p2 = (sum3_reg_631 | 6'd6);

assign sum3_cast_fu_407_p1 = sum3_fu_400_p3;

assign sum3_fu_400_p3 = {{tmp_reg_574}, {k_reg_283}};

assign sum4_fu_484_p2 = (sum3_reg_631 | 6'd7);

assign sum5_cast_fu_423_p1 = sum5_fu_417_p2;

assign sum5_fu_417_p2 = (sum3_fu_400_p3 | 6'd1);

assign sum6_fu_504_p2 = (k_1_cast_fu_494_p1 + inneridx_reg_588);

assign sum7_cast_fu_439_p1 = sum7_fu_434_p2;

assign sum7_fu_434_p2 = (sum3_reg_631 | 6'd2);

assign sum8_cast_fu_459_p1 = sum8_fu_454_p2;

assign sum8_fu_454_p2 = (sum3_reg_631 | 6'd4);

assign sum9_cast_fu_449_p1 = sum9_fu_444_p2;

assign sum9_fu_444_p2 = (sum3_reg_631 | 6'd3);

assign sum_cast_fu_529_p1 = sum_fu_525_p2;

assign sum_fu_525_p2 = (j_cast_reg_593 + tmp_reg_574);

assign tmp_fu_367_p1 = outrowidx_reg_247[1:0];

assign tmp_s_fu_394_p2 = ((k_reg_283 == 4'd8) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    inneridx_reg_588[3:0] <= 4'b0000;
    j_cast_reg_593[1] <= 1'b0;
end

endmodule //k2c_affine_matmul_3
