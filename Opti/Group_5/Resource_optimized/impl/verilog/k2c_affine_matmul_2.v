// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module k2c_affine_matmul_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        C_address0,
        C_ce0,
        C_we0,
        C_d0,
        A_address0,
        A_ce0,
        A_q0,
        A_address1,
        A_ce1,
        A_q1,
        B_address0,
        B_ce0,
        B_q0,
        B_address1,
        B_ce1,
        B_q1,
        d_address0,
        d_ce0,
        d_q0,
        outrows
);

parameter    ap_ST_fsm_state1 = 59'd1;
parameter    ap_ST_fsm_state2 = 59'd2;
parameter    ap_ST_fsm_state3 = 59'd4;
parameter    ap_ST_fsm_state4 = 59'd8;
parameter    ap_ST_fsm_state5 = 59'd16;
parameter    ap_ST_fsm_state6 = 59'd32;
parameter    ap_ST_fsm_state7 = 59'd64;
parameter    ap_ST_fsm_state8 = 59'd128;
parameter    ap_ST_fsm_state9 = 59'd256;
parameter    ap_ST_fsm_state10 = 59'd512;
parameter    ap_ST_fsm_state11 = 59'd1024;
parameter    ap_ST_fsm_state12 = 59'd2048;
parameter    ap_ST_fsm_state13 = 59'd4096;
parameter    ap_ST_fsm_state14 = 59'd8192;
parameter    ap_ST_fsm_state15 = 59'd16384;
parameter    ap_ST_fsm_state16 = 59'd32768;
parameter    ap_ST_fsm_state17 = 59'd65536;
parameter    ap_ST_fsm_state18 = 59'd131072;
parameter    ap_ST_fsm_state19 = 59'd262144;
parameter    ap_ST_fsm_state20 = 59'd524288;
parameter    ap_ST_fsm_state21 = 59'd1048576;
parameter    ap_ST_fsm_state22 = 59'd2097152;
parameter    ap_ST_fsm_state23 = 59'd4194304;
parameter    ap_ST_fsm_state24 = 59'd8388608;
parameter    ap_ST_fsm_state25 = 59'd16777216;
parameter    ap_ST_fsm_state26 = 59'd33554432;
parameter    ap_ST_fsm_state27 = 59'd67108864;
parameter    ap_ST_fsm_state28 = 59'd134217728;
parameter    ap_ST_fsm_state29 = 59'd268435456;
parameter    ap_ST_fsm_state30 = 59'd536870912;
parameter    ap_ST_fsm_state31 = 59'd1073741824;
parameter    ap_ST_fsm_state32 = 59'd2147483648;
parameter    ap_ST_fsm_state33 = 59'd4294967296;
parameter    ap_ST_fsm_state34 = 59'd8589934592;
parameter    ap_ST_fsm_state35 = 59'd17179869184;
parameter    ap_ST_fsm_state36 = 59'd34359738368;
parameter    ap_ST_fsm_state37 = 59'd68719476736;
parameter    ap_ST_fsm_state38 = 59'd137438953472;
parameter    ap_ST_fsm_state39 = 59'd274877906944;
parameter    ap_ST_fsm_state40 = 59'd549755813888;
parameter    ap_ST_fsm_state41 = 59'd1099511627776;
parameter    ap_ST_fsm_state42 = 59'd2199023255552;
parameter    ap_ST_fsm_state43 = 59'd4398046511104;
parameter    ap_ST_fsm_state44 = 59'd8796093022208;
parameter    ap_ST_fsm_state45 = 59'd17592186044416;
parameter    ap_ST_fsm_state46 = 59'd35184372088832;
parameter    ap_ST_fsm_state47 = 59'd70368744177664;
parameter    ap_ST_fsm_state48 = 59'd140737488355328;
parameter    ap_ST_fsm_state49 = 59'd281474976710656;
parameter    ap_ST_fsm_state50 = 59'd562949953421312;
parameter    ap_ST_fsm_state51 = 59'd1125899906842624;
parameter    ap_ST_fsm_state52 = 59'd2251799813685248;
parameter    ap_ST_fsm_state53 = 59'd4503599627370496;
parameter    ap_ST_fsm_state54 = 59'd9007199254740992;
parameter    ap_ST_fsm_state55 = 59'd18014398509481984;
parameter    ap_ST_fsm_state56 = 59'd36028797018963968;
parameter    ap_ST_fsm_state57 = 59'd72057594037927936;
parameter    ap_ST_fsm_state58 = 59'd144115188075855872;
parameter    ap_ST_fsm_state59 = 59'd288230376151711744;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] C_address0;
output   C_ce0;
output   C_we0;
output  [31:0] C_d0;
output  [4:0] A_address0;
output   A_ce0;
input  [31:0] A_q0;
output  [4:0] A_address1;
output   A_ce1;
input  [31:0] A_q1;
output  [8:0] B_address0;
output   B_ce0;
input  [31:0] B_q0;
output  [8:0] B_address1;
output   B_ce1;
input  [31:0] B_q1;
output  [3:0] d_address0;
output   d_ce0;
input  [31:0] d_q0;
input  [5:0] outrows;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg C_ce0;
reg C_we0;
reg[4:0] A_address0;
reg A_ce0;
reg[4:0] A_address1;
reg A_ce1;
reg[8:0] B_address0;
reg B_ce0;
reg[8:0] B_address1;
reg B_ce1;
reg d_ce0;

(* fsm_encoding = "none" *) reg   [58:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_363;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state51;
reg   [31:0] reg_369;
wire   [31:0] grp_fu_355_p2;
reg   [31:0] reg_375;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state54;
wire   [31:0] grp_fu_349_p2;
reg   [31:0] reg_381;
wire    ap_CS_fsm_state44;
wire   [8:0] outrows_cast_fu_387_p1;
reg   [8:0] outrows_cast_reg_757;
wire   [5:0] i_37_fu_396_p2;
reg   [5:0] i_37_reg_765;
wire    ap_CS_fsm_state2;
wire   [1:0] tmp_fu_402_p1;
reg   [1:0] tmp_reg_770;
wire   [0:0] exitcond1_fu_391_p2;
wire   [5:0] outrowidx_fu_406_p2;
reg   [5:0] outrowidx_reg_775;
wire   [6:0] inneridx_fu_412_p3;
reg   [6:0] inneridx_reg_780;
wire   [8:0] next_mul_fu_420_p2;
reg   [8:0] next_mul_reg_785;
wire    ap_CS_fsm_state3;
wire   [5:0] j_cast_fu_430_p1;
reg   [5:0] j_cast_reg_790;
wire   [4:0] j_1_fu_440_p2;
reg   [4:0] j_1_reg_798;
wire   [0:0] exitcond_fu_434_p2;
wire    ap_CS_fsm_state4;
wire   [6:0] sum3_fu_456_p3;
reg   [6:0] sum3_reg_816;
wire    ap_CS_fsm_state5;
wire   [0:0] tmp_s_fu_450_p2;
reg   [31:0] a1_reg_846;
reg   [31:0] b1_reg_851;
wire   [31:0] grp_fu_359_p2;
reg   [31:0] tmp_42_reg_856;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state30;
wire   [8:0] sum16_fu_676_p2;
reg   [8:0] sum16_reg_911;
wire   [4:0] k_2_fu_682_p2;
reg   [4:0] k_2_reg_916;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state50;
wire   [0:0] exitcond8_fu_710_p2;
wire   [5:0] k_3_fu_737_p2;
reg   [5:0] k_3_reg_949;
wire    ap_CS_fsm_state59;
reg   [5:0] i_reg_270;
reg   [4:0] j_reg_281;
reg   [8:0] phi_mul_reg_292;
reg   [31:0] temp3_reg_304;
reg   [4:0] k_reg_314;
reg   [31:0] temp_1_reg_326;
reg   [5:0] k_1_reg_338;
wire   [63:0] j_cast2_fu_425_p1;
wire   [63:0] sum3_cast_fu_463_p1;
wire   [63:0] sum20_cast_fu_474_p1;
wire   [63:0] sum5_cast_fu_485_p1;
wire   [63:0] sum21_cast_fu_506_p1;
wire   [63:0] sum7_cast_fu_516_p1;
wire   [63:0] sum22_cast_fu_537_p1;
wire   [63:0] sum9_cast_fu_547_p1;
wire   [63:0] sum23_cast_fu_568_p1;
wire   [63:0] sum11_cast_fu_578_p1;
wire   [63:0] sum24_cast_fu_599_p1;
wire   [63:0] sum13_cast_fu_609_p1;
wire   [63:0] sum25_cast_fu_630_p1;
wire   [63:0] sum15_cast_fu_640_p1;
wire   [63:0] sum26_cast_fu_661_p1;
wire   [63:0] sum17_cast_fu_693_p1;
wire   [63:0] sum27_cast_fu_698_p1;
wire   [63:0] sum19_cast_fu_721_p1;
wire   [63:0] sum28_cast_fu_732_p1;
wire   [63:0] sum_cast_fu_747_p1;
reg   [31:0] grp_fu_349_p0;
reg   [31:0] grp_fu_349_p1;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state52;
wire   [8:0] k_cast_fu_446_p1;
wire   [8:0] sum8_fu_468_p2;
wire   [6:0] sum5_fu_479_p2;
wire   [4:0] tmp7_fu_490_p2;
wire   [8:0] tmp7_cast_fu_496_p1;
wire   [8:0] sum1_fu_500_p2;
wire   [6:0] sum7_fu_511_p2;
wire   [4:0] tmp18_fu_521_p2;
wire   [8:0] tmp18_cast_fu_527_p1;
wire   [8:0] sum2_fu_531_p2;
wire   [6:0] sum9_fu_542_p2;
wire   [4:0] tmp25_fu_552_p2;
wire   [8:0] tmp29_cast_fu_558_p1;
wire   [8:0] sum4_fu_562_p2;
wire   [6:0] sum6_fu_573_p2;
wire   [4:0] tmp26_fu_583_p2;
wire   [8:0] tmp310_cast_fu_589_p1;
wire   [8:0] sum10_fu_593_p2;
wire   [6:0] sum11_fu_604_p2;
wire   [4:0] tmp27_fu_614_p2;
wire   [8:0] tmp411_cast_fu_620_p1;
wire   [8:0] sum12_fu_624_p2;
wire   [6:0] sum13_fu_635_p2;
wire   [4:0] tmp28_fu_645_p2;
wire   [8:0] tmp512_cast_fu_651_p1;
wire   [8:0] sum14_fu_655_p2;
wire   [4:0] tmp29_fu_666_p2;
wire   [8:0] tmp613_cast_fu_672_p1;
wire   [6:0] sum15_fu_688_p2;
wire   [6:0] k_1_cast_fu_706_p1;
wire   [6:0] sum17_fu_716_p2;
wire   [8:0] k_1_cast1_fu_702_p1;
wire   [8:0] sum18_fu_726_p2;
wire   [5:0] sum_fu_743_p2;
reg   [58:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 59'd1;
end

sample_fadd_32ns_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample_fadd_32ns_hbi_U124(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_349_p0),
    .din1(grp_fu_349_p1),
    .ce(1'b1),
    .dout(grp_fu_349_p2)
);

sample_fmul_32ns_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample_fmul_32ns_ibs_U125(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_363),
    .din1(reg_369),
    .ce(1'b1),
    .dout(grp_fu_355_p2)
);

sample_fmul_32ns_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample_fmul_32ns_ibs_U126(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a1_reg_846),
    .din1(b1_reg_851),
    .ce(1'b1),
    .dout(grp_fu_359_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_434_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_reg_270 <= i_37_reg_765;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_270 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_fu_710_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
        j_reg_281 <= j_1_reg_798;
    end else if (((exitcond1_fu_391_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_reg_281 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_450_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        k_1_reg_338 <= 6'd24;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        k_1_reg_338 <= k_3_reg_949;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        k_reg_314 <= k_2_reg_916;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        k_reg_314 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_fu_710_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
        phi_mul_reg_292 <= next_mul_reg_785;
    end else if (((exitcond1_fu_391_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_mul_reg_292 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state16))) begin
        reg_363 <= A_q1;
    end else if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_363 <= A_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state16))) begin
        reg_369 <= B_q1;
    end else if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_369 <= B_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        temp3_reg_304 <= grp_fu_349_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        temp3_reg_304 <= d_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_450_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        temp_1_reg_326 <= temp3_reg_304;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        temp_1_reg_326 <= grp_fu_349_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        a1_reg_846 <= A_q1;
        b1_reg_851 <= B_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_37_reg_765 <= i_37_fu_396_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_391_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        inneridx_reg_780[6 : 5] <= inneridx_fu_412_p3[6 : 5];
        outrowidx_reg_775[5 : 4] <= outrowidx_fu_406_p2[5 : 4];
        tmp_reg_770 <= tmp_fu_402_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_1_reg_798 <= j_1_fu_440_p2;
        j_cast_reg_790[4 : 0] <= j_cast_fu_430_p1[4 : 0];
        next_mul_reg_785 <= next_mul_fu_420_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        k_2_reg_916 <= k_2_fu_682_p2;
        sum16_reg_911 <= sum16_fu_676_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_fu_710_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state50))) begin
        k_3_reg_949 <= k_3_fu_737_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        outrows_cast_reg_757[5 : 0] <= outrows_cast_fu_387_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9))) begin
        reg_375 <= grp_fu_355_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state14))) begin
        reg_381 <= grp_fu_349_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_450_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        sum3_reg_816 <= sum3_fu_456_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_42_reg_856 <= grp_fu_359_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        A_address0 = sum19_cast_fu_721_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        A_address0 = sum15_cast_fu_640_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        A_address0 = sum11_cast_fu_578_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        A_address0 = sum7_cast_fu_516_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        A_address0 = sum3_cast_fu_463_p1;
    end else begin
        A_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        A_address1 = sum17_cast_fu_693_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        A_address1 = sum13_cast_fu_609_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        A_address1 = sum9_cast_fu_547_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        A_address1 = sum5_cast_fu_485_p1;
    end else begin
        A_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state5))) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state5))) begin
        A_ce1 = 1'b1;
    end else begin
        A_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        B_address0 = sum28_cast_fu_732_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        B_address0 = sum26_cast_fu_661_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        B_address0 = sum24_cast_fu_599_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        B_address0 = sum22_cast_fu_537_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        B_address0 = sum20_cast_fu_474_p1;
    end else begin
        B_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        B_address1 = sum27_cast_fu_698_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        B_address1 = sum25_cast_fu_630_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        B_address1 = sum23_cast_fu_568_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        B_address1 = sum21_cast_fu_506_p1;
    end else begin
        B_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state5))) begin
        B_ce0 = 1'b1;
    end else begin
        B_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state5))) begin
        B_ce1 = 1'b1;
    end else begin
        B_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        C_ce0 = 1'b1;
    end else begin
        C_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond8_fu_710_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
        C_we0 = 1'b1;
    end else begin
        C_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((exitcond1_fu_391_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_fu_391_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        d_ce0 = 1'b1;
    end else begin
        d_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_349_p0 = temp_1_reg_326;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_349_p0 = temp3_reg_304;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state15))) begin
        grp_fu_349_p0 = reg_381;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_349_p0 = reg_375;
    end else begin
        grp_fu_349_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_349_p1 = reg_381;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state15))) begin
        grp_fu_349_p1 = reg_375;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_349_p1 = tmp_42_reg_856;
    end else begin
        grp_fu_349_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond1_fu_391_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond_fu_434_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((tmp_s_fu_450_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state50 : begin
            if (((exitcond8_fu_710_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C_address0 = sum_cast_fu_747_p1;

assign C_d0 = temp_1_reg_326;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign d_address0 = j_cast2_fu_425_p1;

assign exitcond1_fu_391_p2 = ((i_reg_270 == outrows) ? 1'b1 : 1'b0);

assign exitcond8_fu_710_p2 = ((k_1_reg_338 == 6'd32) ? 1'b1 : 1'b0);

assign exitcond_fu_434_p2 = ((j_reg_281 == 5'd16) ? 1'b1 : 1'b0);

assign i_37_fu_396_p2 = (i_reg_270 + 6'd1);

assign inneridx_fu_412_p3 = {{tmp_fu_402_p1}, {5'd0}};

assign j_1_fu_440_p2 = (j_reg_281 + 5'd1);

assign j_cast2_fu_425_p1 = j_reg_281;

assign j_cast_fu_430_p1 = j_reg_281;

assign k_1_cast1_fu_702_p1 = k_1_reg_338;

assign k_1_cast_fu_706_p1 = k_1_reg_338;

assign k_2_fu_682_p2 = (k_reg_314 + 5'd8);

assign k_3_fu_737_p2 = (k_1_reg_338 + 6'd1);

assign k_cast_fu_446_p1 = k_reg_314;

assign next_mul_fu_420_p2 = (phi_mul_reg_292 + outrows_cast_reg_757);

assign outrowidx_fu_406_p2 = i_reg_270 << 6'd4;

assign outrows_cast_fu_387_p1 = outrows;

assign sum10_fu_593_p2 = (phi_mul_reg_292 + tmp310_cast_fu_589_p1);

assign sum11_cast_fu_578_p1 = sum6_fu_573_p2;

assign sum11_fu_604_p2 = (sum3_reg_816 | 7'd5);

assign sum12_fu_624_p2 = (phi_mul_reg_292 + tmp411_cast_fu_620_p1);

assign sum13_cast_fu_609_p1 = sum11_fu_604_p2;

assign sum13_fu_635_p2 = (sum3_reg_816 | 7'd6);

assign sum14_fu_655_p2 = (phi_mul_reg_292 + tmp512_cast_fu_651_p1);

assign sum15_cast_fu_640_p1 = sum13_fu_635_p2;

assign sum15_fu_688_p2 = (sum3_reg_816 | 7'd7);

assign sum16_fu_676_p2 = (phi_mul_reg_292 + tmp613_cast_fu_672_p1);

assign sum17_cast_fu_693_p1 = sum15_fu_688_p2;

assign sum17_fu_716_p2 = (k_1_cast_fu_706_p1 + inneridx_reg_780);

assign sum18_fu_726_p2 = (k_1_cast1_fu_702_p1 + phi_mul_reg_292);

assign sum19_cast_fu_721_p1 = sum17_fu_716_p2;

assign sum1_fu_500_p2 = (phi_mul_reg_292 + tmp7_cast_fu_496_p1);

assign sum20_cast_fu_474_p1 = sum8_fu_468_p2;

assign sum21_cast_fu_506_p1 = sum1_fu_500_p2;

assign sum22_cast_fu_537_p1 = sum2_fu_531_p2;

assign sum23_cast_fu_568_p1 = sum4_fu_562_p2;

assign sum24_cast_fu_599_p1 = sum10_fu_593_p2;

assign sum25_cast_fu_630_p1 = sum12_fu_624_p2;

assign sum26_cast_fu_661_p1 = sum14_fu_655_p2;

assign sum27_cast_fu_698_p1 = sum16_reg_911;

assign sum28_cast_fu_732_p1 = sum18_fu_726_p2;

assign sum2_fu_531_p2 = (phi_mul_reg_292 + tmp18_cast_fu_527_p1);

assign sum3_cast_fu_463_p1 = sum3_fu_456_p3;

assign sum3_fu_456_p3 = {{tmp_reg_770}, {k_reg_314}};

assign sum4_fu_562_p2 = (phi_mul_reg_292 + tmp29_cast_fu_558_p1);

assign sum5_cast_fu_485_p1 = sum5_fu_479_p2;

assign sum5_fu_479_p2 = (sum3_fu_456_p3 | 7'd1);

assign sum6_fu_573_p2 = (sum3_reg_816 | 7'd4);

assign sum7_cast_fu_516_p1 = sum7_fu_511_p2;

assign sum7_fu_511_p2 = (sum3_reg_816 | 7'd2);

assign sum8_fu_468_p2 = (phi_mul_reg_292 + k_cast_fu_446_p1);

assign sum9_cast_fu_547_p1 = sum9_fu_542_p2;

assign sum9_fu_542_p2 = (sum3_reg_816 | 7'd3);

assign sum_cast_fu_747_p1 = sum_fu_743_p2;

assign sum_fu_743_p2 = (j_cast_reg_790 + outrowidx_reg_775);

assign tmp18_cast_fu_527_p1 = tmp18_fu_521_p2;

assign tmp18_fu_521_p2 = (k_reg_314 | 5'd2);

assign tmp25_fu_552_p2 = (k_reg_314 | 5'd3);

assign tmp26_fu_583_p2 = (k_reg_314 | 5'd4);

assign tmp27_fu_614_p2 = (k_reg_314 | 5'd5);

assign tmp28_fu_645_p2 = (k_reg_314 | 5'd6);

assign tmp29_cast_fu_558_p1 = tmp25_fu_552_p2;

assign tmp29_fu_666_p2 = (k_reg_314 | 5'd7);

assign tmp310_cast_fu_589_p1 = tmp26_fu_583_p2;

assign tmp411_cast_fu_620_p1 = tmp27_fu_614_p2;

assign tmp512_cast_fu_651_p1 = tmp28_fu_645_p2;

assign tmp613_cast_fu_672_p1 = tmp29_fu_666_p2;

assign tmp7_cast_fu_496_p1 = tmp7_fu_490_p2;

assign tmp7_fu_490_p2 = (k_reg_314 | 5'd1);

assign tmp_fu_402_p1 = i_reg_270[1:0];

assign tmp_s_fu_450_p2 = ((k_reg_314 == 5'd24) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    outrows_cast_reg_757[8:6] <= 3'b000;
    outrowidx_reg_775[3:0] <= 4'b0000;
    inneridx_reg_780[4:0] <= 5'b00000;
    j_cast_reg_790[5] <= 1'b0;
end

endmodule //k2c_affine_matmul_2
