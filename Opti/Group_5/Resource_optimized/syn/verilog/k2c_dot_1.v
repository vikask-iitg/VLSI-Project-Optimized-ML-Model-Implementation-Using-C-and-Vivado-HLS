// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module k2c_dot_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        C_array_address0,
        C_array_ce0,
        C_array_we0,
        C_array_d0,
        C_array_q0,
        A_array_address0,
        A_array_ce0,
        A_array_q0,
        A_dim,
        A_numel_read,
        B_dim,
        B_numel_read,
        p_read2
);

parameter    ap_ST_fsm_state1 = 124'd1;
parameter    ap_ST_fsm_state2 = 124'd2;
parameter    ap_ST_fsm_state3 = 124'd4;
parameter    ap_ST_fsm_state4 = 124'd8;
parameter    ap_ST_fsm_state5 = 124'd16;
parameter    ap_ST_fsm_state6 = 124'd32;
parameter    ap_ST_fsm_state7 = 124'd64;
parameter    ap_ST_fsm_state8 = 124'd128;
parameter    ap_ST_fsm_state9 = 124'd256;
parameter    ap_ST_fsm_state10 = 124'd512;
parameter    ap_ST_fsm_state11 = 124'd1024;
parameter    ap_ST_fsm_state12 = 124'd2048;
parameter    ap_ST_fsm_state13 = 124'd4096;
parameter    ap_ST_fsm_state14 = 124'd8192;
parameter    ap_ST_fsm_state15 = 124'd16384;
parameter    ap_ST_fsm_state16 = 124'd32768;
parameter    ap_ST_fsm_state17 = 124'd65536;
parameter    ap_ST_fsm_state18 = 124'd131072;
parameter    ap_ST_fsm_state19 = 124'd262144;
parameter    ap_ST_fsm_state20 = 124'd524288;
parameter    ap_ST_fsm_state21 = 124'd1048576;
parameter    ap_ST_fsm_state22 = 124'd2097152;
parameter    ap_ST_fsm_state23 = 124'd4194304;
parameter    ap_ST_fsm_state24 = 124'd8388608;
parameter    ap_ST_fsm_state25 = 124'd16777216;
parameter    ap_ST_fsm_state26 = 124'd33554432;
parameter    ap_ST_fsm_state27 = 124'd67108864;
parameter    ap_ST_fsm_state28 = 124'd134217728;
parameter    ap_ST_fsm_state29 = 124'd268435456;
parameter    ap_ST_fsm_state30 = 124'd536870912;
parameter    ap_ST_fsm_state31 = 124'd1073741824;
parameter    ap_ST_fsm_state32 = 124'd2147483648;
parameter    ap_ST_fsm_state33 = 124'd4294967296;
parameter    ap_ST_fsm_state34 = 124'd8589934592;
parameter    ap_ST_fsm_state35 = 124'd17179869184;
parameter    ap_ST_fsm_state36 = 124'd34359738368;
parameter    ap_ST_fsm_state37 = 124'd68719476736;
parameter    ap_ST_fsm_state38 = 124'd137438953472;
parameter    ap_ST_fsm_state39 = 124'd274877906944;
parameter    ap_ST_fsm_state40 = 124'd549755813888;
parameter    ap_ST_fsm_state41 = 124'd1099511627776;
parameter    ap_ST_fsm_state42 = 124'd2199023255552;
parameter    ap_ST_fsm_state43 = 124'd4398046511104;
parameter    ap_ST_fsm_state44 = 124'd8796093022208;
parameter    ap_ST_fsm_state45 = 124'd17592186044416;
parameter    ap_ST_fsm_state46 = 124'd35184372088832;
parameter    ap_ST_fsm_state47 = 124'd70368744177664;
parameter    ap_ST_fsm_state48 = 124'd140737488355328;
parameter    ap_ST_fsm_state49 = 124'd281474976710656;
parameter    ap_ST_fsm_state50 = 124'd562949953421312;
parameter    ap_ST_fsm_state51 = 124'd1125899906842624;
parameter    ap_ST_fsm_state52 = 124'd2251799813685248;
parameter    ap_ST_fsm_state53 = 124'd4503599627370496;
parameter    ap_ST_fsm_state54 = 124'd9007199254740992;
parameter    ap_ST_fsm_state55 = 124'd18014398509481984;
parameter    ap_ST_fsm_state56 = 124'd36028797018963968;
parameter    ap_ST_fsm_state57 = 124'd72057594037927936;
parameter    ap_ST_fsm_state58 = 124'd144115188075855872;
parameter    ap_ST_fsm_state59 = 124'd288230376151711744;
parameter    ap_ST_fsm_state60 = 124'd576460752303423488;
parameter    ap_ST_fsm_state61 = 124'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 124'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 124'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 124'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 124'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 124'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 124'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 124'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 124'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 124'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 124'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 124'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 124'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 124'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 124'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 124'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 124'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 124'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 124'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 124'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 124'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 124'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 124'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 124'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 124'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 124'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 124'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 124'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 124'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 124'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 124'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 124'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 124'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 124'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 124'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 124'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 124'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 124'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 124'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 124'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 124'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 124'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 124'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 124'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 124'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 124'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 124'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 124'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 124'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 124'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 124'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 124'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 124'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 124'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 124'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 124'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 124'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 124'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 124'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 124'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 124'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 124'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 124'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 124'd10633823966279326983230456482242756608;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] C_array_address0;
output   C_array_ce0;
output   C_array_we0;
output  [31:0] C_array_d0;
input  [31:0] C_array_q0;
output  [6:0] A_array_address0;
output   A_array_ce0;
input  [31:0] A_array_q0;
input  [63:0] A_dim;
input  [63:0] A_numel_read;
input  [63:0] B_dim;
input  [63:0] B_numel_read;
input  [63:0] p_read2;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] C_array_address0;
reg C_array_ce0;
reg C_array_we0;
reg[31:0] C_array_d0;
reg A_array_ce0;

(* fsm_encoding = "none" *) reg   [123:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [2:0] dense_13_output_shap_address0;
reg    dense_13_output_shap_ce0;
wire   [63:0] dense_13_output_shap_q0;
reg   [2:0] dense_14_kernel_shap_address0;
reg    dense_14_kernel_shap_ce0;
wire   [63:0] dense_14_kernel_shap_q0;
reg   [12:0] dense_14_fwork_address0;
reg    dense_14_fwork_ce0;
reg    dense_14_fwork_we0;
reg   [31:0] dense_14_fwork_d0;
wire   [31:0] dense_14_fwork_q0;
wire   [12:0] dense_14_fwork_address1;
reg    dense_14_fwork_ce1;
wire   [31:0] dense_14_fwork_q1;
wire   [11:0] dense_14_kernel_arra_address0;
reg    dense_14_kernel_arra_ce0;
wire   [31:0] dense_14_kernel_arra_q0;
wire   [63:0] i_12_s_fu_869_p2;
reg   [63:0] i_12_s_reg_1474;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond1_fu_852_p2;
wire   [0:0] tmp_1_fu_880_p2;
reg   [0:0] tmp_1_reg_1482;
wire   [0:0] exitcond1_1_fu_875_p2;
wire   [63:0] count_4_1_fu_885_p2;
wire    ap_CS_fsm_state3;
wire   [63:0] i_12_1_fu_891_p2;
reg   [63:0] i_12_1_reg_1491;
wire   [63:0] count_3_cast_fu_920_p1;
reg   [63:0] count_3_cast_reg_1502;
wire    ap_CS_fsm_state5;
wire   [0:0] exitcond2_fu_897_p2;
wire   [63:0] i_15_s_fu_924_p2;
reg   [63:0] i_15_s_reg_1507;
wire   [2:0] count_5_1_fu_935_p2;
reg   [2:0] count_5_1_reg_1515;
wire   [0:0] exitcond2_1_fu_930_p2;
wire   [63:0] i_15_1_fu_941_p2;
reg   [63:0] i_15_1_reg_1520;
wire    ap_CS_fsm_state7;
wire  signed [13:0] tmp_29_fu_947_p1;
reg  signed [13:0] tmp_29_reg_1535;
wire   [8:0] tmp_30_fu_951_p1;
reg   [8:0] tmp_30_reg_1540;
wire  signed [63:0] grp_fu_955_p2;
reg  signed [63:0] free_axesA_reg_1545;
wire    ap_CS_fsm_state74;
wire   [56:0] free_axesB_fu_960_p4;
reg   [56:0] free_axesB_reg_1551;
wire   [63:0] free_axesB_3_fu_969_p1;
reg   [63:0] free_axesB_3_reg_1556;
reg  signed [13:0] free_axesB_cast6_reg_1561;
reg  signed [6:0] free_axesB_cast5_reg_1566;
wire   [63:0] i_16_fu_994_p2;
reg   [63:0] i_16_reg_1571;
wire   [2:0] i_16_cast_fu_999_p2;
reg   [2:0] i_16_cast_reg_1577;
wire   [63:0] i_4_cast_fu_1005_p1;
reg   [63:0] i_4_cast_reg_1582;
wire    ap_CS_fsm_state75;
wire   [0:0] exitcond8_fu_1010_p2;
reg   [0:0] exitcond8_reg_1587;
wire   [63:0] i_18_cast_fu_1021_p1;
reg   [63:0] i_18_cast_reg_1596;
wire    ap_CS_fsm_state76;
wire   [0:0] exitcond8_1_fu_1026_p2;
wire   [2:0] i_18_1_fu_1031_p2;
reg   [2:0] i_18_1_reg_1609;
wire   [2:0] i_19_1_fu_1063_p2;
wire    ap_CS_fsm_state78;
wire   [0:0] tmp_2_fu_1042_p2;
wire   [0:0] tmp_2_1_fu_1058_p2;
wire   [63:0] i_7_cast_fu_1069_p1;
reg   [63:0] i_7_cast_reg_1625;
wire    ap_CS_fsm_state79;
wire   [0:0] tmp_3_fu_1073_p2;
reg   [0:0] tmp_3_reg_1630;
wire   [63:0] i_21_cast_fu_1084_p1;
reg   [63:0] i_21_cast_reg_1639;
wire    ap_CS_fsm_state80;
wire   [0:0] tmp_3_1_fu_1103_p2;
wire   [2:0] i_21_1_fu_1108_p2;
reg   [2:0] i_21_1_reg_1652;
wire   [63:0] j_9_1_fu_1114_p2;
reg   [63:0] j_9_1_reg_1657;
wire   [63:0] i_8_cast_fu_1120_p1;
reg   [63:0] i_8_cast_reg_1662;
wire    ap_CS_fsm_state82;
wire   [0:0] exitcond13_fu_1125_p2;
reg   [0:0] exitcond13_reg_1667;
wire    ap_CS_fsm_state83;
wire   [63:0] i_22_cast_fu_1136_p1;
reg   [63:0] i_22_cast_reg_1681;
wire    ap_CS_fsm_state84;
wire   [0:0] exitcond13_1_fu_1141_p2;
wire   [2:0] i_22_1_fu_1146_p2;
reg   [2:0] i_22_1_reg_1694;
wire   [2:0] dense_13_output_shap_5_gep_fu_318_p3;
wire    ap_CS_fsm_state85;
wire   [63:0] i_9_cast_fu_1152_p1;
reg   [63:0] i_9_cast_reg_1704;
wire    ap_CS_fsm_state87;
wire   [0:0] exitcond12_fu_1157_p2;
reg   [0:0] exitcond12_reg_1709;
wire    ap_CS_fsm_state88;
wire   [63:0] i_23_cast_fu_1168_p1;
reg   [63:0] i_23_cast_reg_1723;
wire    ap_CS_fsm_state89;
wire   [0:0] exitcond12_1_fu_1173_p2;
wire   [2:0] i_23_1_fu_1178_p2;
reg   [2:0] i_23_1_reg_1736;
wire   [2:0] dense_14_kernel_shap_3_gep_fu_375_p3;
wire    ap_CS_fsm_state90;
wire   [63:0] i_23_fu_1189_p2;
reg   [63:0] i_23_reg_1749;
wire    ap_CS_fsm_state92;
wire   [13:0] tmp_33_fu_1195_p1;
reg   [13:0] tmp_33_reg_1754;
wire   [0:0] exitcond9_fu_1184_p2;
wire   [63:0] j_4_cast_fu_1198_p1;
reg   [63:0] j_4_cast_reg_1760;
wire    ap_CS_fsm_state94;
wire   [0:0] exitcond11_fu_1203_p2;
reg   [0:0] exitcond11_reg_1765;
wire    ap_CS_fsm_state95;
wire   [63:0] j_10_cast_fu_1214_p1;
reg   [63:0] j_10_cast_reg_1779;
wire    ap_CS_fsm_state96;
wire   [0:0] exitcond11_1_fu_1219_p2;
wire   [2:0] j_10_1_fu_1224_p2;
reg   [2:0] j_10_1_reg_1792;
wire    ap_CS_fsm_state97;
reg   [31:0] A_array_load_reg_1807;
wire    ap_CS_fsm_state99;
wire   [63:0] i_24_fu_1235_p2;
reg   [63:0] i_24_reg_1815;
wire    ap_CS_fsm_state101;
wire   [63:0] j_5_cast_fu_1245_p1;
reg   [63:0] j_5_cast_reg_1820;
wire    ap_CS_fsm_state103;
wire   [0:0] exitcond14_fu_1250_p2;
reg   [0:0] exitcond14_reg_1825;
wire    ap_CS_fsm_state104;
wire   [63:0] j_11_cast_fu_1261_p1;
reg   [63:0] j_11_cast_reg_1839;
wire    ap_CS_fsm_state105;
wire   [0:0] exitcond10_1_fu_1266_p2;
wire   [2:0] j_11_1_fu_1271_p2;
reg   [2:0] j_11_1_reg_1852;
wire   [2:0] Bsub_addr_9_gep_fu_515_p3;
wire    ap_CS_fsm_state106;
reg   [31:0] dense_14_kernel_arra_2_reg_1867;
wire    ap_CS_fsm_state108;
wire   [63:0] grp_fu_1241_p2;
reg   [63:0] tmp_6_reg_1872;
wire    ap_CS_fsm_state110;
wire   [5:0] i_22_fu_1301_p2;
wire    ap_CS_fsm_state111;
wire   [63:0] i_25_fu_1320_p2;
reg   [63:0] i_25_reg_1888;
wire    ap_CS_fsm_state112;
wire   [6:0] outrowidx_fu_1326_p2;
reg   [6:0] outrowidx_reg_1893;
wire   [0:0] tmp_7_fu_1315_p2;
wire  signed [13:0] inneridx_fu_1404_p2;
reg  signed [13:0] inneridx_reg_1898;
wire   [7:0] k_1_fu_1344_p2;
reg   [7:0] k_1_reg_1906;
wire    ap_CS_fsm_state113;
reg   [12:0] dense_14_fwork_addr_2_reg_1911;
wire   [0:0] exitcond_fu_1339_p2;
wire  signed [13:0] tmp_1_11_fu_1409_p2;
reg  signed [13:0] tmp_1_11_reg_1916;
wire   [56:0] j_fu_1373_p2;
reg   [56:0] j_reg_1924;
wire    ap_CS_fsm_state114;
wire   [0:0] exitcond3_fu_1368_p2;
reg   [4:0] C_array_addr_3_reg_1934;
reg   [31:0] dense_14_fwork_load_reg_1939;
wire    ap_CS_fsm_state115;
reg   [31:0] dense_14_fwork_load_1_reg_1944;
wire   [31:0] grp_fu_848_p2;
reg   [31:0] tmp_s_reg_1949;
wire    ap_CS_fsm_state118;
reg   [31:0] C_array_load_reg_1954;
wire   [31:0] grp_fu_844_p2;
reg   [31:0] tmp_4_reg_1959;
wire    ap_CS_fsm_state123;
reg   [2:0] permA_address0;
reg    permA_ce0;
reg    permA_we0;
reg   [63:0] permA_d0;
wire   [63:0] permA_q0;
reg   [2:0] permA_address1;
reg    permA_ce1;
reg    permA_we1;
wire   [63:0] permA_q1;
reg   [2:0] permB_address0;
reg    permB_ce0;
reg    permB_we0;
reg   [63:0] permB_d0;
wire   [63:0] permB_q0;
reg   [2:0] freeA_address0;
reg    freeA_ce0;
reg    freeA_we0;
reg   [63:0] freeA_d0;
wire   [63:0] freeA_q0;
reg   [2:0] freeB_address0;
reg    freeB_ce0;
reg    freeB_we0;
reg   [63:0] freeB_d0;
wire   [63:0] freeB_q0;
reg   [2:0] newshpA_address0;
reg    newshpA_ce0;
reg    newshpA_we0;
wire   [63:0] newshpA_q0;
reg   [2:0] newshpB_address0;
reg    newshpB_ce0;
reg    newshpB_we0;
wire   [63:0] newshpB_q0;
reg   [2:0] Asub_address0;
reg    Asub_ce0;
reg    Asub_we0;
reg   [63:0] Asub_d0;
wire   [63:0] Asub_q0;
reg   [2:0] Bsub_address0;
reg    Bsub_ce0;
reg    Bsub_we0;
reg   [63:0] Bsub_d0;
wire   [63:0] Bsub_q0;
wire    grp_k2c_idx2sub_fu_824_ap_start;
wire    grp_k2c_idx2sub_fu_824_ap_done;
wire    grp_k2c_idx2sub_fu_824_ap_idle;
wire    grp_k2c_idx2sub_fu_824_ap_ready;
reg   [63:0] grp_k2c_idx2sub_fu_824_idx;
wire   [2:0] grp_k2c_idx2sub_fu_824_sub_address0;
wire    grp_k2c_idx2sub_fu_824_sub_ce0;
wire    grp_k2c_idx2sub_fu_824_sub_we0;
wire   [63:0] grp_k2c_idx2sub_fu_824_sub_d0;
wire   [2:0] grp_k2c_idx2sub_fu_824_shape_address0;
wire    grp_k2c_idx2sub_fu_824_shape_ce0;
reg   [63:0] grp_k2c_idx2sub_fu_824_shape_q0;
reg   [63:0] grp_k2c_idx2sub_fu_824_ndim;
wire    grp_k2c_sub2idx_fu_836_ap_start;
wire    grp_k2c_sub2idx_fu_836_ap_done;
wire    grp_k2c_sub2idx_fu_836_ap_idle;
wire    grp_k2c_sub2idx_fu_836_ap_ready;
wire   [2:0] grp_k2c_sub2idx_fu_836_sub_address0;
wire    grp_k2c_sub2idx_fu_836_sub_ce0;
reg   [63:0] grp_k2c_sub2idx_fu_836_sub_q0;
wire   [2:0] grp_k2c_sub2idx_fu_836_shape_address0;
wire    grp_k2c_sub2idx_fu_836_shape_ce0;
reg   [63:0] grp_k2c_sub2idx_fu_836_shape_q0;
reg   [63:0] grp_k2c_sub2idx_fu_836_ndim;
wire   [63:0] grp_k2c_sub2idx_fu_836_ap_return;
reg   [63:0] count_reg_578;
wire    ap_CS_fsm_state4;
reg   [63:0] i_reg_590;
wire   [63:0] count_4_fu_862_p2;
reg   [63:0] ap_phi_mux_count_1_phi_fu_607_p4;
reg   [63:0] count_1_reg_603;
wire   [0:0] tmp_9_fu_857_p2;
reg   [63:0] count_1_1_reg_615;
reg   [2:0] count_2_reg_627;
wire    ap_CS_fsm_state6;
reg   [63:0] i_1_reg_638;
wire   [2:0] count_5_fu_913_p2;
reg   [2:0] ap_phi_mux_count_3_phi_fu_653_p4;
wire   [0:0] tmp_fu_902_p2;
reg   [2:0] i_4_reg_660;
wire    ap_CS_fsm_state77;
reg   [2:0] i_5_reg_672;
reg   [2:0] i_7_reg_681;
wire    ap_CS_fsm_state81;
reg   [63:0] j_3_reg_693;
reg   [2:0] i_8_reg_706;
wire    ap_CS_fsm_state86;
reg   [2:0] i_9_reg_718;
wire    ap_CS_fsm_state91;
reg   [63:0] i_s_reg_730;
wire    ap_CS_fsm_state100;
reg   [2:0] j_4_reg_743;
wire    ap_CS_fsm_state93;
wire    ap_CS_fsm_state98;
reg   [63:0] i_10_reg_755;
wire    ap_CS_fsm_state109;
reg   [2:0] j_5_reg_768;
wire    ap_CS_fsm_state102;
wire    ap_CS_fsm_state107;
reg   [5:0] i_11_reg_780;
wire   [0:0] exitcond5_fu_1296_p2;
reg   [63:0] i_14_reg_791;
reg   [7:0] k_reg_802;
reg   [56:0] j_s_reg_813;
wire    ap_CS_fsm_state124;
reg    grp_k2c_idx2sub_fu_824_ap_start_reg;
wire   [0:0] exitcond10_fu_1230_p2;
reg    grp_k2c_sub2idx_fu_836_ap_start_reg;
wire   [63:0] count_2_cast4_fu_908_p1;
wire   [63:0] i_5_cast_fu_1037_p1;
wire   [63:0] i_19_cast_fu_1053_p1;
wire   [63:0] j_9_cast_fu_1098_p1;
wire   [63:0] sum_cast_fu_1286_p1;
wire   [63:0] i_11_cast_fu_1291_p1;
wire   [63:0] sum6_cast_fu_1355_p1;
wire   [63:0] sum7_cast_fu_1389_p1;
wire   [63:0] sum2_cast_fu_1399_p1;
wire    ap_CS_fsm_state117;
wire    ap_CS_fsm_state119;
wire    ap_CS_fsm_state116;
wire   [9:0] grp_fu_955_p1;
wire   [2:0] tmp_31_fu_991_p1;
wire   [2:0] i_18_s_fu_1015_p2;
wire   [2:0] i_19_fu_1047_p2;
wire   [2:0] i_21_fu_1078_p2;
wire   [3:0] tmp_32_fu_1088_p1;
wire   [3:0] j_9_s_fu_1092_p2;
wire   [2:0] i_22_s_fu_1130_p2;
wire   [2:0] i_23_s_fu_1162_p2;
wire   [2:0] j_10_s_fu_1208_p2;
wire   [56:0] grp_fu_1241_p0;
wire   [2:0] j_11_s_fu_1255_p2;
wire   [13:0] tmp_36_fu_1277_p1;
wire   [13:0] sum_fu_1281_p2;
wire  signed [6:0] tmp_35_fu_1311_p1;
wire   [8:0] k_cast_fu_1335_p1;
wire   [13:0] k_cast3_fu_1331_p1;
(* use_dsp48 = "no" *) wire   [13:0] sum6_fu_1350_p2;
wire   [13:0] tmp_37_fu_1360_p1;
wire   [13:0] tmp1_fu_1379_p2;
(* use_dsp48 = "no" *) wire   [13:0] sum7_fu_1384_p2;
wire   [6:0] tmp_38_fu_1364_p1;
wire   [6:0] sum2_fu_1394_p2;
wire  signed [13:0] inneridx_fu_1404_p1;
wire   [7:0] tmp_1_11_fu_1409_p0;
reg    grp_fu_955_ap_start;
wire    grp_fu_955_ap_done;
reg   [123:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 124'd1;
#0 grp_k2c_idx2sub_fu_824_ap_start_reg = 1'b0;
#0 grp_k2c_sub2idx_fu_836_ap_start_reg = 1'b0;
end

k2c_dot_1_dense_1qcK #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dense_13_output_shap_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_13_output_shap_address0),
    .ce0(dense_13_output_shap_ce0),
    .q0(dense_13_output_shap_q0)
);

k2c_dot_1_dense_1rcU #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dense_14_kernel_shap_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_14_kernel_shap_address0),
    .ce0(dense_14_kernel_shap_ce0),
    .q0(dense_14_kernel_shap_q0)
);

k2c_dot_1_dense_1sc4 #(
    .DataWidth( 32 ),
    .AddressRange( 4224 ),
    .AddressWidth( 13 ))
dense_14_fwork_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_14_fwork_address0),
    .ce0(dense_14_fwork_ce0),
    .we0(dense_14_fwork_we0),
    .d0(dense_14_fwork_d0),
    .q0(dense_14_fwork_q0),
    .address1(dense_14_fwork_address1),
    .ce1(dense_14_fwork_ce1),
    .q1(dense_14_fwork_q1)
);

k2c_dot_1_dense_1tde #(
    .DataWidth( 32 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
dense_14_kernel_arra_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_14_kernel_arra_address0),
    .ce0(dense_14_kernel_arra_ce0),
    .q0(dense_14_kernel_arra_q0)
);

k2c_dot_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
permA_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(permA_address0),
    .ce0(permA_ce0),
    .we0(permA_we0),
    .d0(permA_d0),
    .q0(permA_q0),
    .address1(permA_address1),
    .ce1(permA_ce1),
    .we1(permA_we1),
    .d1(p_read2),
    .q1(permA_q1)
);

k2c_dot_permB #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
permB_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(permB_address0),
    .ce0(permB_ce0),
    .we0(permB_we0),
    .d0(permB_d0),
    .q0(permB_q0)
);

k2c_dot_permB #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
freeA_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(freeA_address0),
    .ce0(freeA_ce0),
    .we0(freeA_we0),
    .d0(freeA_d0),
    .q0(freeA_q0)
);

k2c_dot_permB #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
freeB_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(freeB_address0),
    .ce0(freeB_ce0),
    .we0(freeB_we0),
    .d0(freeB_d0),
    .q0(freeB_q0)
);

k2c_dot_permB #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
newshpA_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(newshpA_address0),
    .ce0(newshpA_ce0),
    .we0(newshpA_we0),
    .d0(dense_13_output_shap_q0),
    .q0(newshpA_q0)
);

k2c_dot_permB #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
newshpB_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(newshpB_address0),
    .ce0(newshpB_ce0),
    .we0(newshpB_we0),
    .d0(dense_14_kernel_shap_q0),
    .q0(newshpB_q0)
);

k2c_dot_permB #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
Asub_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Asub_address0),
    .ce0(Asub_ce0),
    .we0(Asub_we0),
    .d0(Asub_d0),
    .q0(Asub_q0)
);

k2c_dot_permB #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
Bsub_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Bsub_address0),
    .ce0(Bsub_ce0),
    .we0(Bsub_we0),
    .d0(Bsub_d0),
    .q0(Bsub_q0)
);

k2c_idx2sub grp_k2c_idx2sub_fu_824(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_idx2sub_fu_824_ap_start),
    .ap_done(grp_k2c_idx2sub_fu_824_ap_done),
    .ap_idle(grp_k2c_idx2sub_fu_824_ap_idle),
    .ap_ready(grp_k2c_idx2sub_fu_824_ap_ready),
    .idx(grp_k2c_idx2sub_fu_824_idx),
    .sub_address0(grp_k2c_idx2sub_fu_824_sub_address0),
    .sub_ce0(grp_k2c_idx2sub_fu_824_sub_ce0),
    .sub_we0(grp_k2c_idx2sub_fu_824_sub_we0),
    .sub_d0(grp_k2c_idx2sub_fu_824_sub_d0),
    .shape_address0(grp_k2c_idx2sub_fu_824_shape_address0),
    .shape_ce0(grp_k2c_idx2sub_fu_824_shape_ce0),
    .shape_q0(grp_k2c_idx2sub_fu_824_shape_q0),
    .ndim(grp_k2c_idx2sub_fu_824_ndim)
);

k2c_sub2idx grp_k2c_sub2idx_fu_836(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_sub2idx_fu_836_ap_start),
    .ap_done(grp_k2c_sub2idx_fu_836_ap_done),
    .ap_idle(grp_k2c_sub2idx_fu_836_ap_idle),
    .ap_ready(grp_k2c_sub2idx_fu_836_ap_ready),
    .sub_address0(grp_k2c_sub2idx_fu_836_sub_address0),
    .sub_ce0(grp_k2c_sub2idx_fu_836_sub_ce0),
    .sub_q0(grp_k2c_sub2idx_fu_836_sub_q0),
    .shape_address0(grp_k2c_sub2idx_fu_836_shape_address0),
    .shape_ce0(grp_k2c_sub2idx_fu_836_shape_ce0),
    .shape_q0(grp_k2c_sub2idx_fu_836_shape_q0),
    .ndim(grp_k2c_sub2idx_fu_836_ndim),
    .ap_return(grp_k2c_sub2idx_fu_836_ap_return)
);

sample_fadd_32ns_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample_fadd_32ns_hbi_U64(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(C_array_load_reg_1954),
    .din1(tmp_s_reg_1949),
    .ce(1'b1),
    .dout(grp_fu_844_p2)
);

sample_fmul_32ns_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample_fmul_32ns_ibs_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(dense_14_fwork_load_reg_1939),
    .din1(dense_14_fwork_load_1_reg_1944),
    .ce(1'b1),
    .dout(grp_fu_848_p2)
);

sample_udiv_64ns_udo #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 64 ))
sample_udiv_64ns_udo_U66(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_955_ap_start),
    .done(grp_fu_955_ap_done),
    .din0(A_numel_read),
    .din1(grp_fu_955_p1),
    .ce(1'b1),
    .dout(grp_fu_955_p2)
);

sample_mul_57ns_6vdy #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 57 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sample_mul_57ns_6vdy_U67(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1241_p0),
    .din1(free_axesA_reg_1545),
    .ce(1'b1),
    .dout(grp_fu_1241_p2)
);

sample_mul_mul_14wdI #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
sample_mul_mul_14wdI_U68(
    .din0(tmp_29_reg_1535),
    .din1(inneridx_fu_1404_p1),
    .dout(inneridx_fu_1404_p2)
);

sample_mul_mul_8nxdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
sample_mul_mul_8nxdS_U69(
    .din0(tmp_1_11_fu_1409_p0),
    .din1(free_axesB_cast6_reg_1561),
    .dout(tmp_1_11_fu_1409_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_idx2sub_fu_824_ap_start_reg <= 1'b0;
    end else begin
        if ((((exitcond10_fu_1230_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state101)) | ((exitcond9_fu_1184_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state92)))) begin
            grp_k2c_idx2sub_fu_824_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_idx2sub_fu_824_ap_ready == 1'b1)) begin
            grp_k2c_idx2sub_fu_824_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_sub2idx_fu_836_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state99))) begin
            grp_k2c_sub2idx_fu_836_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_sub2idx_fu_836_ap_ready == 1'b1)) begin
            grp_k2c_sub2idx_fu_836_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_880_p2 == 1'd1) & (exitcond1_1_fu_875_p2 == 1'd0) & (exitcond1_fu_852_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        count_1_1_reg_615 <= ap_phi_mux_count_1_phi_fu_607_p4;
    end else if (((tmp_1_reg_1482 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        count_1_1_reg_615 <= count_4_1_fu_885_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_852_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        if ((tmp_9_fu_857_p2 == 1'd1)) begin
            count_1_reg_603 <= count_reg_578;
        end else if ((tmp_9_fu_857_p2 == 1'd0)) begin
            count_1_reg_603 <= count_4_fu_862_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & ((exitcond1_1_fu_875_p2 == 1'd1) | (exitcond1_fu_852_p2 == 1'd1)))) begin
        count_2_reg_627 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        count_2_reg_627 <= count_5_1_reg_1515;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        count_reg_578 <= count_1_1_reg_615;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        count_reg_578 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond9_fu_1184_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state92))) begin
        i_10_reg_755 <= 64'd0;
    end else if (((grp_k2c_sub2idx_fu_836_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state109))) begin
        i_10_reg_755 <= i_24_reg_1815;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_1296_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state111))) begin
        i_11_reg_780 <= i_22_fu_1301_p2;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        i_11_reg_780 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_1296_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state111))) begin
        i_14_reg_791 <= 64'd0;
    end else if (((exitcond_fu_1339_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state113))) begin
        i_14_reg_791 <= i_25_reg_1888;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & ((exitcond1_1_fu_875_p2 == 1'd1) | (exitcond1_fu_852_p2 == 1'd1)))) begin
        i_1_reg_638 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        i_1_reg_638 <= i_15_1_reg_1520;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        i_4_reg_660 <= i_18_1_reg_1609;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        i_4_reg_660 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state76) & ((exitcond8_1_fu_1026_p2 == 1'd1) | (exitcond8_reg_1587 == 1'd1)))) begin
        i_5_reg_672 <= i_16_cast_reg_1577;
    end else if (((tmp_2_1_fu_1058_p2 == 1'd1) & (tmp_2_fu_1042_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78))) begin
        i_5_reg_672 <= i_19_1_fu_1063_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state78) & ((tmp_2_1_fu_1058_p2 == 1'd0) | (tmp_2_fu_1042_p2 == 1'd0)))) begin
        i_7_reg_681 <= 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        i_7_reg_681 <= i_21_1_reg_1652;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & ((tmp_3_1_fu_1103_p2 == 1'd0) | (tmp_3_reg_1630 == 1'd0)))) begin
        i_8_reg_706 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        i_8_reg_706 <= i_22_1_reg_1694;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state84) & ((exitcond13_1_fu_1141_p2 == 1'd1) | (exitcond13_reg_1667 == 1'd1)))) begin
        i_9_reg_718 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        i_9_reg_718 <= i_23_1_reg_1736;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_reg_590 <= i_12_1_reg_1491;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_590 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state89) & ((exitcond12_1_fu_1173_p2 == 1'd1) | (exitcond12_reg_1709 == 1'd1)))) begin
        i_s_reg_730 <= 64'd0;
    end else if (((grp_k2c_sub2idx_fu_836_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state100))) begin
        i_s_reg_730 <= i_23_reg_1749;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state78) & ((tmp_2_1_fu_1058_p2 == 1'd0) | (tmp_2_fu_1042_p2 == 1'd0)))) begin
        j_3_reg_693 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        j_3_reg_693 <= j_9_1_reg_1657;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        j_4_reg_743 <= j_10_1_reg_1792;
    end else if (((grp_k2c_idx2sub_fu_824_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state93))) begin
        j_4_reg_743 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        j_5_reg_768 <= j_11_1_reg_1852;
    end else if (((grp_k2c_idx2sub_fu_824_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state102))) begin
        j_5_reg_768 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_1339_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state113))) begin
        j_s_reg_813 <= 57'd0;
    end else if ((1'b1 == ap_CS_fsm_state124)) begin
        j_s_reg_813 <= j_reg_1924;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_1368_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state114))) begin
        k_reg_802 <= k_1_reg_1906;
    end else if (((tmp_7_fu_1315_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state112))) begin
        k_reg_802 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        A_array_load_reg_1807 <= A_array_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_1368_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state114))) begin
        C_array_addr_3_reg_1934 <= sum2_cast_fu_1399_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state118)) begin
        C_array_load_reg_1954 <= C_array_q0;
        tmp_s_reg_1949 <= grp_fu_848_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_897_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        count_3_cast_reg_1502[2 : 0] <= count_3_cast_fu_920_p1[2 : 0];
        i_15_s_reg_1507[63 : 1] <= i_15_s_fu_924_p2[63 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_1_fu_930_p2 == 1'd0) & (exitcond2_fu_897_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        count_5_1_reg_1515 <= count_5_1_fu_935_p2;
        i_15_1_reg_1520 <= i_15_1_fu_941_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_1339_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state113))) begin
        dense_14_fwork_addr_2_reg_1911 <= sum6_cast_fu_1355_p1;
        tmp_1_11_reg_1916 <= tmp_1_11_fu_1409_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        dense_14_fwork_load_1_reg_1944 <= dense_14_fwork_q1;
        dense_14_fwork_load_reg_1939 <= dense_14_fwork_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        dense_14_kernel_arra_2_reg_1867 <= dense_14_kernel_arra_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        exitcond11_reg_1765 <= exitcond11_fu_1203_p2;
        j_4_cast_reg_1760[2 : 0] <= j_4_cast_fu_1198_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        exitcond12_reg_1709 <= exitcond12_fu_1157_p2;
        i_9_cast_reg_1704[2 : 0] <= i_9_cast_fu_1152_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        exitcond13_reg_1667 <= exitcond13_fu_1125_p2;
        i_8_cast_reg_1662[2 : 0] <= i_8_cast_fu_1120_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        exitcond14_reg_1825 <= exitcond14_fu_1250_p2;
        j_5_cast_reg_1820[2 : 0] <= j_5_cast_fu_1245_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        exitcond8_reg_1587 <= exitcond8_fu_1010_p2;
        i_4_cast_reg_1582[2 : 0] <= i_4_cast_fu_1005_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        free_axesA_reg_1545 <= grp_fu_955_p2;
        free_axesB_3_reg_1556[56 : 0] <= free_axesB_3_fu_969_p1[56 : 0];
        free_axesB_cast5_reg_1566 <= {{B_numel_read[13:7]}};
        free_axesB_cast6_reg_1561 <= {{B_numel_read[20:7]}};
        free_axesB_reg_1551 <= {{B_numel_read[63:7]}};
        i_16_cast_reg_1577 <= i_16_cast_fu_999_p2;
        i_16_reg_1571 <= i_16_fu_994_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_12_1_reg_1491 <= i_12_1_fu_891_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_852_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_12_s_reg_1474[63 : 1] <= i_12_s_fu_869_p2[63 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_1_fu_1026_p2 == 1'd0) & (exitcond8_reg_1587 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
        i_18_1_reg_1609 <= i_18_1_fu_1031_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_reg_1587 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
        i_18_cast_reg_1596[2 : 1] <= i_18_cast_fu_1021_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_1_fu_1103_p2 == 1'd1) & (tmp_3_reg_1630 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
        i_21_1_reg_1652 <= i_21_1_fu_1108_p2;
        j_9_1_reg_1657 <= j_9_1_fu_1114_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_reg_1630 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
        i_21_cast_reg_1639[2 : 0] <= i_21_cast_fu_1084_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond13_1_fu_1141_p2 == 1'd0) & (exitcond13_reg_1667 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        i_22_1_reg_1694 <= i_22_1_fu_1146_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond13_reg_1667 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        i_22_cast_reg_1681[2 : 1] <= i_22_cast_fu_1136_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond12_1_fu_1173_p2 == 1'd0) & (exitcond12_reg_1709 == 1'd0) & (1'b1 == ap_CS_fsm_state89))) begin
        i_23_1_reg_1736 <= i_23_1_fu_1178_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond12_reg_1709 == 1'd0) & (1'b1 == ap_CS_fsm_state89))) begin
        i_23_cast_reg_1723[2 : 1] <= i_23_cast_fu_1168_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        i_23_reg_1749 <= i_23_fu_1189_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        i_24_reg_1815 <= i_24_fu_1235_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        i_25_reg_1888 <= i_25_fu_1320_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        i_7_cast_reg_1625[2 : 0] <= i_7_cast_fu_1069_p1[2 : 0];
        tmp_3_reg_1630 <= tmp_3_fu_1073_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_7_fu_1315_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state112))) begin
        inneridx_reg_1898 <= inneridx_fu_1404_p2;
        outrowidx_reg_1893 <= outrowidx_fu_1326_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond11_1_fu_1219_p2 == 1'd0) & (exitcond11_reg_1765 == 1'd0) & (1'b1 == ap_CS_fsm_state96))) begin
        j_10_1_reg_1792 <= j_10_1_fu_1224_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond11_reg_1765 == 1'd0) & (1'b1 == ap_CS_fsm_state96))) begin
        j_10_cast_reg_1779[2 : 1] <= j_10_cast_fu_1214_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond10_1_fu_1266_p2 == 1'd0) & (exitcond14_reg_1825 == 1'd0) & (1'b1 == ap_CS_fsm_state105))) begin
        j_11_1_reg_1852 <= j_11_1_fu_1271_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond14_reg_1825 == 1'd0) & (1'b1 == ap_CS_fsm_state105))) begin
        j_11_cast_reg_1839[2 : 1] <= j_11_cast_fu_1261_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state114)) begin
        j_reg_1924 <= j_fu_1373_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        k_1_reg_1906 <= k_1_fu_1344_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_1_fu_875_p2 == 1'd0) & (exitcond1_fu_852_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_1_reg_1482 <= tmp_1_fu_880_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_29_reg_1535 <= tmp_29_fu_947_p1;
        tmp_30_reg_1540 <= tmp_30_fu_951_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond9_fu_1184_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state92))) begin
        tmp_33_reg_1754 <= tmp_33_fu_1195_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state123)) begin
        tmp_4_reg_1959 <= grp_fu_844_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state110)) begin
        tmp_6_reg_1872 <= grp_fu_1241_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        A_array_ce0 = 1'b1;
    end else begin
        A_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        Asub_address0 = j_11_cast_reg_1839;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        Asub_address0 = j_5_cast_reg_1820;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        Asub_address0 = permA_q1;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        Asub_address0 = permA_q0;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        Asub_address0 = grp_k2c_sub2idx_fu_836_sub_address0;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        Asub_address0 = grp_k2c_idx2sub_fu_824_sub_address0;
    end else begin
        Asub_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state95))) begin
        Asub_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        Asub_ce0 = grp_k2c_sub2idx_fu_836_sub_ce0;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        Asub_ce0 = grp_k2c_idx2sub_fu_824_sub_ce0;
    end else begin
        Asub_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state105))) begin
        Asub_d0 = Bsub_q0;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        Asub_d0 = grp_k2c_idx2sub_fu_824_sub_d0;
    end else begin
        Asub_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state107) | ((exitcond14_reg_1825 == 1'd0) & (1'b1 == ap_CS_fsm_state105)))) begin
        Asub_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        Asub_we0 = grp_k2c_idx2sub_fu_824_sub_we0;
    end else begin
        Asub_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        Bsub_address0 = Bsub_addr_9_gep_fu_515_p3;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        Bsub_address0 = permB_q0;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        Bsub_address0 = j_10_cast_reg_1779;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        Bsub_address0 = j_4_cast_reg_1760;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        Bsub_address0 = grp_k2c_sub2idx_fu_836_sub_address0;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        Bsub_address0 = grp_k2c_idx2sub_fu_824_sub_address0;
    end else begin
        Bsub_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state96))) begin
        Bsub_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        Bsub_ce0 = grp_k2c_sub2idx_fu_836_sub_ce0;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        Bsub_ce0 = grp_k2c_idx2sub_fu_824_sub_ce0;
    end else begin
        Bsub_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state96))) begin
        Bsub_d0 = Asub_q0;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        Bsub_d0 = grp_k2c_idx2sub_fu_824_sub_d0;
    end else begin
        Bsub_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state98) | ((exitcond11_reg_1765 == 1'd0) & (1'b1 == ap_CS_fsm_state96)))) begin
        Bsub_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        Bsub_we0 = grp_k2c_idx2sub_fu_824_sub_we0;
    end else begin
        Bsub_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state117))) begin
        C_array_address0 = C_array_addr_3_reg_1934;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        C_array_address0 = i_11_cast_fu_1291_p1;
    end else begin
        C_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state117))) begin
        C_array_ce0 = 1'b1;
    end else begin
        C_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state124)) begin
        C_array_d0 = tmp_4_reg_1959;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        C_array_d0 = 32'd0;
    end else begin
        C_array_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state124) | ((exitcond5_fu_1296_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state111)))) begin
        C_array_we0 = 1'b1;
    end else begin
        C_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_7_fu_1315_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state112)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_fu_852_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        if ((tmp_9_fu_857_p2 == 1'd1)) begin
            ap_phi_mux_count_1_phi_fu_607_p4 = count_reg_578;
        end else if ((tmp_9_fu_857_p2 == 1'd0)) begin
            ap_phi_mux_count_1_phi_fu_607_p4 = count_4_fu_862_p2;
        end else begin
            ap_phi_mux_count_1_phi_fu_607_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_count_1_phi_fu_607_p4 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond2_fu_897_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        if ((tmp_fu_902_p2 == 1'd1)) begin
            ap_phi_mux_count_3_phi_fu_653_p4 = count_2_reg_627;
        end else if ((tmp_fu_902_p2 == 1'd0)) begin
            ap_phi_mux_count_3_phi_fu_653_p4 = count_5_fu_913_p2;
        end else begin
            ap_phi_mux_count_3_phi_fu_653_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_count_3_phi_fu_653_p4 = 'bx;
    end
end

always @ (*) begin
    if (((tmp_7_fu_1315_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state112))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        dense_13_output_shap_address0 = dense_13_output_shap_5_gep_fu_318_p3;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        dense_13_output_shap_address0 = permA_q1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dense_13_output_shap_address0 = p_read2;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        dense_13_output_shap_address0 = grp_k2c_idx2sub_fu_824_shape_address0;
    end else begin
        dense_13_output_shap_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state5))) begin
        dense_13_output_shap_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        dense_13_output_shap_ce0 = grp_k2c_idx2sub_fu_824_shape_ce0;
    end else begin
        dense_13_output_shap_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state114)) begin
        dense_14_fwork_address0 = dense_14_fwork_addr_2_reg_1911;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        dense_14_fwork_address0 = sum_cast_fu_1286_p1;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        dense_14_fwork_address0 = grp_k2c_sub2idx_fu_836_ap_return;
    end else begin
        dense_14_fwork_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state114) | ((grp_k2c_sub2idx_fu_836_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state109)) | ((grp_k2c_sub2idx_fu_836_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state100)))) begin
        dense_14_fwork_ce0 = 1'b1;
    end else begin
        dense_14_fwork_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state114)) begin
        dense_14_fwork_ce1 = 1'b1;
    end else begin
        dense_14_fwork_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        dense_14_fwork_d0 = dense_14_kernel_arra_2_reg_1867;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        dense_14_fwork_d0 = A_array_load_reg_1807;
    end else begin
        dense_14_fwork_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((grp_k2c_sub2idx_fu_836_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state109)) | ((grp_k2c_sub2idx_fu_836_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state100)))) begin
        dense_14_fwork_we0 = 1'b1;
    end else begin
        dense_14_fwork_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state105)) begin
        dense_14_kernel_arra_ce0 = 1'b1;
    end else begin
        dense_14_kernel_arra_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        dense_14_kernel_shap_address0 = dense_14_kernel_shap_3_gep_fu_375_p3;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        dense_14_kernel_shap_address0 = permB_q0;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        dense_14_kernel_shap_address0 = grp_k2c_idx2sub_fu_824_shape_address0;
    end else begin
        dense_14_kernel_shap_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state88))) begin
        dense_14_kernel_shap_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        dense_14_kernel_shap_ce0 = grp_k2c_idx2sub_fu_824_shape_ce0;
    end else begin
        dense_14_kernel_shap_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        freeA_address0 = i_18_cast_fu_1021_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        freeA_address0 = i_4_cast_fu_1005_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        freeA_address0 = count_1_reg_603;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        freeA_address0 = count_reg_578;
    end else begin
        freeA_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        freeA_ce0 = 1'b1;
    end else begin
        freeA_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        freeA_d0 = i_12_s_reg_1474;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        freeA_d0 = i_reg_590;
    end else begin
        freeA_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_1_reg_1482 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_9_fu_857_p2 == 1'd0) & (exitcond1_fu_852_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        freeA_we0 = 1'b1;
    end else begin
        freeA_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        freeB_address0 = j_9_cast_fu_1098_p1;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        freeB_address0 = j_3_reg_693;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        freeB_address0 = count_3_cast_reg_1502;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        freeB_address0 = count_2_cast4_fu_908_p1;
    end else begin
        freeB_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state5))) begin
        freeB_ce0 = 1'b1;
    end else begin
        freeB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        freeB_d0 = i_15_s_reg_1507;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        freeB_d0 = i_1_reg_638;
    end else begin
        freeB_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((tmp_fu_902_p2 == 1'd0) & (exitcond2_fu_897_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        freeB_we0 = 1'b1;
    end else begin
        freeB_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_955_ap_start = 1'b1;
    end else begin
        grp_fu_955_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        grp_k2c_idx2sub_fu_824_idx = i_10_reg_755;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_k2c_idx2sub_fu_824_idx = i_s_reg_730;
    end else begin
        grp_k2c_idx2sub_fu_824_idx = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        grp_k2c_idx2sub_fu_824_ndim = B_dim;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_k2c_idx2sub_fu_824_ndim = A_dim;
    end else begin
        grp_k2c_idx2sub_fu_824_ndim = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        grp_k2c_idx2sub_fu_824_shape_q0 = dense_14_kernel_shap_q0;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_k2c_idx2sub_fu_824_shape_q0 = dense_13_output_shap_q0;
    end else begin
        grp_k2c_idx2sub_fu_824_shape_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        grp_k2c_sub2idx_fu_836_ndim = B_dim;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        grp_k2c_sub2idx_fu_836_ndim = A_dim;
    end else begin
        grp_k2c_sub2idx_fu_836_ndim = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        grp_k2c_sub2idx_fu_836_shape_q0 = newshpB_q0;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        grp_k2c_sub2idx_fu_836_shape_q0 = newshpA_q0;
    end else begin
        grp_k2c_sub2idx_fu_836_shape_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        grp_k2c_sub2idx_fu_836_sub_q0 = Asub_q0;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        grp_k2c_sub2idx_fu_836_sub_q0 = Bsub_q0;
    end else begin
        grp_k2c_sub2idx_fu_836_sub_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        newshpA_address0 = i_22_cast_reg_1681;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        newshpA_address0 = i_8_cast_reg_1662;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        newshpA_address0 = grp_k2c_sub2idx_fu_836_shape_address0;
    end else begin
        newshpA_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state84))) begin
        newshpA_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        newshpA_ce0 = grp_k2c_sub2idx_fu_836_shape_ce0;
    end else begin
        newshpA_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state86) | ((exitcond13_reg_1667 == 1'd0) & (1'b1 == ap_CS_fsm_state84)))) begin
        newshpA_we0 = 1'b1;
    end else begin
        newshpA_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        newshpB_address0 = i_23_cast_reg_1723;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        newshpB_address0 = i_9_cast_reg_1704;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        newshpB_address0 = grp_k2c_sub2idx_fu_836_shape_address0;
    end else begin
        newshpB_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state89))) begin
        newshpB_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        newshpB_ce0 = grp_k2c_sub2idx_fu_836_shape_ce0;
    end else begin
        newshpB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state91) | ((exitcond12_reg_1709 == 1'd0) & (1'b1 == ap_CS_fsm_state89)))) begin
        newshpB_we0 = 1'b1;
    end else begin
        newshpB_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        permA_address0 = j_4_cast_fu_1198_p1;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        permA_address0 = i_5_cast_fu_1037_p1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        permA_address0 = i_18_cast_reg_1596;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        permA_address0 = i_4_cast_reg_1582;
    end else begin
        permA_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        permA_address1 = j_10_cast_fu_1214_p1;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        permA_address1 = i_22_cast_fu_1136_p1;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        permA_address1 = i_8_cast_fu_1120_p1;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        permA_address1 = i_19_cast_fu_1053_p1;
    end else begin
        permA_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state76))) begin
        permA_ce0 = 1'b1;
    end else begin
        permA_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state78))) begin
        permA_ce1 = 1'b1;
    end else begin
        permA_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        permA_d0 = p_read2;
    end else if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76))) begin
        permA_d0 = freeA_q0;
    end else begin
        permA_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state77) | ((tmp_2_fu_1042_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78)) | ((exitcond8_reg_1587 == 1'd0) & (1'b1 == ap_CS_fsm_state76)))) begin
        permA_we0 = 1'b1;
    end else begin
        permA_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_1_fu_1058_p2 == 1'd1) & (tmp_2_fu_1042_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78))) begin
        permA_we1 = 1'b1;
    end else begin
        permA_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state105)) begin
        permB_address0 = j_11_cast_fu_1261_p1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        permB_address0 = j_5_cast_fu_1245_p1;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        permB_address0 = i_23_cast_fu_1168_p1;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        permB_address0 = i_9_cast_fu_1152_p1;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        permB_address0 = i_21_cast_reg_1639;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        permB_address0 = i_7_cast_reg_1625;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        permB_address0 = 64'd0;
    end else begin
        permB_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state78))) begin
        permB_ce0 = 1'b1;
    end else begin
        permB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80))) begin
        permB_d0 = freeB_q0;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        permB_d0 = 64'd0;
    end else begin
        permB_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state81) | ((tmp_3_reg_1630 == 1'd1) & (1'b1 == ap_CS_fsm_state80)) | ((1'b1 == ap_CS_fsm_state78) & ((tmp_2_1_fu_1058_p2 == 1'd0) | (tmp_2_fu_1042_p2 == 1'd0))))) begin
        permB_we0 = 1'b1;
    end else begin
        permB_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & ((exitcond1_1_fu_875_p2 == 1'd1) | (exitcond1_fu_852_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state5 : begin
            if (((exitcond2_1_fu_930_p2 == 1'd0) & (exitcond2_fu_897_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            if (((1'b1 == ap_CS_fsm_state76) & ((exitcond8_1_fu_1026_p2 == 1'd1) | (exitcond8_reg_1587 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state78 : begin
            if (((1'b1 == ap_CS_fsm_state78) & ((tmp_2_1_fu_1058_p2 == 1'd0) | (tmp_2_fu_1042_p2 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            if (((1'b1 == ap_CS_fsm_state80) & ((tmp_3_1_fu_1103_p2 == 1'd0) | (tmp_3_reg_1630 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state82 : begin
            if (((exitcond13_fu_1125_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state82))) begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            if (((1'b1 == ap_CS_fsm_state84) & ((exitcond13_1_fu_1141_p2 == 1'd1) | (exitcond13_reg_1667 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state87 : begin
            if (((exitcond12_fu_1157_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state87))) begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            if (((1'b1 == ap_CS_fsm_state89) & ((exitcond12_1_fu_1173_p2 == 1'd1) | (exitcond12_reg_1709 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state92;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state90;
            end
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state92 : begin
            if (((exitcond9_fu_1184_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state92))) begin
                ap_NS_fsm = ap_ST_fsm_state101;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end
        end
        ap_ST_fsm_state93 : begin
            if (((grp_k2c_idx2sub_fu_824_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state93))) begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end
        end
        ap_ST_fsm_state94 : begin
            if (((exitcond11_fu_1203_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state94))) begin
                ap_NS_fsm = ap_ST_fsm_state96;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            if (((1'b1 == ap_CS_fsm_state96) & ((exitcond11_1_fu_1219_p2 == 1'd1) | (exitcond11_reg_1765 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            if (((grp_k2c_sub2idx_fu_836_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state100))) begin
                ap_NS_fsm = ap_ST_fsm_state92;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state100;
            end
        end
        ap_ST_fsm_state101 : begin
            if (((exitcond10_fu_1230_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state101))) begin
                ap_NS_fsm = ap_ST_fsm_state110;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end
        end
        ap_ST_fsm_state102 : begin
            if (((grp_k2c_idx2sub_fu_824_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state102))) begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end
        end
        ap_ST_fsm_state103 : begin
            if (((exitcond14_fu_1250_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state103))) begin
                ap_NS_fsm = ap_ST_fsm_state105;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state104;
            end
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            if (((1'b1 == ap_CS_fsm_state105) & ((exitcond10_1_fu_1266_p2 == 1'd1) | (exitcond14_reg_1825 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state108;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state106;
            end
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            if (((grp_k2c_sub2idx_fu_836_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state109))) begin
                ap_NS_fsm = ap_ST_fsm_state101;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state109;
            end
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            if (((exitcond5_fu_1296_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state111))) begin
                ap_NS_fsm = ap_ST_fsm_state112;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state111;
            end
        end
        ap_ST_fsm_state112 : begin
            if (((tmp_7_fu_1315_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state112))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end
        end
        ap_ST_fsm_state113 : begin
            if (((exitcond_fu_1339_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state113))) begin
                ap_NS_fsm = ap_ST_fsm_state112;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state114;
            end
        end
        ap_ST_fsm_state114 : begin
            if (((exitcond3_fu_1368_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state114))) begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state115;
            end
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_array_address0 = i_s_reg_730;

assign Bsub_addr_9_gep_fu_515_p3 = permB_q0;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state124 = ap_CS_fsm[32'd123];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

assign count_2_cast4_fu_908_p1 = count_2_reg_627;

assign count_3_cast_fu_920_p1 = ap_phi_mux_count_3_phi_fu_653_p4;

assign count_4_1_fu_885_p2 = (count_1_reg_603 + 64'd1);

assign count_4_fu_862_p2 = (count_reg_578 + 64'd1);

assign count_5_1_fu_935_p2 = (ap_phi_mux_count_3_phi_fu_653_p4 + 3'd1);

assign count_5_fu_913_p2 = (count_2_reg_627 + 3'd1);

assign dense_13_output_shap_5_gep_fu_318_p3 = permA_q1;

assign dense_14_fwork_address1 = sum7_cast_fu_1389_p1;

assign dense_14_kernel_arra_address0 = i_10_reg_755;

assign dense_14_kernel_shap_3_gep_fu_375_p3 = permB_q0;

assign exitcond10_1_fu_1266_p2 = ((j_11_cast_fu_1261_p1 == B_dim) ? 1'b1 : 1'b0);

assign exitcond10_fu_1230_p2 = ((i_10_reg_755 == B_numel_read) ? 1'b1 : 1'b0);

assign exitcond11_1_fu_1219_p2 = ((j_10_cast_fu_1214_p1 == A_dim) ? 1'b1 : 1'b0);

assign exitcond11_fu_1203_p2 = ((j_4_cast_fu_1198_p1 == A_dim) ? 1'b1 : 1'b0);

assign exitcond12_1_fu_1173_p2 = ((i_23_cast_fu_1168_p1 == B_dim) ? 1'b1 : 1'b0);

assign exitcond12_fu_1157_p2 = ((i_9_cast_fu_1152_p1 == B_dim) ? 1'b1 : 1'b0);

assign exitcond13_1_fu_1141_p2 = ((i_22_cast_fu_1136_p1 == A_dim) ? 1'b1 : 1'b0);

assign exitcond13_fu_1125_p2 = ((i_8_cast_fu_1120_p1 == A_dim) ? 1'b1 : 1'b0);

assign exitcond14_fu_1250_p2 = ((j_5_cast_fu_1245_p1 == B_dim) ? 1'b1 : 1'b0);

assign exitcond1_1_fu_875_p2 = ((i_12_s_fu_869_p2 == A_dim) ? 1'b1 : 1'b0);

assign exitcond1_fu_852_p2 = ((i_reg_590 == A_dim) ? 1'b1 : 1'b0);

assign exitcond2_1_fu_930_p2 = ((i_15_s_fu_924_p2 == B_dim) ? 1'b1 : 1'b0);

assign exitcond2_fu_897_p2 = ((i_1_reg_638 == B_dim) ? 1'b1 : 1'b0);

assign exitcond3_fu_1368_p2 = ((j_s_reg_813 == free_axesB_reg_1551) ? 1'b1 : 1'b0);

assign exitcond5_fu_1296_p2 = ((i_11_cast_fu_1291_p1 == tmp_6_reg_1872) ? 1'b1 : 1'b0);

assign exitcond8_1_fu_1026_p2 = ((i_18_cast_fu_1021_p1 == i_16_reg_1571) ? 1'b1 : 1'b0);

assign exitcond8_fu_1010_p2 = ((i_4_cast_fu_1005_p1 == i_16_reg_1571) ? 1'b1 : 1'b0);

assign exitcond9_fu_1184_p2 = ((i_s_reg_730 == A_numel_read) ? 1'b1 : 1'b0);

assign exitcond_fu_1339_p2 = ((k_cast_fu_1335_p1 == tmp_30_reg_1540) ? 1'b1 : 1'b0);

assign free_axesB_3_fu_969_p1 = free_axesB_fu_960_p4;

assign free_axesB_fu_960_p4 = {{B_numel_read[63:7]}};

assign grp_fu_1241_p0 = free_axesB_3_reg_1556;

assign grp_fu_955_p1 = dense_13_output_shap_q0;

assign grp_k2c_idx2sub_fu_824_ap_start = grp_k2c_idx2sub_fu_824_ap_start_reg;

assign grp_k2c_sub2idx_fu_836_ap_start = grp_k2c_sub2idx_fu_836_ap_start_reg;

assign i_11_cast_fu_1291_p1 = i_11_reg_780;

assign i_12_1_fu_891_p2 = (i_reg_590 + 64'd2);

assign i_12_s_fu_869_p2 = (i_reg_590 | 64'd1);

assign i_15_1_fu_941_p2 = (i_1_reg_638 + 64'd2);

assign i_15_s_fu_924_p2 = (i_1_reg_638 | 64'd1);

assign i_16_cast_fu_999_p2 = ($signed(3'd7) + $signed(tmp_31_fu_991_p1));

assign i_16_fu_994_p2 = ($signed(64'd18446744073709551615) + $signed(A_dim));

assign i_18_1_fu_1031_p2 = (i_4_reg_660 + 3'd2);

assign i_18_cast_fu_1021_p1 = i_18_s_fu_1015_p2;

assign i_18_s_fu_1015_p2 = (i_4_reg_660 | 3'd1);

assign i_19_1_fu_1063_p2 = (i_5_reg_672 + 3'd2);

assign i_19_cast_fu_1053_p1 = i_19_fu_1047_p2;

assign i_19_fu_1047_p2 = (i_5_reg_672 + 3'd1);

assign i_21_1_fu_1108_p2 = (i_7_reg_681 + 3'd2);

assign i_21_cast_fu_1084_p1 = i_21_fu_1078_p2;

assign i_21_fu_1078_p2 = (3'd1 + i_7_reg_681);

assign i_22_1_fu_1146_p2 = (i_8_reg_706 + 3'd2);

assign i_22_cast_fu_1136_p1 = i_22_s_fu_1130_p2;

assign i_22_fu_1301_p2 = (i_11_reg_780 + 6'd1);

assign i_22_s_fu_1130_p2 = (i_8_reg_706 | 3'd1);

assign i_23_1_fu_1178_p2 = (i_9_reg_718 + 3'd2);

assign i_23_cast_fu_1168_p1 = i_23_s_fu_1162_p2;

assign i_23_fu_1189_p2 = (i_s_reg_730 + 64'd1);

assign i_23_s_fu_1162_p2 = (i_9_reg_718 | 3'd1);

assign i_24_fu_1235_p2 = (i_10_reg_755 + 64'd1);

assign i_25_fu_1320_p2 = (64'd1 + i_14_reg_791);

assign i_4_cast_fu_1005_p1 = i_4_reg_660;

assign i_5_cast_fu_1037_p1 = i_5_reg_672;

assign i_7_cast_fu_1069_p1 = i_7_reg_681;

assign i_8_cast_fu_1120_p1 = i_8_reg_706;

assign i_9_cast_fu_1152_p1 = i_9_reg_718;

assign inneridx_fu_1404_p1 = i_14_reg_791[13:0];

assign j_10_1_fu_1224_p2 = (j_4_reg_743 + 3'd2);

assign j_10_cast_fu_1214_p1 = j_10_s_fu_1208_p2;

assign j_10_s_fu_1208_p2 = (j_4_reg_743 | 3'd1);

assign j_11_1_fu_1271_p2 = (j_5_reg_768 + 3'd2);

assign j_11_cast_fu_1261_p1 = j_11_s_fu_1255_p2;

assign j_11_s_fu_1255_p2 = (j_5_reg_768 | 3'd1);

assign j_4_cast_fu_1198_p1 = j_4_reg_743;

assign j_5_cast_fu_1245_p1 = j_5_reg_768;

assign j_9_1_fu_1114_p2 = (j_3_reg_693 + 64'd2);

assign j_9_cast_fu_1098_p1 = j_9_s_fu_1092_p2;

assign j_9_s_fu_1092_p2 = (tmp_32_fu_1088_p1 | 4'd1);

assign j_fu_1373_p2 = (57'd1 + j_s_reg_813);

assign k_1_fu_1344_p2 = (k_reg_802 + 8'd1);

assign k_cast3_fu_1331_p1 = k_reg_802;

assign k_cast_fu_1335_p1 = k_reg_802;

assign outrowidx_fu_1326_p2 = ($signed(tmp_35_fu_1311_p1) * $signed(free_axesB_cast5_reg_1566));

assign sum2_cast_fu_1399_p1 = sum2_fu_1394_p2;

assign sum2_fu_1394_p2 = (tmp_38_fu_1364_p1 + outrowidx_reg_1893);

assign sum6_cast_fu_1355_p1 = sum6_fu_1350_p2;

assign sum6_fu_1350_p2 = ($signed(k_cast3_fu_1331_p1) + $signed(inneridx_reg_1898));

assign sum7_cast_fu_1389_p1 = sum7_fu_1384_p2;

assign sum7_fu_1384_p2 = ($signed(tmp1_fu_1379_p2) + $signed(tmp_1_11_reg_1916));

assign sum_cast_fu_1286_p1 = sum_fu_1281_p2;

assign sum_fu_1281_p2 = (tmp_36_fu_1277_p1 + tmp_33_reg_1754);

assign tmp1_fu_1379_p2 = (tmp_37_fu_1360_p1 + tmp_33_reg_1754);

assign tmp_1_11_fu_1409_p0 = k_cast3_fu_1331_p1;

assign tmp_1_fu_880_p2 = ((i_12_s_fu_869_p2 == p_read2) ? 1'b1 : 1'b0);

assign tmp_29_fu_947_p1 = dense_13_output_shap_q0[13:0];

assign tmp_2_1_fu_1058_p2 = ((i_19_cast_fu_1053_p1 < A_dim) ? 1'b1 : 1'b0);

assign tmp_2_fu_1042_p2 = ((i_5_cast_fu_1037_p1 < A_dim) ? 1'b1 : 1'b0);

assign tmp_30_fu_951_p1 = dense_13_output_shap_q0[8:0];

assign tmp_31_fu_991_p1 = A_dim[2:0];

assign tmp_32_fu_1088_p1 = j_3_reg_693[3:0];

assign tmp_33_fu_1195_p1 = A_numel_read[13:0];

assign tmp_35_fu_1311_p1 = i_14_reg_791[6:0];

assign tmp_36_fu_1277_p1 = grp_k2c_sub2idx_fu_836_ap_return[13:0];

assign tmp_37_fu_1360_p1 = j_s_reg_813[13:0];

assign tmp_38_fu_1364_p1 = j_s_reg_813[6:0];

assign tmp_3_1_fu_1103_p2 = ((i_21_cast_fu_1084_p1 < B_dim) ? 1'b1 : 1'b0);

assign tmp_3_fu_1073_p2 = ((i_7_cast_fu_1069_p1 < B_dim) ? 1'b1 : 1'b0);

assign tmp_7_fu_1315_p2 = ((i_14_reg_791 < free_axesA_reg_1545) ? 1'b1 : 1'b0);

assign tmp_9_fu_857_p2 = ((i_reg_590 == p_read2) ? 1'b1 : 1'b0);

assign tmp_fu_902_p2 = ((i_1_reg_638 == 64'd0) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    i_12_s_reg_1474[0] <= 1'b1;
    count_3_cast_reg_1502[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_15_s_reg_1507[0] <= 1'b1;
    free_axesB_3_reg_1556[63:57] <= 7'b0000000;
    i_4_cast_reg_1582[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_18_cast_reg_1596[0] <= 1'b1;
    i_18_cast_reg_1596[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_7_cast_reg_1625[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_21_cast_reg_1639[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_8_cast_reg_1662[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_22_cast_reg_1681[0] <= 1'b1;
    i_22_cast_reg_1681[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_9_cast_reg_1704[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_23_cast_reg_1723[0] <= 1'b1;
    i_23_cast_reg_1723[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    j_4_cast_reg_1760[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    j_10_cast_reg_1779[0] <= 1'b1;
    j_10_cast_reg_1779[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    j_5_cast_reg_1820[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    j_11_cast_reg_1839[0] <= 1'b1;
    j_11_cast_reg_1839[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
end

endmodule //k2c_dot_1
