// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module k2c_affine_matmul (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        C_0_address0,
        C_0_ce0,
        C_0_we0,
        C_0_d0,
        C_1_address0,
        C_1_ce0,
        C_1_we0,
        C_1_d0,
        C_7_address0,
        C_7_ce0,
        C_7_we0,
        C_7_d0,
        A_0_address0,
        A_0_ce0,
        A_0_q0,
        A_1_address0,
        A_1_ce0,
        A_1_q0,
        A_2_address0,
        A_2_ce0,
        A_2_q0,
        A_3_address0,
        A_3_ce0,
        A_3_q0,
        A_4_address0,
        A_4_ce0,
        A_4_q0,
        A_5_address0,
        A_5_ce0,
        A_5_q0,
        A_6_address0,
        A_6_ce0,
        A_6_q0,
        A_7_address0,
        A_7_ce0,
        A_7_q0,
        d_address0,
        d_ce0,
        d_q0,
        outrows
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_pp0_stage0 = 8'd64;
parameter    ap_ST_fsm_state37 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] C_0_address0;
output   C_0_ce0;
output   C_0_we0;
output  [31:0] C_0_d0;
output  [3:0] C_1_address0;
output   C_1_ce0;
output   C_1_we0;
output  [31:0] C_1_d0;
output  [3:0] C_7_address0;
output   C_7_ce0;
output   C_7_we0;
output  [31:0] C_7_d0;
output  [3:0] A_0_address0;
output   A_0_ce0;
input  [31:0] A_0_q0;
output  [3:0] A_1_address0;
output   A_1_ce0;
input  [31:0] A_1_q0;
output  [3:0] A_2_address0;
output   A_2_ce0;
input  [31:0] A_2_q0;
output  [3:0] A_3_address0;
output   A_3_ce0;
input  [31:0] A_3_q0;
output  [3:0] A_4_address0;
output   A_4_ce0;
input  [31:0] A_4_q0;
output  [3:0] A_5_address0;
output   A_5_ce0;
input  [31:0] A_5_q0;
output  [3:0] A_6_address0;
output   A_6_ce0;
input  [31:0] A_6_q0;
output  [3:0] A_7_address0;
output   A_7_ce0;
input  [31:0] A_7_q0;
output  [6:0] d_address0;
output   d_ce0;
input  [31:0] d_q0;
input  [63:0] outrows;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg C_0_ce0;
reg C_0_we0;
reg C_1_ce0;
reg C_1_we0;
reg C_7_ce0;
reg C_7_we0;
reg A_0_ce0;
reg A_1_ce0;
reg A_2_ce0;
reg A_3_ce0;
reg A_4_ce0;
reg A_5_ce0;
reg A_6_ce0;
reg A_7_ce0;
reg d_ce0;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [74:0] indvar_flatten7_reg_270;
reg   [12:0] indvar_flatten8_reg_281;
reg   [6:0] indvar_flatten9_reg_292;
reg   [3:0] indvar_flatten_reg_303;
reg   [1:0] ii_reg_314;
reg   [1:0] jj_reg_325;
wire   [74:0] grp_fu_366_p2;
reg   [74:0] bound_reg_792;
wire    ap_CS_fsm_state6;
wire   [0:0] exitcond_flatten9_fu_372_p2;
reg   [0:0] exitcond_flatten9_reg_797;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state7_pp0_stage0_iter0;
wire    ap_block_state8_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
wire    ap_block_state10_pp0_stage0_iter3;
wire    ap_block_state11_pp0_stage0_iter4;
wire    ap_block_state12_pp0_stage0_iter5;
wire    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state14_pp0_stage0_iter7;
wire    ap_block_state15_pp0_stage0_iter8;
wire    ap_block_state16_pp0_stage0_iter9;
wire    ap_block_state17_pp0_stage0_iter10;
wire    ap_block_state18_pp0_stage0_iter11;
wire    ap_block_state19_pp0_stage0_iter12;
wire    ap_block_state20_pp0_stage0_iter13;
wire    ap_block_state21_pp0_stage0_iter14;
wire    ap_block_state22_pp0_stage0_iter15;
wire    ap_block_state23_pp0_stage0_iter16;
wire    ap_block_state24_pp0_stage0_iter17;
wire    ap_block_state25_pp0_stage0_iter18;
wire    ap_block_state26_pp0_stage0_iter19;
wire    ap_block_state27_pp0_stage0_iter20;
wire    ap_block_state28_pp0_stage0_iter21;
wire    ap_block_state29_pp0_stage0_iter22;
wire    ap_block_state30_pp0_stage0_iter23;
wire    ap_block_state31_pp0_stage0_iter24;
wire    ap_block_state32_pp0_stage0_iter25;
wire    ap_block_state33_pp0_stage0_iter26;
wire    ap_block_state34_pp0_stage0_iter27;
wire    ap_block_state35_pp0_stage0_iter28;
wire    ap_block_state36_pp0_stage0_iter29;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_flatten9_reg_797_pp0_iter1_reg;
reg   [0:0] exitcond_flatten9_reg_797_pp0_iter2_reg;
reg   [0:0] exitcond_flatten9_reg_797_pp0_iter3_reg;
reg   [0:0] exitcond_flatten9_reg_797_pp0_iter4_reg;
reg   [0:0] exitcond_flatten9_reg_797_pp0_iter5_reg;
reg   [0:0] exitcond_flatten9_reg_797_pp0_iter6_reg;
reg   [0:0] exitcond_flatten9_reg_797_pp0_iter7_reg;
reg   [0:0] exitcond_flatten9_reg_797_pp0_iter8_reg;
reg   [0:0] exitcond_flatten9_reg_797_pp0_iter9_reg;
reg   [0:0] exitcond_flatten9_reg_797_pp0_iter10_reg;
reg   [0:0] exitcond_flatten9_reg_797_pp0_iter11_reg;
reg   [0:0] exitcond_flatten9_reg_797_pp0_iter12_reg;
reg   [0:0] exitcond_flatten9_reg_797_pp0_iter13_reg;
reg   [0:0] exitcond_flatten9_reg_797_pp0_iter14_reg;
reg   [0:0] exitcond_flatten9_reg_797_pp0_iter15_reg;
reg   [0:0] exitcond_flatten9_reg_797_pp0_iter16_reg;
reg   [0:0] exitcond_flatten9_reg_797_pp0_iter17_reg;
reg   [0:0] exitcond_flatten9_reg_797_pp0_iter18_reg;
reg   [0:0] exitcond_flatten9_reg_797_pp0_iter19_reg;
reg   [0:0] exitcond_flatten9_reg_797_pp0_iter20_reg;
reg   [0:0] exitcond_flatten9_reg_797_pp0_iter21_reg;
reg   [0:0] exitcond_flatten9_reg_797_pp0_iter22_reg;
reg   [0:0] exitcond_flatten9_reg_797_pp0_iter23_reg;
reg   [0:0] exitcond_flatten9_reg_797_pp0_iter24_reg;
reg   [0:0] exitcond_flatten9_reg_797_pp0_iter25_reg;
reg   [0:0] exitcond_flatten9_reg_797_pp0_iter26_reg;
reg   [0:0] exitcond_flatten9_reg_797_pp0_iter27_reg;
wire   [74:0] indvar_flatten_next9_fu_377_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_flatten_fu_383_p2;
reg   [0:0] exitcond_flatten_reg_806;
reg   [0:0] exitcond_flatten_reg_806_pp0_iter1_reg;
wire   [12:0] indvar_flatten_next8_fu_395_p3;
wire   [0:0] not_exitcond_flatten_fu_403_p2;
reg   [0:0] not_exitcond_flatten_reg_819;
reg   [0:0] not_exitcond_flatten_reg_819_pp0_iter2_reg;
wire   [0:0] exitcond_flatten6_fu_408_p2;
reg   [0:0] exitcond_flatten6_reg_825;
wire   [0:0] exitcond_flatten47_m_fu_414_p2;
reg   [0:0] exitcond_flatten47_m_reg_830;
wire   [0:0] tmp_47_fu_420_p2;
reg   [0:0] tmp_47_reg_835;
reg   [0:0] tmp_47_reg_835_pp0_iter2_reg;
wire   [6:0] indvar_flatten_next7_fu_431_p3;
reg    ap_enable_reg_pp0_iter1;
wire   [0:0] not_exitcond_flatten_5_fu_455_p2;
reg   [0:0] not_exitcond_flatten_5_reg_845;
wire   [0:0] exitcond_flatten_mid_6_fu_460_p2;
reg   [0:0] exitcond_flatten_mid_6_reg_850;
wire   [0:0] tmp_107_fu_471_p2;
reg   [0:0] tmp_107_reg_856;
wire   [3:0] indvar_flatten_next_fu_482_p3;
reg    ap_enable_reg_pp0_iter2;
wire   [1:0] jj_mid2_fu_593_p3;
reg   [1:0] jj_mid2_reg_869;
reg   [1:0] jj_mid2_reg_869_pp0_iter4_reg;
reg   [1:0] jj_mid2_reg_869_pp0_iter5_reg;
reg   [1:0] jj_mid2_reg_869_pp0_iter6_reg;
reg   [1:0] jj_mid2_reg_869_pp0_iter7_reg;
reg   [1:0] jj_mid2_reg_869_pp0_iter8_reg;
reg   [1:0] jj_mid2_reg_869_pp0_iter9_reg;
reg   [1:0] jj_mid2_reg_869_pp0_iter10_reg;
reg   [1:0] jj_mid2_reg_869_pp0_iter11_reg;
reg   [1:0] jj_mid2_reg_869_pp0_iter12_reg;
reg   [1:0] jj_mid2_reg_869_pp0_iter13_reg;
reg   [1:0] jj_mid2_reg_869_pp0_iter14_reg;
reg   [1:0] jj_mid2_reg_869_pp0_iter15_reg;
reg   [1:0] jj_mid2_reg_869_pp0_iter16_reg;
reg   [1:0] jj_mid2_reg_869_pp0_iter17_reg;
reg   [1:0] jj_mid2_reg_869_pp0_iter18_reg;
reg   [1:0] jj_mid2_reg_869_pp0_iter19_reg;
reg   [1:0] jj_mid2_reg_869_pp0_iter20_reg;
reg   [1:0] jj_mid2_reg_869_pp0_iter21_reg;
reg   [1:0] jj_mid2_reg_869_pp0_iter22_reg;
reg   [1:0] jj_mid2_reg_869_pp0_iter23_reg;
reg   [1:0] jj_mid2_reg_869_pp0_iter24_reg;
reg   [1:0] jj_mid2_reg_869_pp0_iter25_reg;
reg   [1:0] jj_mid2_reg_869_pp0_iter26_reg;
reg   [1:0] jj_mid2_reg_869_pp0_iter27_reg;
reg   [1:0] jj_mid2_reg_869_pp0_iter28_reg;
wire   [2:0] arrayNo_mid2_fu_613_p3;
reg   [2:0] arrayNo_mid2_reg_876;
reg   [2:0] arrayNo_mid2_reg_876_pp0_iter4_reg;
wire   [4:0] newIndex11_cast_mid2_fu_631_p3;
reg   [4:0] newIndex11_cast_mid2_reg_881;
wire   [7:0] newIndex_cast_mid2_fu_649_p3;
reg   [7:0] newIndex_cast_mid2_reg_886;
reg   [7:0] newIndex_cast_mid2_reg_886_pp0_iter4_reg;
reg   [7:0] newIndex_cast_mid2_reg_886_pp0_iter5_reg;
reg   [7:0] newIndex_cast_mid2_reg_886_pp0_iter6_reg;
reg   [7:0] newIndex_cast_mid2_reg_886_pp0_iter7_reg;
reg   [7:0] newIndex_cast_mid2_reg_886_pp0_iter8_reg;
reg   [7:0] newIndex_cast_mid2_reg_886_pp0_iter9_reg;
reg   [7:0] newIndex_cast_mid2_reg_886_pp0_iter10_reg;
reg   [7:0] newIndex_cast_mid2_reg_886_pp0_iter11_reg;
reg   [7:0] newIndex_cast_mid2_reg_886_pp0_iter12_reg;
reg   [7:0] newIndex_cast_mid2_reg_886_pp0_iter13_reg;
reg   [7:0] newIndex_cast_mid2_reg_886_pp0_iter14_reg;
reg   [7:0] newIndex_cast_mid2_reg_886_pp0_iter15_reg;
reg   [7:0] newIndex_cast_mid2_reg_886_pp0_iter16_reg;
reg   [7:0] newIndex_cast_mid2_reg_886_pp0_iter17_reg;
reg   [7:0] newIndex_cast_mid2_reg_886_pp0_iter18_reg;
reg   [7:0] newIndex_cast_mid2_reg_886_pp0_iter19_reg;
reg   [7:0] newIndex_cast_mid2_reg_886_pp0_iter20_reg;
reg   [7:0] newIndex_cast_mid2_reg_886_pp0_iter21_reg;
reg   [7:0] newIndex_cast_mid2_reg_886_pp0_iter22_reg;
reg   [7:0] newIndex_cast_mid2_reg_886_pp0_iter23_reg;
reg   [7:0] newIndex_cast_mid2_reg_886_pp0_iter24_reg;
reg   [7:0] newIndex_cast_mid2_reg_886_pp0_iter25_reg;
reg   [7:0] newIndex_cast_mid2_reg_886_pp0_iter26_reg;
reg   [7:0] newIndex_cast_mid2_reg_886_pp0_iter27_reg;
reg   [7:0] newIndex_cast_mid2_reg_886_pp0_iter28_reg;
wire   [1:0] ii_mid2_fu_657_p3;
reg    ap_enable_reg_pp0_iter3;
wire   [1:0] jj_1_fu_665_p2;
wire   [31:0] tmp_s_fu_685_p10;
reg   [31:0] tmp_s_reg_941;
wire   [31:0] sel_tmp5_i_fu_731_p3;
reg   [31:0] sel_tmp5_i_reg_946;
wire   [31:0] tmp_58_fu_739_p10;
reg   [31:0] tmp_58_reg_951;
wire   [31:0] sel_tmp5_i3_fu_769_p3;
reg   [31:0] sel_tmp5_i3_reg_956;
reg   [31:0] sum_reg_966;
wire   [31:0] grp_fu_344_p2;
reg   [31:0] tmp_43_reg_971;
wire   [31:0] grp_fu_348_p2;
reg   [31:0] tmp_53_1_reg_976;
reg   [31:0] tmp_53_1_reg_976_pp0_iter11_reg;
reg   [31:0] tmp_53_1_reg_976_pp0_iter12_reg;
reg   [31:0] tmp_53_1_reg_976_pp0_iter13_reg;
reg   [31:0] tmp_53_1_reg_976_pp0_iter14_reg;
reg   [31:0] tmp_53_1_reg_976_pp0_iter15_reg;
reg   [31:0] tmp_53_1_reg_976_pp0_iter16_reg;
reg   [31:0] tmp_53_1_reg_976_pp0_iter17_reg;
reg   [31:0] tmp_53_1_reg_976_pp0_iter18_reg;
reg   [31:0] tmp_53_1_reg_976_pp0_iter19_reg;
wire   [31:0] grp_fu_336_p2;
reg   [31:0] sum_6_reg_981;
wire   [31:0] grp_fu_340_p2;
reg   [31:0] sum_6_1_reg_986;
wire    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter4;
reg    ap_condition_pp0_exit_iter3_state10;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
wire   [63:0] newIndex11_cast_mid2_1_fu_671_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] jj_cast_fu_777_p1;
wire   [63:0] newIndex_cast_mid2_c_fu_781_p1;
wire   [62:0] tmp_fu_352_p4;
wire   [62:0] grp_fu_366_p0;
wire   [12:0] grp_fu_366_p1;
wire   [12:0] indvar_flatten87_op_fu_389_p2;
wire   [6:0] indvar_flatten45_op_fu_425_p2;
wire   [0:0] exitcond_flatten5_fu_439_p2;
wire   [0:0] exitcond_flatten47_n_fu_450_p2;
wire   [0:0] exitcond_flatten_mid_fu_445_p2;
wire   [0:0] tmp_48_fu_466_p2;
wire   [3:0] indvar_flatten_op_fu_476_p2;
wire   [0:0] tmp_106_fu_490_p1;
wire   [0:0] tmp_56_fu_522_p2;
wire   [0:0] tmp_41_mid_fu_528_p2;
wire   [2:0] p_shl2_fu_494_p3;
wire   [4:0] newIndex1_fu_502_p4;
wire   [7:0] newIndex_fu_512_p4;
wire   [0:0] tmp_41_mid1_fu_533_p2;
wire   [0:0] not_exitcond_flatten_6_fu_566_p2;
wire   [1:0] ii_mid4_fu_538_p3;
wire   [0:0] tmp_41_mid2_fu_571_p2;
wire   [0:0] tmp_52_fu_583_p2;
wire   [0:0] tmp_108_fu_588_p2;
wire   [1:0] ii_1_fu_577_p2;
wire   [0:0] tmp_109_fu_601_p1;
wire   [2:0] p_shl2_mid1_fu_605_p3;
wire   [2:0] arrayNo_mid3_fu_545_p3;
wire   [4:0] newIndex1_mid1_fu_621_p4;
wire   [4:0] newIndex11_cast_mid3_fu_552_p3;
wire   [7:0] newIndex_mid1_fu_639_p4;
wire   [7:0] newIndex_cast_mid5_fu_559_p3;
wire   [63:0] arrayNo_mid2_cast_fu_682_p1;
wire   [0:0] sel_tmp2_i_fu_712_p2;
wire   [0:0] sel_tmp_i_fu_707_p2;
wire   [0:0] tmp_57_fu_725_p2;
wire   [31:0] sel_tmp1_i_fu_717_p3;
wire   [31:0] sel_tmp1_i3_fu_761_p3;
wire    ap_CS_fsm_state37;
reg   [7:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [74:0] grp_fu_366_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
end

sample_fadd_32ns_ocq #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample_fadd_32ns_ocq_U81(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_reg_966),
    .din1(tmp_43_reg_971),
    .ce(1'b1),
    .dout(grp_fu_336_p2)
);

sample_fadd_32ns_ocq #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample_fadd_32ns_ocq_U82(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_6_reg_981),
    .din1(tmp_53_1_reg_976_pp0_iter19_reg),
    .ce(1'b1),
    .dout(grp_fu_340_p2)
);

sample_fmul_32ns_pcA #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample_fmul_32ns_pcA_U83(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_s_reg_941),
    .din1(sel_tmp5_i_reg_946),
    .ce(1'b1),
    .dout(grp_fu_344_p2)
);

sample_fmul_32ns_pcA #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample_fmul_32ns_pcA_U84(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_58_reg_951),
    .din1(sel_tmp5_i3_reg_956),
    .ce(1'b1),
    .dout(grp_fu_348_p2)
);

sample_mul_63ns_1wdI #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 63 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 75 ))
sample_mul_63ns_1wdI_U85(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_366_p0),
    .din1(grp_fu_366_p1),
    .ce(1'b1),
    .dout(grp_fu_366_p2)
);

sample_mux_864_32rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
sample_mux_864_32rcU_U86(
    .din0(A_0_q0),
    .din1(A_1_q0),
    .din2(A_2_q0),
    .din3(A_3_q0),
    .din4(A_4_q0),
    .din5(A_5_q0),
    .din6(A_6_q0),
    .din7(A_7_q0),
    .din8(arrayNo_mid2_cast_fu_682_p1),
    .dout(tmp_s_fu_685_p10)
);

sample_mux_864_32rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
sample_mux_864_32rcU_U87(
    .din0(A_1_q0),
    .din1(A_2_q0),
    .din2(A_3_q0),
    .din3(A_4_q0),
    .din4(A_5_q0),
    .din5(A_6_q0),
    .din6(A_7_q0),
    .din7(A_0_q0),
    .din8(arrayNo_mid2_cast_fu_682_p1),
    .dout(tmp_58_fu_739_p10)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten9_fu_372_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp0_iter29 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter3_state10)) begin
                ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter2;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (exitcond_flatten9_reg_797_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ii_reg_314 <= ii_mid2_fu_657_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ii_reg_314 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten9_fu_372_p2 == 1'd0))) begin
        indvar_flatten7_reg_270 <= indvar_flatten_next9_fu_377_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        indvar_flatten7_reg_270 <= 75'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten9_fu_372_p2 == 1'd0))) begin
        indvar_flatten8_reg_281 <= indvar_flatten_next8_fu_395_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        indvar_flatten8_reg_281 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten9_reg_797 == 1'd0))) begin
        indvar_flatten9_reg_292 <= indvar_flatten_next7_fu_431_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        indvar_flatten9_reg_292 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond_flatten9_reg_797_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_303 <= indvar_flatten_next_fu_482_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        indvar_flatten_reg_303 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (exitcond_flatten9_reg_797_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        jj_reg_325 <= jj_1_fu_665_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        jj_reg_325 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten9_reg_797_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        arrayNo_mid2_reg_876[2] <= arrayNo_mid2_fu_613_p3[2];
        jj_mid2_reg_869 <= jj_mid2_fu_593_p3;
        newIndex11_cast_mid2_reg_881[1] <= newIndex11_cast_mid2_fu_631_p3[1];
        newIndex_cast_mid2_reg_886[4] <= newIndex_cast_mid2_fu_649_p3[4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        arrayNo_mid2_reg_876_pp0_iter4_reg[2] <= arrayNo_mid2_reg_876[2];
        exitcond_flatten9_reg_797_pp0_iter10_reg <= exitcond_flatten9_reg_797_pp0_iter9_reg;
        exitcond_flatten9_reg_797_pp0_iter11_reg <= exitcond_flatten9_reg_797_pp0_iter10_reg;
        exitcond_flatten9_reg_797_pp0_iter12_reg <= exitcond_flatten9_reg_797_pp0_iter11_reg;
        exitcond_flatten9_reg_797_pp0_iter13_reg <= exitcond_flatten9_reg_797_pp0_iter12_reg;
        exitcond_flatten9_reg_797_pp0_iter14_reg <= exitcond_flatten9_reg_797_pp0_iter13_reg;
        exitcond_flatten9_reg_797_pp0_iter15_reg <= exitcond_flatten9_reg_797_pp0_iter14_reg;
        exitcond_flatten9_reg_797_pp0_iter16_reg <= exitcond_flatten9_reg_797_pp0_iter15_reg;
        exitcond_flatten9_reg_797_pp0_iter17_reg <= exitcond_flatten9_reg_797_pp0_iter16_reg;
        exitcond_flatten9_reg_797_pp0_iter18_reg <= exitcond_flatten9_reg_797_pp0_iter17_reg;
        exitcond_flatten9_reg_797_pp0_iter19_reg <= exitcond_flatten9_reg_797_pp0_iter18_reg;
        exitcond_flatten9_reg_797_pp0_iter20_reg <= exitcond_flatten9_reg_797_pp0_iter19_reg;
        exitcond_flatten9_reg_797_pp0_iter21_reg <= exitcond_flatten9_reg_797_pp0_iter20_reg;
        exitcond_flatten9_reg_797_pp0_iter22_reg <= exitcond_flatten9_reg_797_pp0_iter21_reg;
        exitcond_flatten9_reg_797_pp0_iter23_reg <= exitcond_flatten9_reg_797_pp0_iter22_reg;
        exitcond_flatten9_reg_797_pp0_iter24_reg <= exitcond_flatten9_reg_797_pp0_iter23_reg;
        exitcond_flatten9_reg_797_pp0_iter25_reg <= exitcond_flatten9_reg_797_pp0_iter24_reg;
        exitcond_flatten9_reg_797_pp0_iter26_reg <= exitcond_flatten9_reg_797_pp0_iter25_reg;
        exitcond_flatten9_reg_797_pp0_iter27_reg <= exitcond_flatten9_reg_797_pp0_iter26_reg;
        exitcond_flatten9_reg_797_pp0_iter2_reg <= exitcond_flatten9_reg_797_pp0_iter1_reg;
        exitcond_flatten9_reg_797_pp0_iter3_reg <= exitcond_flatten9_reg_797_pp0_iter2_reg;
        exitcond_flatten9_reg_797_pp0_iter4_reg <= exitcond_flatten9_reg_797_pp0_iter3_reg;
        exitcond_flatten9_reg_797_pp0_iter5_reg <= exitcond_flatten9_reg_797_pp0_iter4_reg;
        exitcond_flatten9_reg_797_pp0_iter6_reg <= exitcond_flatten9_reg_797_pp0_iter5_reg;
        exitcond_flatten9_reg_797_pp0_iter7_reg <= exitcond_flatten9_reg_797_pp0_iter6_reg;
        exitcond_flatten9_reg_797_pp0_iter8_reg <= exitcond_flatten9_reg_797_pp0_iter7_reg;
        exitcond_flatten9_reg_797_pp0_iter9_reg <= exitcond_flatten9_reg_797_pp0_iter8_reg;
        jj_mid2_reg_869_pp0_iter10_reg <= jj_mid2_reg_869_pp0_iter9_reg;
        jj_mid2_reg_869_pp0_iter11_reg <= jj_mid2_reg_869_pp0_iter10_reg;
        jj_mid2_reg_869_pp0_iter12_reg <= jj_mid2_reg_869_pp0_iter11_reg;
        jj_mid2_reg_869_pp0_iter13_reg <= jj_mid2_reg_869_pp0_iter12_reg;
        jj_mid2_reg_869_pp0_iter14_reg <= jj_mid2_reg_869_pp0_iter13_reg;
        jj_mid2_reg_869_pp0_iter15_reg <= jj_mid2_reg_869_pp0_iter14_reg;
        jj_mid2_reg_869_pp0_iter16_reg <= jj_mid2_reg_869_pp0_iter15_reg;
        jj_mid2_reg_869_pp0_iter17_reg <= jj_mid2_reg_869_pp0_iter16_reg;
        jj_mid2_reg_869_pp0_iter18_reg <= jj_mid2_reg_869_pp0_iter17_reg;
        jj_mid2_reg_869_pp0_iter19_reg <= jj_mid2_reg_869_pp0_iter18_reg;
        jj_mid2_reg_869_pp0_iter20_reg <= jj_mid2_reg_869_pp0_iter19_reg;
        jj_mid2_reg_869_pp0_iter21_reg <= jj_mid2_reg_869_pp0_iter20_reg;
        jj_mid2_reg_869_pp0_iter22_reg <= jj_mid2_reg_869_pp0_iter21_reg;
        jj_mid2_reg_869_pp0_iter23_reg <= jj_mid2_reg_869_pp0_iter22_reg;
        jj_mid2_reg_869_pp0_iter24_reg <= jj_mid2_reg_869_pp0_iter23_reg;
        jj_mid2_reg_869_pp0_iter25_reg <= jj_mid2_reg_869_pp0_iter24_reg;
        jj_mid2_reg_869_pp0_iter26_reg <= jj_mid2_reg_869_pp0_iter25_reg;
        jj_mid2_reg_869_pp0_iter27_reg <= jj_mid2_reg_869_pp0_iter26_reg;
        jj_mid2_reg_869_pp0_iter28_reg <= jj_mid2_reg_869_pp0_iter27_reg;
        jj_mid2_reg_869_pp0_iter4_reg <= jj_mid2_reg_869;
        jj_mid2_reg_869_pp0_iter5_reg <= jj_mid2_reg_869_pp0_iter4_reg;
        jj_mid2_reg_869_pp0_iter6_reg <= jj_mid2_reg_869_pp0_iter5_reg;
        jj_mid2_reg_869_pp0_iter7_reg <= jj_mid2_reg_869_pp0_iter6_reg;
        jj_mid2_reg_869_pp0_iter8_reg <= jj_mid2_reg_869_pp0_iter7_reg;
        jj_mid2_reg_869_pp0_iter9_reg <= jj_mid2_reg_869_pp0_iter8_reg;
        newIndex_cast_mid2_reg_886_pp0_iter10_reg[4] <= newIndex_cast_mid2_reg_886_pp0_iter9_reg[4];
        newIndex_cast_mid2_reg_886_pp0_iter11_reg[4] <= newIndex_cast_mid2_reg_886_pp0_iter10_reg[4];
        newIndex_cast_mid2_reg_886_pp0_iter12_reg[4] <= newIndex_cast_mid2_reg_886_pp0_iter11_reg[4];
        newIndex_cast_mid2_reg_886_pp0_iter13_reg[4] <= newIndex_cast_mid2_reg_886_pp0_iter12_reg[4];
        newIndex_cast_mid2_reg_886_pp0_iter14_reg[4] <= newIndex_cast_mid2_reg_886_pp0_iter13_reg[4];
        newIndex_cast_mid2_reg_886_pp0_iter15_reg[4] <= newIndex_cast_mid2_reg_886_pp0_iter14_reg[4];
        newIndex_cast_mid2_reg_886_pp0_iter16_reg[4] <= newIndex_cast_mid2_reg_886_pp0_iter15_reg[4];
        newIndex_cast_mid2_reg_886_pp0_iter17_reg[4] <= newIndex_cast_mid2_reg_886_pp0_iter16_reg[4];
        newIndex_cast_mid2_reg_886_pp0_iter18_reg[4] <= newIndex_cast_mid2_reg_886_pp0_iter17_reg[4];
        newIndex_cast_mid2_reg_886_pp0_iter19_reg[4] <= newIndex_cast_mid2_reg_886_pp0_iter18_reg[4];
        newIndex_cast_mid2_reg_886_pp0_iter20_reg[4] <= newIndex_cast_mid2_reg_886_pp0_iter19_reg[4];
        newIndex_cast_mid2_reg_886_pp0_iter21_reg[4] <= newIndex_cast_mid2_reg_886_pp0_iter20_reg[4];
        newIndex_cast_mid2_reg_886_pp0_iter22_reg[4] <= newIndex_cast_mid2_reg_886_pp0_iter21_reg[4];
        newIndex_cast_mid2_reg_886_pp0_iter23_reg[4] <= newIndex_cast_mid2_reg_886_pp0_iter22_reg[4];
        newIndex_cast_mid2_reg_886_pp0_iter24_reg[4] <= newIndex_cast_mid2_reg_886_pp0_iter23_reg[4];
        newIndex_cast_mid2_reg_886_pp0_iter25_reg[4] <= newIndex_cast_mid2_reg_886_pp0_iter24_reg[4];
        newIndex_cast_mid2_reg_886_pp0_iter26_reg[4] <= newIndex_cast_mid2_reg_886_pp0_iter25_reg[4];
        newIndex_cast_mid2_reg_886_pp0_iter27_reg[4] <= newIndex_cast_mid2_reg_886_pp0_iter26_reg[4];
        newIndex_cast_mid2_reg_886_pp0_iter28_reg[4] <= newIndex_cast_mid2_reg_886_pp0_iter27_reg[4];
        newIndex_cast_mid2_reg_886_pp0_iter4_reg[4] <= newIndex_cast_mid2_reg_886[4];
        newIndex_cast_mid2_reg_886_pp0_iter5_reg[4] <= newIndex_cast_mid2_reg_886_pp0_iter4_reg[4];
        newIndex_cast_mid2_reg_886_pp0_iter6_reg[4] <= newIndex_cast_mid2_reg_886_pp0_iter5_reg[4];
        newIndex_cast_mid2_reg_886_pp0_iter7_reg[4] <= newIndex_cast_mid2_reg_886_pp0_iter6_reg[4];
        newIndex_cast_mid2_reg_886_pp0_iter8_reg[4] <= newIndex_cast_mid2_reg_886_pp0_iter7_reg[4];
        newIndex_cast_mid2_reg_886_pp0_iter9_reg[4] <= newIndex_cast_mid2_reg_886_pp0_iter8_reg[4];
        not_exitcond_flatten_reg_819_pp0_iter2_reg <= not_exitcond_flatten_reg_819;
        tmp_47_reg_835_pp0_iter2_reg <= tmp_47_reg_835;
        tmp_53_1_reg_976_pp0_iter11_reg <= tmp_53_1_reg_976;
        tmp_53_1_reg_976_pp0_iter12_reg <= tmp_53_1_reg_976_pp0_iter11_reg;
        tmp_53_1_reg_976_pp0_iter13_reg <= tmp_53_1_reg_976_pp0_iter12_reg;
        tmp_53_1_reg_976_pp0_iter14_reg <= tmp_53_1_reg_976_pp0_iter13_reg;
        tmp_53_1_reg_976_pp0_iter15_reg <= tmp_53_1_reg_976_pp0_iter14_reg;
        tmp_53_1_reg_976_pp0_iter16_reg <= tmp_53_1_reg_976_pp0_iter15_reg;
        tmp_53_1_reg_976_pp0_iter17_reg <= tmp_53_1_reg_976_pp0_iter16_reg;
        tmp_53_1_reg_976_pp0_iter18_reg <= tmp_53_1_reg_976_pp0_iter17_reg;
        tmp_53_1_reg_976_pp0_iter19_reg <= tmp_53_1_reg_976_pp0_iter18_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        bound_reg_792 <= grp_fu_366_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten9_reg_797 == 1'd0))) begin
        exitcond_flatten47_m_reg_830 <= exitcond_flatten47_m_fu_414_p2;
        exitcond_flatten6_reg_825 <= exitcond_flatten6_fu_408_p2;
        not_exitcond_flatten_reg_819 <= not_exitcond_flatten_fu_403_p2;
        tmp_47_reg_835 <= tmp_47_fu_420_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten9_reg_797 <= exitcond_flatten9_fu_372_p2;
        exitcond_flatten9_reg_797_pp0_iter1_reg <= exitcond_flatten9_reg_797;
        exitcond_flatten_reg_806_pp0_iter1_reg <= exitcond_flatten_reg_806;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten9_reg_797_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten_mid_6_reg_850 <= exitcond_flatten_mid_6_fu_460_p2;
        not_exitcond_flatten_5_reg_845 <= not_exitcond_flatten_5_fu_455_p2;
        tmp_107_reg_856 <= tmp_107_fu_471_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten9_fu_372_p2 == 1'd0))) begin
        exitcond_flatten_reg_806 <= exitcond_flatten_fu_383_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten9_reg_797_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sel_tmp5_i3_reg_956[0] <= sel_tmp5_i3_fu_769_p3[0];
sel_tmp5_i3_reg_956[3 : 2] <= sel_tmp5_i3_fu_769_p3[3 : 2];
sel_tmp5_i3_reg_956[10 : 5] <= sel_tmp5_i3_fu_769_p3[10 : 5];
sel_tmp5_i3_reg_956[12] <= sel_tmp5_i3_fu_769_p3[12];
sel_tmp5_i3_reg_956[18 : 14] <= sel_tmp5_i3_fu_769_p3[18 : 14];
sel_tmp5_i3_reg_956[22 : 20] <= sel_tmp5_i3_fu_769_p3[22 : 20];
sel_tmp5_i3_reg_956[25 : 24] <= sel_tmp5_i3_fu_769_p3[25 : 24];
sel_tmp5_i3_reg_956[31] <= sel_tmp5_i3_fu_769_p3[31];
        sel_tmp5_i_reg_946[4 : 1] <= sel_tmp5_i_fu_731_p3[4 : 1];
sel_tmp5_i_reg_946[7 : 6] <= sel_tmp5_i_fu_731_p3[7 : 6];
sel_tmp5_i_reg_946[10 : 9] <= sel_tmp5_i_fu_731_p3[10 : 9];
sel_tmp5_i_reg_946[20 : 12] <= sel_tmp5_i_fu_731_p3[20 : 12];
sel_tmp5_i_reg_946[22] <= sel_tmp5_i_fu_731_p3[22];
sel_tmp5_i_reg_946[31] <= sel_tmp5_i_fu_731_p3[31];
        tmp_58_reg_951 <= tmp_58_fu_739_p10;
        tmp_s_reg_941 <= tmp_s_fu_685_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten9_reg_797_pp0_iter27_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_6_1_reg_986 <= grp_fu_340_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten9_reg_797_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_6_reg_981 <= grp_fu_336_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten9_reg_797_pp0_iter9_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_reg_966 <= d_q0;
        tmp_43_reg_971 <= grp_fu_344_p2;
        tmp_53_1_reg_976 <= grp_fu_348_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_0_ce0 = 1'b1;
    end else begin
        A_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_1_ce0 = 1'b1;
    end else begin
        A_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_2_ce0 = 1'b1;
    end else begin
        A_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_3_ce0 = 1'b1;
    end else begin
        A_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_4_ce0 = 1'b1;
    end else begin
        A_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_5_ce0 = 1'b1;
    end else begin
        A_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_6_ce0 = 1'b1;
    end else begin
        A_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_7_ce0 = 1'b1;
    end else begin
        A_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter29 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        C_0_ce0 = 1'b1;
    end else begin
        C_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((jj_mid2_reg_869_pp0_iter28_reg == 2'd0) & (ap_enable_reg_pp0_iter29 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        C_0_we0 = 1'b1;
    end else begin
        C_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter29 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        C_1_ce0 = 1'b1;
    end else begin
        C_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((jj_mid2_reg_869_pp0_iter28_reg == 2'd1) & (ap_enable_reg_pp0_iter29 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        C_1_we0 = 1'b1;
    end else begin
        C_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter29 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        C_7_ce0 = 1'b1;
    end else begin
        C_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(jj_mid2_reg_869_pp0_iter28_reg == 2'd0) & ~(jj_mid2_reg_869_pp0_iter28_reg == 2'd1) & (ap_enable_reg_pp0_iter29 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        C_7_we0 = 1'b1;
    end else begin
        C_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_condition_pp0_exit_iter3_state10 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter3_state10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        d_ce0 = 1'b1;
    end else begin
        d_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) & ~((ap_enable_reg_pp0_iter28 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter29 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter28 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter29 == 1'b1)) | ((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_0_address0 = newIndex11_cast_mid2_1_fu_671_p1;

assign A_1_address0 = newIndex11_cast_mid2_1_fu_671_p1;

assign A_2_address0 = newIndex11_cast_mid2_1_fu_671_p1;

assign A_3_address0 = newIndex11_cast_mid2_1_fu_671_p1;

assign A_4_address0 = newIndex11_cast_mid2_1_fu_671_p1;

assign A_5_address0 = newIndex11_cast_mid2_1_fu_671_p1;

assign A_6_address0 = newIndex11_cast_mid2_1_fu_671_p1;

assign A_7_address0 = newIndex11_cast_mid2_1_fu_671_p1;

assign C_0_address0 = newIndex_cast_mid2_c_fu_781_p1;

assign C_0_d0 = sum_6_1_reg_986;

assign C_1_address0 = newIndex_cast_mid2_c_fu_781_p1;

assign C_1_d0 = sum_6_1_reg_986;

assign C_7_address0 = newIndex_cast_mid2_c_fu_781_p1;

assign C_7_d0 = sum_6_1_reg_986;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign arrayNo_mid2_cast_fu_682_p1 = arrayNo_mid2_reg_876_pp0_iter4_reg;

assign arrayNo_mid2_fu_613_p3 = ((tmp_41_mid2_fu_571_p2[0:0] === 1'b1) ? p_shl2_mid1_fu_605_p3 : arrayNo_mid3_fu_545_p3);

assign arrayNo_mid3_fu_545_p3 = ((tmp_107_reg_856[0:0] === 1'b1) ? 3'd0 : p_shl2_fu_494_p3);

assign d_address0 = jj_cast_fu_777_p1;

assign exitcond_flatten47_m_fu_414_p2 = (not_exitcond_flatten_fu_403_p2 & exitcond_flatten6_fu_408_p2);

assign exitcond_flatten47_n_fu_450_p2 = (exitcond_flatten6_reg_825 ^ 1'd1);

assign exitcond_flatten5_fu_439_p2 = ((indvar_flatten_reg_303 == 4'd4) ? 1'b1 : 1'b0);

assign exitcond_flatten6_fu_408_p2 = ((indvar_flatten9_reg_292 == 7'd40) ? 1'b1 : 1'b0);

assign exitcond_flatten9_fu_372_p2 = ((indvar_flatten7_reg_270 == bound_reg_792) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_383_p2 = ((indvar_flatten8_reg_281 == 13'd2560) ? 1'b1 : 1'b0);

assign exitcond_flatten_mid_6_fu_460_p2 = (not_exitcond_flatten_5_fu_455_p2 & exitcond_flatten_mid_fu_445_p2);

assign exitcond_flatten_mid_fu_445_p2 = (not_exitcond_flatten_reg_819 & exitcond_flatten5_fu_439_p2);

assign grp_fu_366_p0 = grp_fu_366_p00;

assign grp_fu_366_p00 = tmp_fu_352_p4;

assign grp_fu_366_p1 = 75'd2560;

assign ii_1_fu_577_p2 = (2'd1 + ii_mid4_fu_538_p3);

assign ii_mid2_fu_657_p3 = ((tmp_41_mid2_fu_571_p2[0:0] === 1'b1) ? ii_1_fu_577_p2 : ii_mid4_fu_538_p3);

assign ii_mid4_fu_538_p3 = ((tmp_107_reg_856[0:0] === 1'b1) ? 2'd0 : ii_reg_314);

assign indvar_flatten45_op_fu_425_p2 = (indvar_flatten9_reg_292 + 7'd1);

assign indvar_flatten87_op_fu_389_p2 = (indvar_flatten8_reg_281 + 13'd1);

assign indvar_flatten_next7_fu_431_p3 = ((tmp_47_fu_420_p2[0:0] === 1'b1) ? 7'd1 : indvar_flatten45_op_fu_425_p2);

assign indvar_flatten_next8_fu_395_p3 = ((exitcond_flatten_fu_383_p2[0:0] === 1'b1) ? 13'd1 : indvar_flatten87_op_fu_389_p2);

assign indvar_flatten_next9_fu_377_p2 = (75'd1 + indvar_flatten7_reg_270);

assign indvar_flatten_next_fu_482_p3 = ((tmp_107_fu_471_p2[0:0] === 1'b1) ? 4'd1 : indvar_flatten_op_fu_476_p2);

assign indvar_flatten_op_fu_476_p2 = (indvar_flatten_reg_303 + 4'd1);

assign jj_1_fu_665_p2 = (jj_mid2_fu_593_p3 + 2'd1);

assign jj_cast_fu_777_p1 = jj_mid2_reg_869_pp0_iter8_reg;

assign jj_mid2_fu_593_p3 = ((tmp_108_fu_588_p2[0:0] === 1'b1) ? 2'd0 : jj_reg_325);

assign newIndex11_cast_mid2_1_fu_671_p1 = newIndex11_cast_mid2_reg_881;

assign newIndex11_cast_mid2_fu_631_p3 = ((tmp_41_mid2_fu_571_p2[0:0] === 1'b1) ? newIndex1_mid1_fu_621_p4 : newIndex11_cast_mid3_fu_552_p3);

assign newIndex11_cast_mid3_fu_552_p3 = ((tmp_107_reg_856[0:0] === 1'b1) ? 5'd0 : newIndex1_fu_502_p4);

assign newIndex1_fu_502_p4 = {{{{3'd0}, {tmp_106_fu_490_p1}}}, {1'd0}};

assign newIndex1_mid1_fu_621_p4 = {{{{3'd0}, {tmp_109_fu_601_p1}}}, {1'd0}};

assign newIndex_cast_mid2_c_fu_781_p1 = newIndex_cast_mid2_reg_886_pp0_iter28_reg;

assign newIndex_cast_mid2_fu_649_p3 = ((tmp_41_mid2_fu_571_p2[0:0] === 1'b1) ? newIndex_mid1_fu_639_p4 : newIndex_cast_mid5_fu_559_p3);

assign newIndex_cast_mid5_fu_559_p3 = ((tmp_107_reg_856[0:0] === 1'b1) ? 8'd0 : newIndex_fu_512_p4);

assign newIndex_fu_512_p4 = {{{{3'd0}, {tmp_106_fu_490_p1}}}, {4'd0}};

assign newIndex_mid1_fu_639_p4 = {{{{3'd0}, {tmp_109_fu_601_p1}}}, {4'd0}};

assign not_exitcond_flatten_5_fu_455_p2 = (exitcond_flatten_reg_806_pp0_iter1_reg | exitcond_flatten47_n_fu_450_p2);

assign not_exitcond_flatten_6_fu_566_p2 = (exitcond_flatten_mid_6_reg_850 ^ 1'd1);

assign not_exitcond_flatten_fu_403_p2 = (exitcond_flatten_reg_806 ^ 1'd1);

assign p_shl2_fu_494_p3 = {{tmp_106_fu_490_p1}, {2'd0}};

assign p_shl2_mid1_fu_605_p3 = {{tmp_109_fu_601_p1}, {2'd0}};

assign sel_tmp1_i3_fu_761_p3 = ((sel_tmp2_i_fu_712_p2[0:0] === 1'b1) ? 32'd1028260611 : 32'd3191833738);

assign sel_tmp1_i_fu_717_p3 = ((sel_tmp2_i_fu_712_p2[0:0] === 1'b1) ? 32'd3189285609 : 32'd3193361449);

assign sel_tmp2_i_fu_712_p2 = ((jj_mid2_reg_869_pp0_iter4_reg == 2'd1) ? 1'b1 : 1'b0);

assign sel_tmp5_i3_fu_769_p3 = ((tmp_57_fu_725_p2[0:0] === 1'b1) ? sel_tmp1_i3_fu_761_p3 : 32'd3171702639);

assign sel_tmp5_i_fu_731_p3 = ((tmp_57_fu_725_p2[0:0] === 1'b1) ? sel_tmp1_i_fu_717_p3 : 32'd1040920759);

assign sel_tmp_i_fu_707_p2 = ((jj_mid2_reg_869_pp0_iter4_reg == 2'd0) ? 1'b1 : 1'b0);

assign tmp_106_fu_490_p1 = ii_reg_314[0:0];

assign tmp_107_fu_471_p2 = (tmp_48_fu_466_p2 | exitcond_flatten_reg_806_pp0_iter1_reg);

assign tmp_108_fu_588_p2 = (tmp_52_fu_583_p2 | tmp_47_reg_835_pp0_iter2_reg);

assign tmp_109_fu_601_p1 = ii_1_fu_577_p2[0:0];

assign tmp_41_mid1_fu_533_p2 = (tmp_41_mid_fu_528_p2 & not_exitcond_flatten_5_reg_845);

assign tmp_41_mid2_fu_571_p2 = (tmp_41_mid1_fu_533_p2 & not_exitcond_flatten_6_fu_566_p2);

assign tmp_41_mid_fu_528_p2 = (tmp_56_fu_522_p2 & not_exitcond_flatten_reg_819_pp0_iter2_reg);

assign tmp_47_fu_420_p2 = (exitcond_flatten_reg_806 | exitcond_flatten47_m_fu_414_p2);

assign tmp_48_fu_466_p2 = (exitcond_flatten_mid_6_fu_460_p2 | exitcond_flatten47_m_reg_830);

assign tmp_52_fu_583_p2 = (tmp_41_mid2_fu_571_p2 | exitcond_flatten_mid_6_reg_850);

assign tmp_56_fu_522_p2 = ((jj_reg_325 == 2'd2) ? 1'b1 : 1'b0);

assign tmp_57_fu_725_p2 = (sel_tmp_i_fu_707_p2 | sel_tmp2_i_fu_712_p2);

assign tmp_fu_352_p4 = {{outrows[63:1]}};

always @ (posedge ap_clk) begin
    arrayNo_mid2_reg_876[1:0] <= 2'b00;
    arrayNo_mid2_reg_876_pp0_iter4_reg[1:0] <= 2'b00;
    newIndex11_cast_mid2_reg_881[0] <= 1'b0;
    newIndex11_cast_mid2_reg_881[4:2] <= 3'b000;
    newIndex_cast_mid2_reg_886[3:0] <= 4'b0000;
    newIndex_cast_mid2_reg_886[7:5] <= 3'b000;
    newIndex_cast_mid2_reg_886_pp0_iter4_reg[3:0] <= 4'b0000;
    newIndex_cast_mid2_reg_886_pp0_iter4_reg[7:5] <= 3'b000;
    newIndex_cast_mid2_reg_886_pp0_iter5_reg[3:0] <= 4'b0000;
    newIndex_cast_mid2_reg_886_pp0_iter5_reg[7:5] <= 3'b000;
    newIndex_cast_mid2_reg_886_pp0_iter6_reg[3:0] <= 4'b0000;
    newIndex_cast_mid2_reg_886_pp0_iter6_reg[7:5] <= 3'b000;
    newIndex_cast_mid2_reg_886_pp0_iter7_reg[3:0] <= 4'b0000;
    newIndex_cast_mid2_reg_886_pp0_iter7_reg[7:5] <= 3'b000;
    newIndex_cast_mid2_reg_886_pp0_iter8_reg[3:0] <= 4'b0000;
    newIndex_cast_mid2_reg_886_pp0_iter8_reg[7:5] <= 3'b000;
    newIndex_cast_mid2_reg_886_pp0_iter9_reg[3:0] <= 4'b0000;
    newIndex_cast_mid2_reg_886_pp0_iter9_reg[7:5] <= 3'b000;
    newIndex_cast_mid2_reg_886_pp0_iter10_reg[3:0] <= 4'b0000;
    newIndex_cast_mid2_reg_886_pp0_iter10_reg[7:5] <= 3'b000;
    newIndex_cast_mid2_reg_886_pp0_iter11_reg[3:0] <= 4'b0000;
    newIndex_cast_mid2_reg_886_pp0_iter11_reg[7:5] <= 3'b000;
    newIndex_cast_mid2_reg_886_pp0_iter12_reg[3:0] <= 4'b0000;
    newIndex_cast_mid2_reg_886_pp0_iter12_reg[7:5] <= 3'b000;
    newIndex_cast_mid2_reg_886_pp0_iter13_reg[3:0] <= 4'b0000;
    newIndex_cast_mid2_reg_886_pp0_iter13_reg[7:5] <= 3'b000;
    newIndex_cast_mid2_reg_886_pp0_iter14_reg[3:0] <= 4'b0000;
    newIndex_cast_mid2_reg_886_pp0_iter14_reg[7:5] <= 3'b000;
    newIndex_cast_mid2_reg_886_pp0_iter15_reg[3:0] <= 4'b0000;
    newIndex_cast_mid2_reg_886_pp0_iter15_reg[7:5] <= 3'b000;
    newIndex_cast_mid2_reg_886_pp0_iter16_reg[3:0] <= 4'b0000;
    newIndex_cast_mid2_reg_886_pp0_iter16_reg[7:5] <= 3'b000;
    newIndex_cast_mid2_reg_886_pp0_iter17_reg[3:0] <= 4'b0000;
    newIndex_cast_mid2_reg_886_pp0_iter17_reg[7:5] <= 3'b000;
    newIndex_cast_mid2_reg_886_pp0_iter18_reg[3:0] <= 4'b0000;
    newIndex_cast_mid2_reg_886_pp0_iter18_reg[7:5] <= 3'b000;
    newIndex_cast_mid2_reg_886_pp0_iter19_reg[3:0] <= 4'b0000;
    newIndex_cast_mid2_reg_886_pp0_iter19_reg[7:5] <= 3'b000;
    newIndex_cast_mid2_reg_886_pp0_iter20_reg[3:0] <= 4'b0000;
    newIndex_cast_mid2_reg_886_pp0_iter20_reg[7:5] <= 3'b000;
    newIndex_cast_mid2_reg_886_pp0_iter21_reg[3:0] <= 4'b0000;
    newIndex_cast_mid2_reg_886_pp0_iter21_reg[7:5] <= 3'b000;
    newIndex_cast_mid2_reg_886_pp0_iter22_reg[3:0] <= 4'b0000;
    newIndex_cast_mid2_reg_886_pp0_iter22_reg[7:5] <= 3'b000;
    newIndex_cast_mid2_reg_886_pp0_iter23_reg[3:0] <= 4'b0000;
    newIndex_cast_mid2_reg_886_pp0_iter23_reg[7:5] <= 3'b000;
    newIndex_cast_mid2_reg_886_pp0_iter24_reg[3:0] <= 4'b0000;
    newIndex_cast_mid2_reg_886_pp0_iter24_reg[7:5] <= 3'b000;
    newIndex_cast_mid2_reg_886_pp0_iter25_reg[3:0] <= 4'b0000;
    newIndex_cast_mid2_reg_886_pp0_iter25_reg[7:5] <= 3'b000;
    newIndex_cast_mid2_reg_886_pp0_iter26_reg[3:0] <= 4'b0000;
    newIndex_cast_mid2_reg_886_pp0_iter26_reg[7:5] <= 3'b000;
    newIndex_cast_mid2_reg_886_pp0_iter27_reg[3:0] <= 4'b0000;
    newIndex_cast_mid2_reg_886_pp0_iter27_reg[7:5] <= 3'b000;
    newIndex_cast_mid2_reg_886_pp0_iter28_reg[3:0] <= 4'b0000;
    newIndex_cast_mid2_reg_886_pp0_iter28_reg[7:5] <= 3'b000;
    sel_tmp5_i_reg_946[0] <= 1'b1;
    sel_tmp5_i_reg_946[5:5] <= 1'b1;
    sel_tmp5_i_reg_946[8:8] <= 1'b0;
    sel_tmp5_i_reg_946[11:11] <= 1'b0;
    sel_tmp5_i_reg_946[21:21] <= 1'b0;
    sel_tmp5_i_reg_946[30:23] <= 8'b01111100;
    sel_tmp5_i3_reg_956[1] <= 1'b1;
    sel_tmp5_i3_reg_956[4:4] <= 1'b0;
    sel_tmp5_i3_reg_956[11:11] <= 1'b0;
    sel_tmp5_i3_reg_956[13:13] <= 1'b0;
    sel_tmp5_i3_reg_956[19:19] <= 1'b1;
    sel_tmp5_i3_reg_956[23:23] <= 1'b0;
    sel_tmp5_i3_reg_956[30:26] <= 5'b01111;
end

endmodule //k2c_affine_matmul
