// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module k2c_affine_matmul_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        C_address0,
        C_ce0,
        C_we0,
        C_d0,
        C1_address0,
        C1_ce0,
        C1_we0,
        C1_d0,
        C7_address0,
        C7_ce0,
        C7_we0,
        C7_d0,
        A_address0,
        A_ce0,
        A_q0,
        A8_address0,
        A8_ce0,
        A8_q0,
        d_address0,
        d_ce0,
        d_q0,
        outrows
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state32 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [1:0] C_address0;
output   C_ce0;
output   C_we0;
output  [31:0] C_d0;
output  [1:0] C1_address0;
output   C1_ce0;
output   C1_we0;
output  [31:0] C1_d0;
output  [1:0] C7_address0;
output   C7_ce0;
output   C7_we0;
output  [31:0] C7_d0;
output  [3:0] A_address0;
output   A_ce0;
input  [31:0] A_q0;
output  [3:0] A8_address0;
output   A8_ce0;
input  [31:0] A8_q0;
output  [4:0] d_address0;
output   d_ce0;
input  [31:0] d_q0;
input  [7:0] outrows;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg C_ce0;
reg C_we0;
reg C1_ce0;
reg C1_we0;
reg C7_ce0;
reg C7_we0;
reg A_ce0;
reg A8_ce0;
reg d_ce0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [18:0] indvar_flatten4_reg_176;
reg   [13:0] indvar_flatten5_reg_187;
reg   [9:0] indvar_flatten6_reg_198;
reg   [3:0] indvar_flatten_reg_209;
reg   [1:0] ii_reg_220;
reg   [1:0] jj_reg_231;
wire   [18:0] tmp_28_fu_268_p3;
reg   [18:0] tmp_28_reg_603;
wire   [0:0] exitcond_flatten6_fu_276_p2;
reg   [0:0] exitcond_flatten6_reg_608;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_state15_pp0_stage0_iter13;
wire    ap_block_state16_pp0_stage0_iter14;
wire    ap_block_state17_pp0_stage0_iter15;
wire    ap_block_state18_pp0_stage0_iter16;
wire    ap_block_state19_pp0_stage0_iter17;
wire    ap_block_state20_pp0_stage0_iter18;
wire    ap_block_state21_pp0_stage0_iter19;
wire    ap_block_state22_pp0_stage0_iter20;
wire    ap_block_state23_pp0_stage0_iter21;
wire    ap_block_state24_pp0_stage0_iter22;
wire    ap_block_state25_pp0_stage0_iter23;
wire    ap_block_state26_pp0_stage0_iter24;
wire    ap_block_state27_pp0_stage0_iter25;
wire    ap_block_state28_pp0_stage0_iter26;
wire    ap_block_state29_pp0_stage0_iter27;
wire    ap_block_state30_pp0_stage0_iter28;
wire    ap_block_state31_pp0_stage0_iter29;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_flatten6_reg_608_pp0_iter1_reg;
reg   [0:0] exitcond_flatten6_reg_608_pp0_iter2_reg;
reg   [0:0] exitcond_flatten6_reg_608_pp0_iter3_reg;
reg   [0:0] exitcond_flatten6_reg_608_pp0_iter4_reg;
reg   [0:0] exitcond_flatten6_reg_608_pp0_iter5_reg;
reg   [0:0] exitcond_flatten6_reg_608_pp0_iter6_reg;
reg   [0:0] exitcond_flatten6_reg_608_pp0_iter7_reg;
reg   [0:0] exitcond_flatten6_reg_608_pp0_iter8_reg;
reg   [0:0] exitcond_flatten6_reg_608_pp0_iter9_reg;
reg   [0:0] exitcond_flatten6_reg_608_pp0_iter10_reg;
reg   [0:0] exitcond_flatten6_reg_608_pp0_iter11_reg;
reg   [0:0] exitcond_flatten6_reg_608_pp0_iter12_reg;
reg   [0:0] exitcond_flatten6_reg_608_pp0_iter13_reg;
reg   [0:0] exitcond_flatten6_reg_608_pp0_iter14_reg;
reg   [0:0] exitcond_flatten6_reg_608_pp0_iter15_reg;
reg   [0:0] exitcond_flatten6_reg_608_pp0_iter16_reg;
reg   [0:0] exitcond_flatten6_reg_608_pp0_iter17_reg;
reg   [0:0] exitcond_flatten6_reg_608_pp0_iter18_reg;
reg   [0:0] exitcond_flatten6_reg_608_pp0_iter19_reg;
reg   [0:0] exitcond_flatten6_reg_608_pp0_iter20_reg;
reg   [0:0] exitcond_flatten6_reg_608_pp0_iter21_reg;
reg   [0:0] exitcond_flatten6_reg_608_pp0_iter22_reg;
reg   [0:0] exitcond_flatten6_reg_608_pp0_iter23_reg;
reg   [0:0] exitcond_flatten6_reg_608_pp0_iter24_reg;
reg   [0:0] exitcond_flatten6_reg_608_pp0_iter25_reg;
reg   [0:0] exitcond_flatten6_reg_608_pp0_iter26_reg;
reg   [0:0] exitcond_flatten6_reg_608_pp0_iter27_reg;
wire   [18:0] indvar_flatten_next6_fu_281_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_flatten_fu_287_p2;
reg   [0:0] exitcond_flatten_reg_617;
reg   [0:0] exitcond_flatten_reg_617_pp0_iter1_reg;
wire   [13:0] indvar_flatten_next5_fu_299_p3;
wire   [0:0] not_exitcond_flatten_fu_307_p2;
reg   [0:0] not_exitcond_flatten_reg_630;
reg   [0:0] not_exitcond_flatten_reg_630_pp0_iter2_reg;
wire   [0:0] exitcond_flatten4_fu_312_p2;
reg   [0:0] exitcond_flatten4_reg_636;
wire   [0:0] exitcond_flatten33_m_fu_318_p2;
reg   [0:0] exitcond_flatten33_m_reg_641;
wire   [0:0] tmp_31_fu_324_p2;
reg   [0:0] tmp_31_reg_646;
reg   [0:0] tmp_31_reg_646_pp0_iter2_reg;
wire   [9:0] indvar_flatten_next4_fu_335_p3;
reg    ap_enable_reg_pp0_iter1;
wire   [0:0] not_exitcond_flatten_3_fu_359_p2;
reg   [0:0] not_exitcond_flatten_3_reg_656;
wire   [0:0] exitcond_flatten_mid_4_fu_364_p2;
reg   [0:0] exitcond_flatten_mid_4_reg_661;
wire   [0:0] tmp_103_fu_375_p2;
reg   [0:0] tmp_103_reg_667;
wire   [3:0] indvar_flatten_next_fu_386_p3;
reg    ap_enable_reg_pp0_iter2;
wire   [1:0] jj_mid2_fu_480_p3;
reg   [1:0] jj_mid2_reg_679;
reg   [1:0] jj_mid2_reg_679_pp0_iter4_reg;
reg   [1:0] jj_mid2_reg_679_pp0_iter5_reg;
reg   [1:0] jj_mid2_reg_679_pp0_iter6_reg;
reg   [1:0] jj_mid2_reg_679_pp0_iter7_reg;
reg   [1:0] jj_mid2_reg_679_pp0_iter8_reg;
reg   [1:0] jj_mid2_reg_679_pp0_iter9_reg;
reg   [1:0] jj_mid2_reg_679_pp0_iter10_reg;
reg   [1:0] jj_mid2_reg_679_pp0_iter11_reg;
reg   [1:0] jj_mid2_reg_679_pp0_iter12_reg;
reg   [1:0] jj_mid2_reg_679_pp0_iter13_reg;
reg   [1:0] jj_mid2_reg_679_pp0_iter14_reg;
reg   [1:0] jj_mid2_reg_679_pp0_iter15_reg;
reg   [1:0] jj_mid2_reg_679_pp0_iter16_reg;
reg   [1:0] jj_mid2_reg_679_pp0_iter17_reg;
reg   [1:0] jj_mid2_reg_679_pp0_iter18_reg;
reg   [1:0] jj_mid2_reg_679_pp0_iter19_reg;
reg   [1:0] jj_mid2_reg_679_pp0_iter20_reg;
reg   [1:0] jj_mid2_reg_679_pp0_iter21_reg;
reg   [1:0] jj_mid2_reg_679_pp0_iter22_reg;
reg   [1:0] jj_mid2_reg_679_pp0_iter23_reg;
reg   [1:0] jj_mid2_reg_679_pp0_iter24_reg;
reg   [1:0] jj_mid2_reg_679_pp0_iter25_reg;
reg   [1:0] jj_mid2_reg_679_pp0_iter26_reg;
reg   [1:0] jj_mid2_reg_679_pp0_iter27_reg;
reg   [1:0] jj_mid2_reg_679_pp0_iter28_reg;
wire   [4:0] newIndex8_cast_mid2_fu_500_p3;
reg   [4:0] newIndex8_cast_mid2_reg_686;
wire   [5:0] newIndex_cast_mid2_fu_518_p3;
reg   [5:0] newIndex_cast_mid2_reg_691;
reg   [5:0] newIndex_cast_mid2_reg_691_pp0_iter4_reg;
reg   [5:0] newIndex_cast_mid2_reg_691_pp0_iter5_reg;
reg   [5:0] newIndex_cast_mid2_reg_691_pp0_iter6_reg;
reg   [5:0] newIndex_cast_mid2_reg_691_pp0_iter7_reg;
reg   [5:0] newIndex_cast_mid2_reg_691_pp0_iter8_reg;
reg   [5:0] newIndex_cast_mid2_reg_691_pp0_iter9_reg;
reg   [5:0] newIndex_cast_mid2_reg_691_pp0_iter10_reg;
reg   [5:0] newIndex_cast_mid2_reg_691_pp0_iter11_reg;
reg   [5:0] newIndex_cast_mid2_reg_691_pp0_iter12_reg;
reg   [5:0] newIndex_cast_mid2_reg_691_pp0_iter13_reg;
reg   [5:0] newIndex_cast_mid2_reg_691_pp0_iter14_reg;
reg   [5:0] newIndex_cast_mid2_reg_691_pp0_iter15_reg;
reg   [5:0] newIndex_cast_mid2_reg_691_pp0_iter16_reg;
reg   [5:0] newIndex_cast_mid2_reg_691_pp0_iter17_reg;
reg   [5:0] newIndex_cast_mid2_reg_691_pp0_iter18_reg;
reg   [5:0] newIndex_cast_mid2_reg_691_pp0_iter19_reg;
reg   [5:0] newIndex_cast_mid2_reg_691_pp0_iter20_reg;
reg   [5:0] newIndex_cast_mid2_reg_691_pp0_iter21_reg;
reg   [5:0] newIndex_cast_mid2_reg_691_pp0_iter22_reg;
reg   [5:0] newIndex_cast_mid2_reg_691_pp0_iter23_reg;
reg   [5:0] newIndex_cast_mid2_reg_691_pp0_iter24_reg;
reg   [5:0] newIndex_cast_mid2_reg_691_pp0_iter25_reg;
reg   [5:0] newIndex_cast_mid2_reg_691_pp0_iter26_reg;
reg   [5:0] newIndex_cast_mid2_reg_691_pp0_iter27_reg;
reg   [5:0] newIndex_cast_mid2_reg_691_pp0_iter28_reg;
wire   [1:0] ii_mid2_fu_526_p3;
reg    ap_enable_reg_pp0_iter3;
wire   [1:0] jj_1_fu_534_p2;
reg   [31:0] A_load_reg_716;
wire   [31:0] sel_tmp5_i_fu_569_p3;
reg   [31:0] sel_tmp5_i_reg_721;
reg   [31:0] A8_load_reg_726;
wire   [31:0] sel_tmp5_i2_fu_585_p3;
reg   [31:0] sel_tmp5_i2_reg_731;
reg   [31:0] sum_reg_741;
wire   [31:0] grp_fu_250_p2;
reg   [31:0] tmp_40_reg_746;
wire   [31:0] grp_fu_254_p2;
reg   [31:0] tmp_53_1_reg_751;
reg   [31:0] tmp_53_1_reg_751_pp0_iter11_reg;
reg   [31:0] tmp_53_1_reg_751_pp0_iter12_reg;
reg   [31:0] tmp_53_1_reg_751_pp0_iter13_reg;
reg   [31:0] tmp_53_1_reg_751_pp0_iter14_reg;
reg   [31:0] tmp_53_1_reg_751_pp0_iter15_reg;
reg   [31:0] tmp_53_1_reg_751_pp0_iter16_reg;
reg   [31:0] tmp_53_1_reg_751_pp0_iter17_reg;
reg   [31:0] tmp_53_1_reg_751_pp0_iter18_reg;
reg   [31:0] tmp_53_1_reg_751_pp0_iter19_reg;
wire   [31:0] grp_fu_242_p2;
reg   [31:0] sum_6_reg_756;
wire   [31:0] grp_fu_246_p2;
reg   [31:0] sum_6_1_reg_761;
wire    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter4;
reg    ap_condition_pp0_exit_iter3_state5;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
wire   [63:0] newIndex8_cast_mid2_s_fu_540_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] jj_cast_fu_593_p1;
wire   [63:0] newIndex_cast_mid2_c_fu_597_p1;
wire   [6:0] tmp_27_fu_258_p4;
wire   [13:0] indvar_flatten65_op_fu_293_p2;
wire   [9:0] indvar_flatten31_op_fu_329_p2;
wire   [0:0] exitcond_flatten3_fu_343_p2;
wire   [0:0] exitcond_flatten33_n_fu_354_p2;
wire   [0:0] exitcond_flatten_mid_fu_349_p2;
wire   [0:0] tmp_32_fu_370_p2;
wire   [3:0] indvar_flatten_op_fu_380_p2;
wire   [0:0] tmp_102_fu_394_p1;
wire   [0:0] tmp_55_fu_416_p2;
wire   [0:0] tmp_39_mid_fu_422_p2;
wire   [4:0] tmp_38_fu_398_p3;
wire   [5:0] newIndex_fu_406_p4;
wire   [0:0] tmp_39_mid1_fu_427_p2;
wire   [0:0] not_exitcond_flatten_4_fu_453_p2;
wire   [1:0] ii_mid3_fu_432_p3;
wire   [0:0] tmp_39_mid2_fu_458_p2;
wire   [0:0] tmp_35_fu_470_p2;
wire   [0:0] tmp_104_fu_475_p2;
wire   [1:0] ii_1_fu_464_p2;
wire   [0:0] tmp_105_fu_488_p1;
wire   [4:0] tmp_38_mid1_fu_492_p3;
wire   [4:0] newIndex8_cast_mid3_fu_439_p3;
wire   [5:0] newIndex_mid1_fu_508_p4;
wire   [5:0] newIndex_cast_mid4_fu_446_p3;
wire   [0:0] sel_tmp2_i_fu_550_p2;
wire   [0:0] sel_tmp_i_fu_545_p2;
wire   [0:0] tmp_s_fu_563_p2;
wire   [31:0] sel_tmp1_i_fu_555_p3;
wire   [31:0] sel_tmp1_i2_fu_577_p3;
wire    ap_CS_fsm_state32;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
end

sample_fadd_32ns_ocq #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample_fadd_32ns_ocq_U187(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_reg_741),
    .din1(tmp_40_reg_746),
    .ce(1'b1),
    .dout(grp_fu_242_p2)
);

sample_fadd_32ns_ocq #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample_fadd_32ns_ocq_U188(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_6_reg_756),
    .din1(tmp_53_1_reg_751_pp0_iter19_reg),
    .ce(1'b1),
    .dout(grp_fu_246_p2)
);

sample_fmul_32ns_pcA #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample_fmul_32ns_pcA_U189(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(A_load_reg_716),
    .din1(sel_tmp5_i_reg_721),
    .ce(1'b1),
    .dout(grp_fu_250_p2)
);

sample_fmul_32ns_pcA #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample_fmul_32ns_pcA_U190(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(A8_load_reg_726),
    .din1(sel_tmp5_i2_reg_731),
    .ce(1'b1),
    .dout(grp_fu_254_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond_flatten6_fu_276_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter29 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter3_state5)) begin
                ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter2;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (exitcond_flatten6_reg_608_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ii_reg_220 <= ii_mid2_fu_526_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ii_reg_220 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten6_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten4_reg_176 <= indvar_flatten_next6_fu_281_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten4_reg_176 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten6_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten5_reg_187 <= indvar_flatten_next5_fu_299_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten5_reg_187 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten6_reg_608 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten6_reg_198 <= indvar_flatten_next4_fu_335_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten6_reg_198 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond_flatten6_reg_608_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_209 <= indvar_flatten_next_fu_386_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_209 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (exitcond_flatten6_reg_608_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        jj_reg_231 <= jj_1_fu_534_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        jj_reg_231 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten6_reg_608_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A8_load_reg_726 <= A8_q0;
        A_load_reg_716 <= A_q0;
        sel_tmp5_i2_reg_731[1 : 0] <= sel_tmp5_i2_fu_585_p3[1 : 0];
sel_tmp5_i2_reg_731[3] <= sel_tmp5_i2_fu_585_p3[3];
sel_tmp5_i2_reg_731[9 : 5] <= sel_tmp5_i2_fu_585_p3[9 : 5];
sel_tmp5_i2_reg_731[11] <= sel_tmp5_i2_fu_585_p3[11];
sel_tmp5_i2_reg_731[15 : 13] <= sel_tmp5_i2_fu_585_p3[15 : 13];
sel_tmp5_i2_reg_731[17] <= sel_tmp5_i2_fu_585_p3[17];
sel_tmp5_i2_reg_731[21 : 19] <= sel_tmp5_i2_fu_585_p3[21 : 19];
sel_tmp5_i2_reg_731[25] <= sel_tmp5_i2_fu_585_p3[25];
sel_tmp5_i2_reg_731[31] <= sel_tmp5_i2_fu_585_p3[31];
        sel_tmp5_i_reg_721[6 : 0] <= sel_tmp5_i_fu_569_p3[6 : 0];
sel_tmp5_i_reg_721[10 : 8] <= sel_tmp5_i_fu_569_p3[10 : 8];
sel_tmp5_i_reg_721[12] <= sel_tmp5_i_fu_569_p3[12];
sel_tmp5_i_reg_721[16 : 14] <= sel_tmp5_i_fu_569_p3[16 : 14];
sel_tmp5_i_reg_721[25 : 19] <= sel_tmp5_i_fu_569_p3[25 : 19];
sel_tmp5_i_reg_721[31] <= sel_tmp5_i_fu_569_p3[31];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten6_reg_608 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten33_m_reg_641 <= exitcond_flatten33_m_fu_318_p2;
        exitcond_flatten4_reg_636 <= exitcond_flatten4_fu_312_p2;
        not_exitcond_flatten_reg_630 <= not_exitcond_flatten_fu_307_p2;
        tmp_31_reg_646 <= tmp_31_fu_324_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten6_reg_608 <= exitcond_flatten6_fu_276_p2;
        exitcond_flatten6_reg_608_pp0_iter1_reg <= exitcond_flatten6_reg_608;
        exitcond_flatten_reg_617_pp0_iter1_reg <= exitcond_flatten_reg_617;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond_flatten6_reg_608_pp0_iter10_reg <= exitcond_flatten6_reg_608_pp0_iter9_reg;
        exitcond_flatten6_reg_608_pp0_iter11_reg <= exitcond_flatten6_reg_608_pp0_iter10_reg;
        exitcond_flatten6_reg_608_pp0_iter12_reg <= exitcond_flatten6_reg_608_pp0_iter11_reg;
        exitcond_flatten6_reg_608_pp0_iter13_reg <= exitcond_flatten6_reg_608_pp0_iter12_reg;
        exitcond_flatten6_reg_608_pp0_iter14_reg <= exitcond_flatten6_reg_608_pp0_iter13_reg;
        exitcond_flatten6_reg_608_pp0_iter15_reg <= exitcond_flatten6_reg_608_pp0_iter14_reg;
        exitcond_flatten6_reg_608_pp0_iter16_reg <= exitcond_flatten6_reg_608_pp0_iter15_reg;
        exitcond_flatten6_reg_608_pp0_iter17_reg <= exitcond_flatten6_reg_608_pp0_iter16_reg;
        exitcond_flatten6_reg_608_pp0_iter18_reg <= exitcond_flatten6_reg_608_pp0_iter17_reg;
        exitcond_flatten6_reg_608_pp0_iter19_reg <= exitcond_flatten6_reg_608_pp0_iter18_reg;
        exitcond_flatten6_reg_608_pp0_iter20_reg <= exitcond_flatten6_reg_608_pp0_iter19_reg;
        exitcond_flatten6_reg_608_pp0_iter21_reg <= exitcond_flatten6_reg_608_pp0_iter20_reg;
        exitcond_flatten6_reg_608_pp0_iter22_reg <= exitcond_flatten6_reg_608_pp0_iter21_reg;
        exitcond_flatten6_reg_608_pp0_iter23_reg <= exitcond_flatten6_reg_608_pp0_iter22_reg;
        exitcond_flatten6_reg_608_pp0_iter24_reg <= exitcond_flatten6_reg_608_pp0_iter23_reg;
        exitcond_flatten6_reg_608_pp0_iter25_reg <= exitcond_flatten6_reg_608_pp0_iter24_reg;
        exitcond_flatten6_reg_608_pp0_iter26_reg <= exitcond_flatten6_reg_608_pp0_iter25_reg;
        exitcond_flatten6_reg_608_pp0_iter27_reg <= exitcond_flatten6_reg_608_pp0_iter26_reg;
        exitcond_flatten6_reg_608_pp0_iter2_reg <= exitcond_flatten6_reg_608_pp0_iter1_reg;
        exitcond_flatten6_reg_608_pp0_iter3_reg <= exitcond_flatten6_reg_608_pp0_iter2_reg;
        exitcond_flatten6_reg_608_pp0_iter4_reg <= exitcond_flatten6_reg_608_pp0_iter3_reg;
        exitcond_flatten6_reg_608_pp0_iter5_reg <= exitcond_flatten6_reg_608_pp0_iter4_reg;
        exitcond_flatten6_reg_608_pp0_iter6_reg <= exitcond_flatten6_reg_608_pp0_iter5_reg;
        exitcond_flatten6_reg_608_pp0_iter7_reg <= exitcond_flatten6_reg_608_pp0_iter6_reg;
        exitcond_flatten6_reg_608_pp0_iter8_reg <= exitcond_flatten6_reg_608_pp0_iter7_reg;
        exitcond_flatten6_reg_608_pp0_iter9_reg <= exitcond_flatten6_reg_608_pp0_iter8_reg;
        jj_mid2_reg_679_pp0_iter10_reg <= jj_mid2_reg_679_pp0_iter9_reg;
        jj_mid2_reg_679_pp0_iter11_reg <= jj_mid2_reg_679_pp0_iter10_reg;
        jj_mid2_reg_679_pp0_iter12_reg <= jj_mid2_reg_679_pp0_iter11_reg;
        jj_mid2_reg_679_pp0_iter13_reg <= jj_mid2_reg_679_pp0_iter12_reg;
        jj_mid2_reg_679_pp0_iter14_reg <= jj_mid2_reg_679_pp0_iter13_reg;
        jj_mid2_reg_679_pp0_iter15_reg <= jj_mid2_reg_679_pp0_iter14_reg;
        jj_mid2_reg_679_pp0_iter16_reg <= jj_mid2_reg_679_pp0_iter15_reg;
        jj_mid2_reg_679_pp0_iter17_reg <= jj_mid2_reg_679_pp0_iter16_reg;
        jj_mid2_reg_679_pp0_iter18_reg <= jj_mid2_reg_679_pp0_iter17_reg;
        jj_mid2_reg_679_pp0_iter19_reg <= jj_mid2_reg_679_pp0_iter18_reg;
        jj_mid2_reg_679_pp0_iter20_reg <= jj_mid2_reg_679_pp0_iter19_reg;
        jj_mid2_reg_679_pp0_iter21_reg <= jj_mid2_reg_679_pp0_iter20_reg;
        jj_mid2_reg_679_pp0_iter22_reg <= jj_mid2_reg_679_pp0_iter21_reg;
        jj_mid2_reg_679_pp0_iter23_reg <= jj_mid2_reg_679_pp0_iter22_reg;
        jj_mid2_reg_679_pp0_iter24_reg <= jj_mid2_reg_679_pp0_iter23_reg;
        jj_mid2_reg_679_pp0_iter25_reg <= jj_mid2_reg_679_pp0_iter24_reg;
        jj_mid2_reg_679_pp0_iter26_reg <= jj_mid2_reg_679_pp0_iter25_reg;
        jj_mid2_reg_679_pp0_iter27_reg <= jj_mid2_reg_679_pp0_iter26_reg;
        jj_mid2_reg_679_pp0_iter28_reg <= jj_mid2_reg_679_pp0_iter27_reg;
        jj_mid2_reg_679_pp0_iter4_reg <= jj_mid2_reg_679;
        jj_mid2_reg_679_pp0_iter5_reg <= jj_mid2_reg_679_pp0_iter4_reg;
        jj_mid2_reg_679_pp0_iter6_reg <= jj_mid2_reg_679_pp0_iter5_reg;
        jj_mid2_reg_679_pp0_iter7_reg <= jj_mid2_reg_679_pp0_iter6_reg;
        jj_mid2_reg_679_pp0_iter8_reg <= jj_mid2_reg_679_pp0_iter7_reg;
        jj_mid2_reg_679_pp0_iter9_reg <= jj_mid2_reg_679_pp0_iter8_reg;
        newIndex_cast_mid2_reg_691_pp0_iter10_reg[2] <= newIndex_cast_mid2_reg_691_pp0_iter9_reg[2];
        newIndex_cast_mid2_reg_691_pp0_iter11_reg[2] <= newIndex_cast_mid2_reg_691_pp0_iter10_reg[2];
        newIndex_cast_mid2_reg_691_pp0_iter12_reg[2] <= newIndex_cast_mid2_reg_691_pp0_iter11_reg[2];
        newIndex_cast_mid2_reg_691_pp0_iter13_reg[2] <= newIndex_cast_mid2_reg_691_pp0_iter12_reg[2];
        newIndex_cast_mid2_reg_691_pp0_iter14_reg[2] <= newIndex_cast_mid2_reg_691_pp0_iter13_reg[2];
        newIndex_cast_mid2_reg_691_pp0_iter15_reg[2] <= newIndex_cast_mid2_reg_691_pp0_iter14_reg[2];
        newIndex_cast_mid2_reg_691_pp0_iter16_reg[2] <= newIndex_cast_mid2_reg_691_pp0_iter15_reg[2];
        newIndex_cast_mid2_reg_691_pp0_iter17_reg[2] <= newIndex_cast_mid2_reg_691_pp0_iter16_reg[2];
        newIndex_cast_mid2_reg_691_pp0_iter18_reg[2] <= newIndex_cast_mid2_reg_691_pp0_iter17_reg[2];
        newIndex_cast_mid2_reg_691_pp0_iter19_reg[2] <= newIndex_cast_mid2_reg_691_pp0_iter18_reg[2];
        newIndex_cast_mid2_reg_691_pp0_iter20_reg[2] <= newIndex_cast_mid2_reg_691_pp0_iter19_reg[2];
        newIndex_cast_mid2_reg_691_pp0_iter21_reg[2] <= newIndex_cast_mid2_reg_691_pp0_iter20_reg[2];
        newIndex_cast_mid2_reg_691_pp0_iter22_reg[2] <= newIndex_cast_mid2_reg_691_pp0_iter21_reg[2];
        newIndex_cast_mid2_reg_691_pp0_iter23_reg[2] <= newIndex_cast_mid2_reg_691_pp0_iter22_reg[2];
        newIndex_cast_mid2_reg_691_pp0_iter24_reg[2] <= newIndex_cast_mid2_reg_691_pp0_iter23_reg[2];
        newIndex_cast_mid2_reg_691_pp0_iter25_reg[2] <= newIndex_cast_mid2_reg_691_pp0_iter24_reg[2];
        newIndex_cast_mid2_reg_691_pp0_iter26_reg[2] <= newIndex_cast_mid2_reg_691_pp0_iter25_reg[2];
        newIndex_cast_mid2_reg_691_pp0_iter27_reg[2] <= newIndex_cast_mid2_reg_691_pp0_iter26_reg[2];
        newIndex_cast_mid2_reg_691_pp0_iter28_reg[2] <= newIndex_cast_mid2_reg_691_pp0_iter27_reg[2];
        newIndex_cast_mid2_reg_691_pp0_iter4_reg[2] <= newIndex_cast_mid2_reg_691[2];
        newIndex_cast_mid2_reg_691_pp0_iter5_reg[2] <= newIndex_cast_mid2_reg_691_pp0_iter4_reg[2];
        newIndex_cast_mid2_reg_691_pp0_iter6_reg[2] <= newIndex_cast_mid2_reg_691_pp0_iter5_reg[2];
        newIndex_cast_mid2_reg_691_pp0_iter7_reg[2] <= newIndex_cast_mid2_reg_691_pp0_iter6_reg[2];
        newIndex_cast_mid2_reg_691_pp0_iter8_reg[2] <= newIndex_cast_mid2_reg_691_pp0_iter7_reg[2];
        newIndex_cast_mid2_reg_691_pp0_iter9_reg[2] <= newIndex_cast_mid2_reg_691_pp0_iter8_reg[2];
        not_exitcond_flatten_reg_630_pp0_iter2_reg <= not_exitcond_flatten_reg_630;
        tmp_31_reg_646_pp0_iter2_reg <= tmp_31_reg_646;
        tmp_53_1_reg_751_pp0_iter11_reg <= tmp_53_1_reg_751;
        tmp_53_1_reg_751_pp0_iter12_reg <= tmp_53_1_reg_751_pp0_iter11_reg;
        tmp_53_1_reg_751_pp0_iter13_reg <= tmp_53_1_reg_751_pp0_iter12_reg;
        tmp_53_1_reg_751_pp0_iter14_reg <= tmp_53_1_reg_751_pp0_iter13_reg;
        tmp_53_1_reg_751_pp0_iter15_reg <= tmp_53_1_reg_751_pp0_iter14_reg;
        tmp_53_1_reg_751_pp0_iter16_reg <= tmp_53_1_reg_751_pp0_iter15_reg;
        tmp_53_1_reg_751_pp0_iter17_reg <= tmp_53_1_reg_751_pp0_iter16_reg;
        tmp_53_1_reg_751_pp0_iter18_reg <= tmp_53_1_reg_751_pp0_iter17_reg;
        tmp_53_1_reg_751_pp0_iter19_reg <= tmp_53_1_reg_751_pp0_iter18_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten6_reg_608_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten_mid_4_reg_661 <= exitcond_flatten_mid_4_fu_364_p2;
        not_exitcond_flatten_3_reg_656 <= not_exitcond_flatten_3_fu_359_p2;
        tmp_103_reg_667 <= tmp_103_fu_375_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten6_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten_reg_617 <= exitcond_flatten_fu_287_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten6_reg_608_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        jj_mid2_reg_679 <= jj_mid2_fu_480_p3;
        newIndex8_cast_mid2_reg_686[4] <= newIndex8_cast_mid2_fu_500_p3[4];
        newIndex_cast_mid2_reg_691[2] <= newIndex_cast_mid2_fu_518_p3[2];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten6_reg_608_pp0_iter27_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_6_1_reg_761 <= grp_fu_246_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten6_reg_608_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_6_reg_756 <= grp_fu_242_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten6_reg_608_pp0_iter9_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_reg_741 <= d_q0;
        tmp_40_reg_746 <= grp_fu_250_p2;
        tmp_53_1_reg_751 <= grp_fu_254_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_28_reg_603[18 : 12] <= tmp_28_fu_268_p3[18 : 12];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A8_ce0 = 1'b1;
    end else begin
        A8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter29 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        C1_ce0 = 1'b1;
    end else begin
        C1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((jj_mid2_reg_679_pp0_iter28_reg == 2'd1) & (ap_enable_reg_pp0_iter29 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        C1_we0 = 1'b1;
    end else begin
        C1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter29 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        C7_ce0 = 1'b1;
    end else begin
        C7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(jj_mid2_reg_679_pp0_iter28_reg == 2'd0) & ~(jj_mid2_reg_679_pp0_iter28_reg == 2'd1) & (ap_enable_reg_pp0_iter29 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        C7_we0 = 1'b1;
    end else begin
        C7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter29 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        C_ce0 = 1'b1;
    end else begin
        C_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((jj_mid2_reg_679_pp0_iter28_reg == 2'd0) & (ap_enable_reg_pp0_iter29 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        C_we0 = 1'b1;
    end else begin
        C_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_condition_pp0_exit_iter3_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter3_state5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        d_ce0 = 1'b1;
    end else begin
        d_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0)) & ~((ap_enable_reg_pp0_iter28 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter29 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter28 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter29 == 1'b1)) | ((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A8_address0 = newIndex8_cast_mid2_s_fu_540_p1;

assign A_address0 = newIndex8_cast_mid2_s_fu_540_p1;

assign C1_address0 = newIndex_cast_mid2_c_fu_597_p1;

assign C1_d0 = sum_6_1_reg_761;

assign C7_address0 = newIndex_cast_mid2_c_fu_597_p1;

assign C7_d0 = sum_6_1_reg_761;

assign C_address0 = newIndex_cast_mid2_c_fu_597_p1;

assign C_d0 = sum_6_1_reg_761;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign d_address0 = jj_cast_fu_593_p1;

assign exitcond_flatten33_m_fu_318_p2 = (not_exitcond_flatten_fu_307_p2 & exitcond_flatten4_fu_312_p2);

assign exitcond_flatten33_n_fu_354_p2 = (exitcond_flatten4_reg_636 ^ 1'd1);

assign exitcond_flatten3_fu_343_p2 = ((indvar_flatten_reg_209 == 4'd4) ? 1'b1 : 1'b0);

assign exitcond_flatten4_fu_312_p2 = ((indvar_flatten6_reg_198 == 10'd256) ? 1'b1 : 1'b0);

assign exitcond_flatten6_fu_276_p2 = ((indvar_flatten4_reg_176 == tmp_28_reg_603) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_287_p2 = ((indvar_flatten5_reg_187 == 14'd4096) ? 1'b1 : 1'b0);

assign exitcond_flatten_mid_4_fu_364_p2 = (not_exitcond_flatten_3_fu_359_p2 & exitcond_flatten_mid_fu_349_p2);

assign exitcond_flatten_mid_fu_349_p2 = (not_exitcond_flatten_reg_630 & exitcond_flatten3_fu_343_p2);

assign ii_1_fu_464_p2 = (2'd1 + ii_mid3_fu_432_p3);

assign ii_mid2_fu_526_p3 = ((tmp_39_mid2_fu_458_p2[0:0] === 1'b1) ? ii_1_fu_464_p2 : ii_mid3_fu_432_p3);

assign ii_mid3_fu_432_p3 = ((tmp_103_reg_667[0:0] === 1'b1) ? 2'd0 : ii_reg_220);

assign indvar_flatten31_op_fu_329_p2 = (indvar_flatten6_reg_198 + 10'd1);

assign indvar_flatten65_op_fu_293_p2 = (indvar_flatten5_reg_187 + 14'd1);

assign indvar_flatten_next4_fu_335_p3 = ((tmp_31_fu_324_p2[0:0] === 1'b1) ? 10'd1 : indvar_flatten31_op_fu_329_p2);

assign indvar_flatten_next5_fu_299_p3 = ((exitcond_flatten_fu_287_p2[0:0] === 1'b1) ? 14'd1 : indvar_flatten65_op_fu_293_p2);

assign indvar_flatten_next6_fu_281_p2 = (19'd1 + indvar_flatten4_reg_176);

assign indvar_flatten_next_fu_386_p3 = ((tmp_103_fu_375_p2[0:0] === 1'b1) ? 4'd1 : indvar_flatten_op_fu_380_p2);

assign indvar_flatten_op_fu_380_p2 = (indvar_flatten_reg_209 + 4'd1);

assign jj_1_fu_534_p2 = (jj_mid2_fu_480_p3 + 2'd1);

assign jj_cast_fu_593_p1 = jj_mid2_reg_679_pp0_iter8_reg;

assign jj_mid2_fu_480_p3 = ((tmp_104_fu_475_p2[0:0] === 1'b1) ? 2'd0 : jj_reg_231);

assign newIndex8_cast_mid2_fu_500_p3 = ((tmp_39_mid2_fu_458_p2[0:0] === 1'b1) ? tmp_38_mid1_fu_492_p3 : newIndex8_cast_mid3_fu_439_p3);

assign newIndex8_cast_mid2_s_fu_540_p1 = newIndex8_cast_mid2_reg_686;

assign newIndex8_cast_mid3_fu_439_p3 = ((tmp_103_reg_667[0:0] === 1'b1) ? 5'd0 : tmp_38_fu_398_p3);

assign newIndex_cast_mid2_c_fu_597_p1 = newIndex_cast_mid2_reg_691_pp0_iter28_reg;

assign newIndex_cast_mid2_fu_518_p3 = ((tmp_39_mid2_fu_458_p2[0:0] === 1'b1) ? newIndex_mid1_fu_508_p4 : newIndex_cast_mid4_fu_446_p3);

assign newIndex_cast_mid4_fu_446_p3 = ((tmp_103_reg_667[0:0] === 1'b1) ? 6'd0 : newIndex_fu_406_p4);

assign newIndex_fu_406_p4 = {{{{3'd0}, {tmp_102_fu_394_p1}}}, {2'd0}};

assign newIndex_mid1_fu_508_p4 = {{{{3'd0}, {tmp_105_fu_488_p1}}}, {2'd0}};

assign not_exitcond_flatten_3_fu_359_p2 = (exitcond_flatten_reg_617_pp0_iter1_reg | exitcond_flatten33_n_fu_354_p2);

assign not_exitcond_flatten_4_fu_453_p2 = (exitcond_flatten_mid_4_reg_661 ^ 1'd1);

assign not_exitcond_flatten_fu_307_p2 = (exitcond_flatten_reg_617 ^ 1'd1);

assign sel_tmp1_i2_fu_577_p3 = ((sel_tmp2_i_fu_550_p2[0:0] === 1'b1) ? 32'd3189584732 : 32'd1041209492);

assign sel_tmp1_i_fu_555_p3 = ((sel_tmp2_i_fu_550_p2[0:0] === 1'b1) ? 32'd3188567336 : 32'd1042627846);

assign sel_tmp2_i_fu_550_p2 = ((jj_mid2_reg_679_pp0_iter4_reg == 2'd1) ? 1'b1 : 1'b0);

assign sel_tmp5_i2_fu_585_p3 = ((tmp_s_fu_563_p2[0:0] === 1'b1) ? sel_tmp1_i2_fu_577_p3 : 32'd3157774783);

assign sel_tmp5_i_fu_569_p3 = ((tmp_s_fu_563_p2[0:0] === 1'b1) ? sel_tmp1_i_fu_555_p3 : 32'd3184851545);

assign sel_tmp_i_fu_545_p2 = ((jj_mid2_reg_679_pp0_iter4_reg == 2'd0) ? 1'b1 : 1'b0);

assign tmp_102_fu_394_p1 = ii_reg_220[0:0];

assign tmp_103_fu_375_p2 = (tmp_32_fu_370_p2 | exitcond_flatten_reg_617_pp0_iter1_reg);

assign tmp_104_fu_475_p2 = (tmp_35_fu_470_p2 | tmp_31_reg_646_pp0_iter2_reg);

assign tmp_105_fu_488_p1 = ii_1_fu_464_p2[0:0];

assign tmp_27_fu_258_p4 = {{outrows[7:1]}};

assign tmp_28_fu_268_p3 = {{tmp_27_fu_258_p4}, {12'd0}};

assign tmp_31_fu_324_p2 = (exitcond_flatten_reg_617 | exitcond_flatten33_m_fu_318_p2);

assign tmp_32_fu_370_p2 = (exitcond_flatten_mid_4_fu_364_p2 | exitcond_flatten33_m_reg_641);

assign tmp_35_fu_470_p2 = (tmp_39_mid2_fu_458_p2 | exitcond_flatten_mid_4_reg_661);

assign tmp_38_fu_398_p3 = {{tmp_102_fu_394_p1}, {4'd0}};

assign tmp_38_mid1_fu_492_p3 = {{tmp_105_fu_488_p1}, {4'd0}};

assign tmp_39_mid1_fu_427_p2 = (tmp_39_mid_fu_422_p2 & not_exitcond_flatten_3_reg_656);

assign tmp_39_mid2_fu_458_p2 = (tmp_39_mid1_fu_427_p2 & not_exitcond_flatten_4_fu_453_p2);

assign tmp_39_mid_fu_422_p2 = (tmp_55_fu_416_p2 & not_exitcond_flatten_reg_630_pp0_iter2_reg);

assign tmp_55_fu_416_p2 = ((jj_reg_231 == 2'd2) ? 1'b1 : 1'b0);

assign tmp_s_fu_563_p2 = (sel_tmp_i_fu_545_p2 | sel_tmp2_i_fu_550_p2);

always @ (posedge ap_clk) begin
    tmp_28_reg_603[11:0] <= 12'b000000000000;
    newIndex8_cast_mid2_reg_686[3:0] <= 4'b0000;
    newIndex_cast_mid2_reg_691[1:0] <= 2'b00;
    newIndex_cast_mid2_reg_691[5:3] <= 3'b000;
    newIndex_cast_mid2_reg_691_pp0_iter4_reg[1:0] <= 2'b00;
    newIndex_cast_mid2_reg_691_pp0_iter4_reg[5:3] <= 3'b000;
    newIndex_cast_mid2_reg_691_pp0_iter5_reg[1:0] <= 2'b00;
    newIndex_cast_mid2_reg_691_pp0_iter5_reg[5:3] <= 3'b000;
    newIndex_cast_mid2_reg_691_pp0_iter6_reg[1:0] <= 2'b00;
    newIndex_cast_mid2_reg_691_pp0_iter6_reg[5:3] <= 3'b000;
    newIndex_cast_mid2_reg_691_pp0_iter7_reg[1:0] <= 2'b00;
    newIndex_cast_mid2_reg_691_pp0_iter7_reg[5:3] <= 3'b000;
    newIndex_cast_mid2_reg_691_pp0_iter8_reg[1:0] <= 2'b00;
    newIndex_cast_mid2_reg_691_pp0_iter8_reg[5:3] <= 3'b000;
    newIndex_cast_mid2_reg_691_pp0_iter9_reg[1:0] <= 2'b00;
    newIndex_cast_mid2_reg_691_pp0_iter9_reg[5:3] <= 3'b000;
    newIndex_cast_mid2_reg_691_pp0_iter10_reg[1:0] <= 2'b00;
    newIndex_cast_mid2_reg_691_pp0_iter10_reg[5:3] <= 3'b000;
    newIndex_cast_mid2_reg_691_pp0_iter11_reg[1:0] <= 2'b00;
    newIndex_cast_mid2_reg_691_pp0_iter11_reg[5:3] <= 3'b000;
    newIndex_cast_mid2_reg_691_pp0_iter12_reg[1:0] <= 2'b00;
    newIndex_cast_mid2_reg_691_pp0_iter12_reg[5:3] <= 3'b000;
    newIndex_cast_mid2_reg_691_pp0_iter13_reg[1:0] <= 2'b00;
    newIndex_cast_mid2_reg_691_pp0_iter13_reg[5:3] <= 3'b000;
    newIndex_cast_mid2_reg_691_pp0_iter14_reg[1:0] <= 2'b00;
    newIndex_cast_mid2_reg_691_pp0_iter14_reg[5:3] <= 3'b000;
    newIndex_cast_mid2_reg_691_pp0_iter15_reg[1:0] <= 2'b00;
    newIndex_cast_mid2_reg_691_pp0_iter15_reg[5:3] <= 3'b000;
    newIndex_cast_mid2_reg_691_pp0_iter16_reg[1:0] <= 2'b00;
    newIndex_cast_mid2_reg_691_pp0_iter16_reg[5:3] <= 3'b000;
    newIndex_cast_mid2_reg_691_pp0_iter17_reg[1:0] <= 2'b00;
    newIndex_cast_mid2_reg_691_pp0_iter17_reg[5:3] <= 3'b000;
    newIndex_cast_mid2_reg_691_pp0_iter18_reg[1:0] <= 2'b00;
    newIndex_cast_mid2_reg_691_pp0_iter18_reg[5:3] <= 3'b000;
    newIndex_cast_mid2_reg_691_pp0_iter19_reg[1:0] <= 2'b00;
    newIndex_cast_mid2_reg_691_pp0_iter19_reg[5:3] <= 3'b000;
    newIndex_cast_mid2_reg_691_pp0_iter20_reg[1:0] <= 2'b00;
    newIndex_cast_mid2_reg_691_pp0_iter20_reg[5:3] <= 3'b000;
    newIndex_cast_mid2_reg_691_pp0_iter21_reg[1:0] <= 2'b00;
    newIndex_cast_mid2_reg_691_pp0_iter21_reg[5:3] <= 3'b000;
    newIndex_cast_mid2_reg_691_pp0_iter22_reg[1:0] <= 2'b00;
    newIndex_cast_mid2_reg_691_pp0_iter22_reg[5:3] <= 3'b000;
    newIndex_cast_mid2_reg_691_pp0_iter23_reg[1:0] <= 2'b00;
    newIndex_cast_mid2_reg_691_pp0_iter23_reg[5:3] <= 3'b000;
    newIndex_cast_mid2_reg_691_pp0_iter24_reg[1:0] <= 2'b00;
    newIndex_cast_mid2_reg_691_pp0_iter24_reg[5:3] <= 3'b000;
    newIndex_cast_mid2_reg_691_pp0_iter25_reg[1:0] <= 2'b00;
    newIndex_cast_mid2_reg_691_pp0_iter25_reg[5:3] <= 3'b000;
    newIndex_cast_mid2_reg_691_pp0_iter26_reg[1:0] <= 2'b00;
    newIndex_cast_mid2_reg_691_pp0_iter26_reg[5:3] <= 3'b000;
    newIndex_cast_mid2_reg_691_pp0_iter27_reg[1:0] <= 2'b00;
    newIndex_cast_mid2_reg_691_pp0_iter27_reg[5:3] <= 3'b000;
    newIndex_cast_mid2_reg_691_pp0_iter28_reg[1:0] <= 2'b00;
    newIndex_cast_mid2_reg_691_pp0_iter28_reg[5:3] <= 3'b000;
    sel_tmp5_i_reg_721[7] <= 1'b0;
    sel_tmp5_i_reg_721[11:11] <= 1'b1;
    sel_tmp5_i_reg_721[13:13] <= 1'b1;
    sel_tmp5_i_reg_721[18:17] <= 2'b10;
    sel_tmp5_i_reg_721[30:26] <= 5'b01111;
    sel_tmp5_i2_reg_731[2] <= 1'b1;
    sel_tmp5_i2_reg_731[4:4] <= 1'b1;
    sel_tmp5_i2_reg_731[10:10] <= 1'b0;
    sel_tmp5_i2_reg_731[12:12] <= 1'b1;
    sel_tmp5_i2_reg_731[16:16] <= 1'b1;
    sel_tmp5_i2_reg_731[18:18] <= 1'b1;
    sel_tmp5_i2_reg_731[24:22] <= 3'b000;
    sel_tmp5_i2_reg_731[30:26] <= 5'b01111;
end

endmodule //k2c_affine_matmul_1
