// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef __k2c_dot_2_dense_1WhU_H__
#define __k2c_dot_2_dense_1WhU_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct k2c_dot_2_dense_1WhU_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 64;
  static const unsigned AddressWidth = 6;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(k2c_dot_2_dense_1WhU_ram) {
        ram[0] = "0b10111101000000000001011000001011";
        ram[1] = "0b10111110100111100001010011010010";
        ram[2] = "0b00111110001011010000100110110001";
        ram[3] = "0b10111110000011011100100100011111";
        ram[4] = "0b10111110100011111001100101110011";
        ram[5] = "0b10111110100110110000100000000101";
        ram[6] = "0b10111110101110101010000001001011";
        ram[7] = "0b00111110001010010000000100011010";
        ram[8] = "0b00111100100010011101011101010110";
        ram[9] = "0b10111110100101011100000101000101";
        ram[10] = "0b10111101111110011111101101111101";
        ram[11] = "0b00111100100010001100010001101000";
        ram[12] = "0b10111110001111010101000111101000";
        ram[13] = "0b10111100011100111000111111001100";
        ram[14] = "0b00111110000000001100100010000010";
        ram[15] = "0b10111101011110010010001110111000";
        ram[16] = "0b10111110011011001100110100110111";
        ram[17] = "0b10111100001010011110111000000101";
        ram[18] = "0b10111110001001011100110001111110";
        ram[19] = "0b10111110101110101010001111110001";
        ram[20] = "0b00111110001110000001101010011011";
        ram[21] = "0b10111110011110100010010010010110";
        ram[22] = "0b10111101101100011100110110000100";
        ram[23] = "0b10111101101001000100010011110111";
        ram[24] = "0b10111110100010011010010100000111";
        ram[25] = "0b10111110001100100100011000010111";
        ram[26] = "0b00111110001110001100100101101101";
        ram[27] = "0b00111101101010001100000111001100";
        ram[28] = "0b00111110100000010000111000010010";
        ram[29] = "0b10111101110000001101011000111000";
        ram[30] = "0b10111101001111010011110101001000";
        ram[31] = "0b10111110101101011111100000001101";
        ram[32] = "0b00111110100000001111100010110110";
        ram[33] = "0b00111101011010001111101110100101";
        ram[34] = "0b00111101110000000010100101011001";
        ram[35] = "0b10111101100111000111011011000010";
        ram[36] = "0b00111100011110110010010100011111";
        ram[37] = "0b00111110011001110111001100110100";
        ram[38] = "0b10111110011101101101100000100101";
        ram[39] = "0b00111101110110101100101100110101";
        ram[40] = "0b00111101001001111101111011111101";
        ram[41] = "0b10111101110100001010011010111110";
        ram[42] = "0b00111110101011011100011010111111";
        ram[43] = "0b10111110100111100001101110000011";
        ram[44] = "0b10111110001010111000110101001110";
        ram[45] = "0b10111100101110101010110101111110";
        ram[46] = "0b10111011001001111001011010001100";
        ram[47] = "0b10111110000010101000001000010110";
        ram[48] = "0b00111110010101010110110111100101";
        ram[49] = "0b10111110010010000110001001110001";
        ram[50] = "0b00111101001100110011101111010010";
        ram[51] = "0b00111110011111100100111101011010";
        ram[52] = "0b00111101111110000100011011101111";
        ram[53] = "0b10111110101000111111000100001100";
        ram[54] = "0b10111110001100011011100010110111";
        ram[55] = "0b00111110000011010111011001011101";
        ram[56] = "0b10111101101110111001101111100111";
        ram[57] = "0b00111101110001000000001001110010";
        ram[58] = "0b00111100000101101011001001000110";
        ram[59] = "0b00111101110101001110010101101110";
        ram[60] = "0b00111101000010010000011001000101";
        ram[61] = "0b00111101001000100111000010001011";
        ram[62] = "0b00111110100100100110000000001001";
        ram[63] = "0b00111110100000011110010100010001";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(k2c_dot_2_dense_1WhU) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 64;
static const unsigned AddressWidth = 6;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


k2c_dot_2_dense_1WhU_ram* meminst;


SC_CTOR(k2c_dot_2_dense_1WhU) {
meminst = new k2c_dot_2_dense_1WhU_ram("k2c_dot_2_dense_1WhU_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~k2c_dot_2_dense_1WhU() {
    delete meminst;
}


};//endmodule
#endif
