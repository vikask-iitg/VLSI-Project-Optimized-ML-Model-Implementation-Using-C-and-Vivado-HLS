// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module k2c_dot_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        C_array_address0,
        C_array_ce0,
        C_array_we0,
        C_array_d0,
        C_array_q0,
        A_array_address0,
        A_array_ce0,
        A_array_q0,
        A_array1_address0,
        A_array1_ce0,
        A_array1_q0,
        A_array2_address0,
        A_array2_ce0,
        A_array2_q0,
        A_array3_address0,
        A_array3_ce0,
        A_array3_q0,
        A_array4_address0,
        A_array4_ce0,
        A_array4_q0,
        A_array5_address0,
        A_array5_ce0,
        A_array5_q0,
        A_array6_address0,
        A_array6_ce0,
        A_array6_q0,
        A_array7_address0,
        A_array7_ce0,
        A_array7_q0,
        A_dim,
        A_numel_read,
        B_dim,
        B_numel_read,
        p_read2,
        fwork_address0,
        fwork_ce0,
        fwork_we0,
        fwork_d0,
        fwork_q0,
        fwork_address1,
        fwork_ce1,
        fwork_q1
);

parameter    ap_ST_fsm_state1 = 146'd1;
parameter    ap_ST_fsm_state2 = 146'd2;
parameter    ap_ST_fsm_state3 = 146'd4;
parameter    ap_ST_fsm_state4 = 146'd8;
parameter    ap_ST_fsm_state5 = 146'd16;
parameter    ap_ST_fsm_state6 = 146'd32;
parameter    ap_ST_fsm_state7 = 146'd64;
parameter    ap_ST_fsm_state8 = 146'd128;
parameter    ap_ST_fsm_state9 = 146'd256;
parameter    ap_ST_fsm_state10 = 146'd512;
parameter    ap_ST_fsm_state11 = 146'd1024;
parameter    ap_ST_fsm_state12 = 146'd2048;
parameter    ap_ST_fsm_state13 = 146'd4096;
parameter    ap_ST_fsm_state14 = 146'd8192;
parameter    ap_ST_fsm_state15 = 146'd16384;
parameter    ap_ST_fsm_state16 = 146'd32768;
parameter    ap_ST_fsm_state17 = 146'd65536;
parameter    ap_ST_fsm_state18 = 146'd131072;
parameter    ap_ST_fsm_state19 = 146'd262144;
parameter    ap_ST_fsm_state20 = 146'd524288;
parameter    ap_ST_fsm_state21 = 146'd1048576;
parameter    ap_ST_fsm_state22 = 146'd2097152;
parameter    ap_ST_fsm_state23 = 146'd4194304;
parameter    ap_ST_fsm_state24 = 146'd8388608;
parameter    ap_ST_fsm_state25 = 146'd16777216;
parameter    ap_ST_fsm_state26 = 146'd33554432;
parameter    ap_ST_fsm_state27 = 146'd67108864;
parameter    ap_ST_fsm_state28 = 146'd134217728;
parameter    ap_ST_fsm_state29 = 146'd268435456;
parameter    ap_ST_fsm_state30 = 146'd536870912;
parameter    ap_ST_fsm_state31 = 146'd1073741824;
parameter    ap_ST_fsm_state32 = 146'd2147483648;
parameter    ap_ST_fsm_state33 = 146'd4294967296;
parameter    ap_ST_fsm_state34 = 146'd8589934592;
parameter    ap_ST_fsm_state35 = 146'd17179869184;
parameter    ap_ST_fsm_state36 = 146'd34359738368;
parameter    ap_ST_fsm_state37 = 146'd68719476736;
parameter    ap_ST_fsm_state38 = 146'd137438953472;
parameter    ap_ST_fsm_state39 = 146'd274877906944;
parameter    ap_ST_fsm_state40 = 146'd549755813888;
parameter    ap_ST_fsm_state41 = 146'd1099511627776;
parameter    ap_ST_fsm_state42 = 146'd2199023255552;
parameter    ap_ST_fsm_state43 = 146'd4398046511104;
parameter    ap_ST_fsm_state44 = 146'd8796093022208;
parameter    ap_ST_fsm_state45 = 146'd17592186044416;
parameter    ap_ST_fsm_state46 = 146'd35184372088832;
parameter    ap_ST_fsm_state47 = 146'd70368744177664;
parameter    ap_ST_fsm_state48 = 146'd140737488355328;
parameter    ap_ST_fsm_state49 = 146'd281474976710656;
parameter    ap_ST_fsm_state50 = 146'd562949953421312;
parameter    ap_ST_fsm_state51 = 146'd1125899906842624;
parameter    ap_ST_fsm_state52 = 146'd2251799813685248;
parameter    ap_ST_fsm_state53 = 146'd4503599627370496;
parameter    ap_ST_fsm_state54 = 146'd9007199254740992;
parameter    ap_ST_fsm_state55 = 146'd18014398509481984;
parameter    ap_ST_fsm_state56 = 146'd36028797018963968;
parameter    ap_ST_fsm_state57 = 146'd72057594037927936;
parameter    ap_ST_fsm_state58 = 146'd144115188075855872;
parameter    ap_ST_fsm_state59 = 146'd288230376151711744;
parameter    ap_ST_fsm_state60 = 146'd576460752303423488;
parameter    ap_ST_fsm_state61 = 146'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 146'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 146'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 146'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 146'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 146'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 146'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 146'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 146'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 146'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 146'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 146'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 146'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 146'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 146'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 146'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 146'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 146'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 146'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 146'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 146'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 146'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 146'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 146'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 146'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 146'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 146'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 146'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 146'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 146'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 146'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 146'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 146'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 146'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 146'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 146'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 146'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 146'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 146'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 146'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 146'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 146'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 146'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 146'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 146'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 146'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 146'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 146'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 146'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 146'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 146'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 146'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 146'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 146'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 146'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 146'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 146'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 146'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 146'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 146'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 146'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 146'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 146'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 146'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 146'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 146'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 146'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 146'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 146'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 146'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 146'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 146'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 146'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 146'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 146'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 146'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 146'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 146'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 146'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 146'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 146'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 146'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 146'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 146'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 146'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 146'd44601490397061246283071436545296723011960832;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [0:0] C_array_address0;
output   C_array_ce0;
output   C_array_we0;
output  [31:0] C_array_d0;
input  [31:0] C_array_q0;
output  [0:0] A_array_address0;
output   A_array_ce0;
input  [31:0] A_array_q0;
output  [0:0] A_array1_address0;
output   A_array1_ce0;
input  [31:0] A_array1_q0;
output  [0:0] A_array2_address0;
output   A_array2_ce0;
input  [31:0] A_array2_q0;
output  [0:0] A_array3_address0;
output   A_array3_ce0;
input  [31:0] A_array3_q0;
output  [0:0] A_array4_address0;
output   A_array4_ce0;
input  [31:0] A_array4_q0;
output  [0:0] A_array5_address0;
output   A_array5_ce0;
input  [31:0] A_array5_q0;
output  [0:0] A_array6_address0;
output   A_array6_ce0;
input  [31:0] A_array6_q0;
output  [0:0] A_array7_address0;
output   A_array7_ce0;
input  [31:0] A_array7_q0;
input  [63:0] A_dim;
input  [63:0] A_numel_read;
input  [63:0] B_dim;
input  [63:0] B_numel_read;
input  [63:0] p_read2;
output  [4:0] fwork_address0;
output   fwork_ce0;
output   fwork_we0;
output  [31:0] fwork_d0;
input  [31:0] fwork_q0;
output  [4:0] fwork_address1;
output   fwork_ce1;
input  [31:0] fwork_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[0:0] C_array_address0;
reg C_array_ce0;
reg C_array_we0;
reg[31:0] C_array_d0;
reg A_array_ce0;
reg A_array1_ce0;
reg A_array2_ce0;
reg A_array3_ce0;
reg A_array4_ce0;
reg A_array5_ce0;
reg A_array6_ce0;
reg A_array7_ce0;
reg[4:0] fwork_address0;
reg fwork_ce0;
reg fwork_we0;
reg[31:0] fwork_d0;
reg fwork_ce1;

(* fsm_encoding = "none" *) reg   [145:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [2:0] dense_15_output_shap_address0;
reg    dense_15_output_shap_ce0;
wire   [63:0] dense_15_output_shap_q0;
reg   [2:0] dense_16_kernel_shap_address0;
reg    dense_16_kernel_shap_ce0;
wire   [63:0] dense_16_kernel_shap_q0;
reg   [63:0] reg_1005;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state87;
wire   [63:0] permA_q1;
reg   [63:0] reg_1010;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state89;
wire   [63:0] permB_q0;
reg   [63:0] reg_1016;
wire    ap_CS_fsm_state94;
wire    ap_CS_fsm_state98;
wire   [63:0] i_12_s_fu_1039_p2;
reg   [63:0] i_12_s_reg_1939;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond1_fu_1022_p2;
wire   [0:0] tmp_1_fu_1050_p2;
reg   [0:0] tmp_1_reg_1948;
wire    ap_CS_fsm_state3;
wire   [63:0] count_4_1_fu_1054_p2;
wire    ap_CS_fsm_state4;
wire   [63:0] i_12_1_fu_1060_p2;
reg   [63:0] i_12_1_reg_1957;
wire   [63:0] count_3_cast_fu_1089_p1;
reg   [63:0] count_3_cast_reg_1968;
wire    ap_CS_fsm_state6;
wire   [0:0] exitcond2_fu_1066_p2;
wire   [63:0] i_15_s_fu_1093_p2;
reg   [63:0] i_15_s_reg_1973;
wire   [63:0] i_15_1_fu_1104_p2;
reg   [63:0] i_15_1_reg_1981;
wire   [0:0] exitcond2_1_fu_1099_p2;
wire   [2:0] count_5_1_fu_1110_p2;
wire    ap_CS_fsm_state7;
wire  signed [6:0] tmp_4_fu_1116_p1;
reg  signed [6:0] tmp_4_reg_1996;
wire   [5:0] tmp_18_fu_1120_p1;
reg   [5:0] tmp_18_reg_2001;
wire  signed [63:0] grp_fu_1124_p2;
reg  signed [63:0] free_axesA_reg_2006;
wire    ap_CS_fsm_state76;
wire   [59:0] free_axesB_fu_1129_p4;
reg   [59:0] free_axesB_reg_2012;
wire   [63:0] free_axesB_1_fu_1138_p1;
reg   [63:0] free_axesB_1_reg_2017;
reg  signed [6:0] free_axesB_cast6_reg_2022;
reg  signed [1:0] free_axesB_cast5_reg_2027;
wire   [63:0] i_2_fu_1163_p2;
reg   [63:0] i_2_reg_2032;
wire   [2:0] i_2_cast_fu_1168_p2;
reg   [2:0] i_2_cast_reg_2038;
wire   [63:0] i_4_cast_fu_1174_p1;
reg   [63:0] i_4_cast_reg_2043;
wire    ap_CS_fsm_state77;
wire   [0:0] exitcond8_fu_1179_p2;
reg   [0:0] exitcond8_reg_2048;
wire   [63:0] i_18_cast_fu_1190_p1;
reg   [63:0] i_18_cast_reg_2057;
wire    ap_CS_fsm_state78;
wire   [0:0] exitcond8_1_fu_1195_p2;
wire   [2:0] i_18_1_fu_1200_p2;
reg   [2:0] i_18_1_reg_2070;
wire   [2:0] i_19_1_fu_1232_p2;
wire    ap_CS_fsm_state80;
wire   [0:0] tmp_2_fu_1211_p2;
wire   [0:0] tmp_2_1_fu_1227_p2;
wire   [63:0] i_7_cast_fu_1238_p1;
reg   [63:0] i_7_cast_reg_2086;
wire    ap_CS_fsm_state81;
wire   [0:0] tmp_3_fu_1242_p2;
reg   [0:0] tmp_3_reg_2091;
wire   [63:0] i_16_cast_fu_1253_p1;
reg   [63:0] i_16_cast_reg_2100;
wire    ap_CS_fsm_state82;
wire   [0:0] tmp_3_1_fu_1272_p2;
wire   [2:0] i_21_1_fu_1277_p2;
reg   [2:0] i_21_1_reg_2113;
wire   [63:0] j_9_1_fu_1283_p2;
reg   [63:0] j_9_1_reg_2118;
wire   [63:0] i_8_cast_fu_1289_p1;
reg   [63:0] i_8_cast_reg_2123;
wire    ap_CS_fsm_state84;
wire   [0:0] exitcond6_fu_1294_p2;
reg   [0:0] exitcond6_reg_2128;
wire    ap_CS_fsm_state86;
wire   [63:0] i_22_cast_fu_1305_p1;
reg   [63:0] i_22_cast_reg_2142;
wire    ap_CS_fsm_state88;
wire   [0:0] exitcond13_1_fu_1310_p2;
wire   [2:0] i_22_1_fu_1315_p2;
reg   [2:0] i_22_1_reg_2155;
wire   [2:0] dense_15_output_shap_5_gep_fu_398_p3;
wire    ap_CS_fsm_state90;
reg   [63:0] dense_15_output_shap_6_reg_2165;
wire    ap_CS_fsm_state91;
wire   [63:0] i_9_cast_fu_1321_p1;
reg   [63:0] i_9_cast_reg_2170;
wire    ap_CS_fsm_state93;
wire   [0:0] exitcond7_fu_1326_p2;
reg   [0:0] exitcond7_reg_2175;
wire    ap_CS_fsm_state95;
reg   [63:0] dense_16_kernel_shap_2_reg_2189;
wire    ap_CS_fsm_state96;
wire   [63:0] i_23_cast_fu_1337_p1;
reg   [63:0] i_23_cast_reg_2194;
wire    ap_CS_fsm_state97;
wire   [0:0] exitcond12_1_fu_1342_p2;
wire   [2:0] i_23_1_fu_1347_p2;
reg   [2:0] i_23_1_reg_2207;
wire   [2:0] dense_16_kernel_shap_3_gep_fu_452_p3;
wire    ap_CS_fsm_state99;
reg   [63:0] dense_16_kernel_shap_4_reg_2217;
wire    ap_CS_fsm_state100;
wire   [63:0] i_12_fu_1358_p2;
reg   [63:0] i_12_reg_2225;
wire    ap_CS_fsm_state102;
wire   [6:0] tmp_21_fu_1364_p1;
reg   [6:0] tmp_21_reg_2230;
wire   [0:0] exitcond3_fu_1353_p2;
wire   [63:0] j_4_cast_fu_1367_p1;
reg   [63:0] j_4_cast_reg_2236;
wire    ap_CS_fsm_state104;
wire   [0:0] exitcond9_fu_1372_p2;
reg   [0:0] exitcond9_reg_2241;
wire    ap_CS_fsm_state105;
wire   [63:0] j_10_cast_fu_1383_p1;
reg   [63:0] j_10_cast_reg_2255;
wire    ap_CS_fsm_state106;
wire   [0:0] exitcond11_1_fu_1388_p2;
wire   [2:0] j_10_1_fu_1393_p2;
reg   [2:0] j_10_1_reg_2268;
wire   [2:0] tmp_22_fu_1399_p1;
reg   [2:0] tmp_22_reg_2273;
wire    ap_CS_fsm_state107;
wire   [31:0] tmp_5_fu_1428_p10;
reg   [31:0] tmp_5_reg_2323;
wire    ap_CS_fsm_state109;
wire   [63:0] i_13_fu_1455_p2;
reg   [63:0] i_13_reg_2331;
wire    ap_CS_fsm_state111;
wire   [63:0] j_5_cast_fu_1465_p1;
reg   [63:0] j_5_cast_reg_2336;
wire    ap_CS_fsm_state113;
wire   [0:0] exitcond10_fu_1470_p2;
reg   [0:0] exitcond10_reg_2341;
wire    ap_CS_fsm_state114;
wire   [63:0] j_11_cast_fu_1481_p1;
reg   [63:0] j_11_cast_reg_2355;
wire    ap_CS_fsm_state115;
wire   [0:0] exitcond10_1_fu_1486_p2;
wire   [2:0] j_11_1_fu_1491_p2;
reg   [2:0] j_11_1_reg_2368;
wire   [2:0] tmp_26_fu_1497_p1;
reg   [2:0] tmp_26_reg_2373;
reg   [0:0] tmp_27_reg_2378;
wire   [2:0] Bsub_addr_3_gep_fu_669_p3;
wire    ap_CS_fsm_state116;
wire   [3:0] tmp_9_fu_1509_p3;
reg   [3:0] tmp_9_reg_2388;
wire    ap_CS_fsm_state118;
wire   [0:0] tmp_i_fu_1515_p2;
reg   [0:0] tmp_i_reg_2402;
wire   [0:0] tmp_614_i_fu_1521_p2;
reg   [0:0] tmp_614_i_reg_2407;
wire   [0:0] tmp_616_i_fu_1527_p2;
reg   [0:0] tmp_616_i_reg_2412;
wire   [0:0] tmp_618_i_fu_1533_p2;
reg   [0:0] tmp_618_i_reg_2418;
wire   [0:0] tmp_620_i_fu_1539_p2;
reg   [0:0] tmp_620_i_reg_2423;
wire   [31:0] tmp_633_i_fu_1682_p3;
reg   [31:0] tmp_633_i_reg_2429;
wire    ap_CS_fsm_state119;
wire    grp_k2c_sub2idx_fu_989_ap_idle;
wire    grp_k2c_sub2idx_fu_989_ap_ready;
wire    grp_k2c_sub2idx_fu_989_ap_done;
wire   [0:0] tmp_634_i_fu_1690_p2;
reg   [0:0] tmp_634_i_reg_2434;
wire   [0:0] tmp_636_i_fu_1695_p2;
reg   [0:0] tmp_636_i_reg_2439;
wire   [0:0] tmp_638_i_fu_1700_p2;
reg   [0:0] tmp_638_i_reg_2445;
wire   [0:0] tmp_640_i_fu_1705_p2;
reg   [0:0] tmp_640_i_reg_2450;
wire   [6:0] sum_fu_1710_p2;
reg   [6:0] sum_reg_2456;
wire   [63:0] grp_fu_1461_p2;
reg   [63:0] tmp_6_reg_2461;
wire    ap_CS_fsm_state125;
wire   [0:0] i_11_fu_1767_p2;
wire    ap_CS_fsm_state126;
wire   [0:0] exitcond5_fu_1762_p2;
wire   [63:0] i_14_fu_1786_p2;
reg   [63:0] i_14_reg_2477;
wire    ap_CS_fsm_state127;
wire   [1:0] outrowidx_fu_1792_p2;
reg   [1:0] outrowidx_reg_2482;
wire   [0:0] tmp_7_fu_1781_p2;
wire   [6:0] inneridx_fu_1797_p2;
reg   [6:0] inneridx_reg_2487;
wire   [4:0] k_1_fu_1815_p2;
reg   [4:0] k_1_reg_2495;
wire    ap_CS_fsm_state128;
reg   [4:0] fwork_addr_2_reg_2500;
wire   [0:0] exitcond_fu_1810_p2;
wire   [6:0] tmp_s_fu_1831_p2;
reg   [6:0] tmp_s_reg_2505;
wire   [59:0] j_fu_1849_p2;
reg   [59:0] j_reg_2513;
wire    ap_CS_fsm_state129;
wire   [6:0] sum3_fu_1860_p2;
reg   [6:0] sum3_reg_2518;
wire   [0:0] exitcond11_fu_1844_p2;
reg   [0:0] C_array_addr_1_reg_2523;
wire    ap_CS_fsm_state130;
reg   [31:0] fwork_load_reg_2533;
wire    ap_CS_fsm_state131;
reg   [31:0] fwork_load_1_reg_2538;
wire   [31:0] grp_fu_1001_p2;
reg   [31:0] tmp_10_reg_2543;
wire    ap_CS_fsm_state136;
reg   [31:0] C_array_load_reg_2548;
wire   [31:0] grp_fu_997_p2;
reg   [31:0] tmp_11_reg_2553;
wire    ap_CS_fsm_state145;
reg   [2:0] permA_address0;
reg    permA_ce0;
reg    permA_we0;
reg   [63:0] permA_d0;
wire   [63:0] permA_q0;
reg   [2:0] permA_address1;
reg    permA_ce1;
reg    permA_we1;
reg   [2:0] permB_address0;
reg    permB_ce0;
reg    permB_we0;
reg   [63:0] permB_d0;
reg   [2:0] freeA_address0;
reg    freeA_ce0;
reg    freeA_we0;
reg   [63:0] freeA_d0;
wire   [63:0] freeA_q0;
reg   [2:0] freeB_address0;
reg    freeB_ce0;
reg    freeB_we0;
reg   [63:0] freeB_d0;
wire   [63:0] freeB_q0;
reg   [2:0] newshpA_address0;
reg    newshpA_ce0;
reg    newshpA_we0;
reg   [63:0] newshpA_d0;
wire   [63:0] newshpA_q0;
reg   [2:0] newshpB_address0;
reg    newshpB_ce0;
reg    newshpB_we0;
reg   [63:0] newshpB_d0;
wire   [63:0] newshpB_q0;
reg   [2:0] Asub_address0;
reg    Asub_ce0;
reg    Asub_we0;
reg   [63:0] Asub_d0;
wire   [63:0] Asub_q0;
reg   [2:0] Bsub_address0;
reg    Bsub_ce0;
reg    Bsub_we0;
reg   [63:0] Bsub_d0;
wire   [63:0] Bsub_q0;
wire    grp_k2c_idx2sub_fu_977_ap_start;
wire    grp_k2c_idx2sub_fu_977_ap_done;
wire    grp_k2c_idx2sub_fu_977_ap_idle;
wire    grp_k2c_idx2sub_fu_977_ap_ready;
reg   [63:0] grp_k2c_idx2sub_fu_977_idx;
wire   [2:0] grp_k2c_idx2sub_fu_977_sub_address0;
wire    grp_k2c_idx2sub_fu_977_sub_ce0;
wire    grp_k2c_idx2sub_fu_977_sub_we0;
wire   [63:0] grp_k2c_idx2sub_fu_977_sub_d0;
wire   [2:0] grp_k2c_idx2sub_fu_977_shape_address0;
wire    grp_k2c_idx2sub_fu_977_shape_ce0;
reg   [63:0] grp_k2c_idx2sub_fu_977_shape_q0;
reg   [63:0] grp_k2c_idx2sub_fu_977_ndim;
wire    grp_k2c_sub2idx_fu_989_ap_start;
wire   [2:0] grp_k2c_sub2idx_fu_989_sub_address0;
wire    grp_k2c_sub2idx_fu_989_sub_ce0;
reg   [63:0] grp_k2c_sub2idx_fu_989_sub_q0;
wire   [2:0] grp_k2c_sub2idx_fu_989_shape_address0;
wire    grp_k2c_sub2idx_fu_989_shape_ce0;
reg   [63:0] grp_k2c_sub2idx_fu_989_shape_q0;
reg   [63:0] grp_k2c_sub2idx_fu_989_ndim;
wire   [63:0] grp_k2c_sub2idx_fu_989_ap_return;
reg   [63:0] count_reg_732;
wire    ap_CS_fsm_state5;
reg   [63:0] i_reg_744;
wire   [63:0] count_4_fu_1032_p2;
reg   [63:0] count_1_reg_757;
wire   [0:0] tmp_8_fu_1027_p2;
reg   [63:0] count_1_1_reg_769;
reg   [2:0] count_2_reg_781;
wire   [0:0] exitcond1_1_fu_1045_p2;
reg   [63:0] i_1_reg_792;
wire   [2:0] count_5_fu_1082_p2;
reg   [2:0] ap_phi_mux_count_3_phi_fu_807_p4;
reg   [2:0] count_3_reg_804;
wire   [0:0] tmp_fu_1071_p2;
reg   [2:0] i_4_reg_815;
wire    ap_CS_fsm_state79;
reg   [2:0] i_5_reg_827;
reg   [2:0] i_7_reg_836;
wire    ap_CS_fsm_state83;
reg   [63:0] j_3_reg_848;
reg   [2:0] i_8_reg_861;
wire    ap_CS_fsm_state92;
reg   [2:0] i_9_reg_873;
wire    ap_CS_fsm_state101;
reg   [63:0] i_s_reg_885;
wire    ap_CS_fsm_state110;
reg   [2:0] j_4_reg_897;
wire    ap_CS_fsm_state103;
wire    ap_CS_fsm_state108;
reg   [63:0] i_3_reg_909;
wire    ap_CS_fsm_state120;
reg   [2:0] j_5_reg_921;
wire    ap_CS_fsm_state112;
wire    ap_CS_fsm_state117;
reg   [0:0] i_6_reg_933;
reg   [63:0] i_10_reg_944;
reg   [4:0] k_reg_955;
reg   [59:0] j_s_reg_966;
wire    ap_CS_fsm_state146;
reg    grp_k2c_idx2sub_fu_977_ap_start_reg;
wire   [0:0] exitcond4_fu_1450_p2;
reg    grp_k2c_sub2idx_fu_989_ap_start_reg;
wire   [63:0] count_2_cast_fu_1077_p1;
wire   [63:0] i_5_cast_fu_1206_p1;
wire   [63:0] i_15_cast_fu_1222_p1;
wire   [63:0] j_9_cast_fu_1267_p1;
wire   [63:0] newIndex_cast_fu_1413_p1;
wire   [63:0] sum_cast_fu_1753_p1;
wire   [63:0] i_6_cast_fu_1757_p1;
wire   [63:0] sum1_cast_fu_1826_p1;
wire   [63:0] sum2_cast_fu_1870_p1;
wire   [63:0] sum3_cast_fu_1875_p1;
wire   [31:0] merge_i_fu_1744_p3;
wire    ap_CS_fsm_state135;
wire    ap_CS_fsm_state137;
wire    ap_CS_fsm_state132;
wire   [6:0] grp_fu_1124_p1;
wire    ap_CS_fsm_state9;
wire   [2:0] tmp_19_fu_1160_p1;
wire   [2:0] i_18_s_fu_1184_p2;
wire   [2:0] i_15_fu_1216_p2;
wire   [2:0] i_16_fu_1247_p2;
wire   [3:0] tmp_20_fu_1257_p1;
wire   [3:0] j_9_s_fu_1261_p2;
wire   [2:0] i_22_s_fu_1299_p2;
wire   [2:0] i_23_s_fu_1331_p2;
wire   [2:0] j_10_s_fu_1377_p2;
wire   [2:0] newIndex_fu_1403_p4;
wire   [63:0] tmp_5_fu_1428_p9;
wire   [59:0] grp_fu_1461_p0;
wire   [2:0] j_11_s_fu_1475_p2;
wire   [0:0] tmp_1_27_fu_1563_p2;
wire   [31:0] tmp_615_i_fu_1556_p3;
wire   [31:0] tmp_i_26_fu_1549_p3;
wire   [0:0] tmp_12_fu_1582_p2;
wire   [31:0] tmp_619_i_fu_1575_p3;
wire   [31:0] tmp_617_i_fu_1567_p3;
wire   [0:0] tmp_624_i_fu_1599_p2;
wire   [0:0] tmp_622_i_fu_1594_p2;
wire   [0:0] tmp_13_fu_1612_p2;
wire   [31:0] tmp_623_i_fu_1604_p3;
wire   [31:0] tmp_621_i_fu_1586_p3;
wire   [0:0] tmp_628_i_fu_1631_p2;
wire   [0:0] tmp_626_i_fu_1626_p2;
wire   [0:0] tmp_14_fu_1644_p2;
wire   [31:0] tmp_627_i_fu_1636_p3;
wire   [31:0] tmp_625_i_fu_1618_p3;
wire   [0:0] tmp_632_i_fu_1663_p2;
wire   [0:0] tmp_630_i_fu_1658_p2;
wire   [0:0] tmp_15_fu_1676_p2;
wire   [31:0] tmp_631_i_fu_1668_p3;
wire   [31:0] tmp_629_i_fu_1650_p3;
wire   [6:0] tmp_25_fu_1545_p1;
wire   [0:0] tmp_16_fu_1722_p2;
wire   [31:0] tmp_635_i_fu_1715_p3;
wire   [0:0] tmp_17_fu_1740_p2;
wire   [31:0] tmp_639_i_fu_1733_p3;
wire   [31:0] tmp_637_i_fu_1726_p3;
wire  signed [1:0] tmp_24_fu_1777_p1;
wire  signed [6:0] tmp_23_fu_1773_p1;
wire   [5:0] k_cast_fu_1806_p1;
wire   [6:0] k_cast3_fu_1802_p1;
wire   [6:0] sum1_fu_1821_p2;
wire   [4:0] tmp_s_fu_1831_p0;
wire   [6:0] tmp_28_fu_1836_p1;
wire   [6:0] tmp1_fu_1855_p2;
wire   [1:0] tmp_29_fu_1840_p1;
wire   [1:0] sum2_fu_1865_p2;
reg    grp_fu_1124_ap_start;
wire    grp_fu_1124_ap_done;
reg   [145:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 146'd1;
#0 grp_k2c_idx2sub_fu_977_ap_start_reg = 1'b0;
#0 grp_k2c_sub2idx_fu_989_ap_start_reg = 1'b0;
end

k2c_dot_3_dense_1bxn #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dense_15_output_shap_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_15_output_shap_address0),
    .ce0(dense_15_output_shap_ce0),
    .q0(dense_15_output_shap_q0)
);

k2c_dot_3_dense_1bxn #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dense_16_kernel_shap_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_16_kernel_shap_address0),
    .ce0(dense_16_kernel_shap_ce0),
    .q0(dense_16_kernel_shap_q0)
);

k2c_dot_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
permA_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(permA_address0),
    .ce0(permA_ce0),
    .we0(permA_we0),
    .d0(permA_d0),
    .q0(permA_q0),
    .address1(permA_address1),
    .ce1(permA_ce1),
    .we1(permA_we1),
    .d1(p_read2),
    .q1(permA_q1)
);

k2c_dot_permB #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
permB_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(permB_address0),
    .ce0(permB_ce0),
    .we0(permB_we0),
    .d0(permB_d0),
    .q0(permB_q0)
);

k2c_dot_permB #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
freeA_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(freeA_address0),
    .ce0(freeA_ce0),
    .we0(freeA_we0),
    .d0(freeA_d0),
    .q0(freeA_q0)
);

k2c_dot_permB #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
freeB_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(freeB_address0),
    .ce0(freeB_ce0),
    .we0(freeB_we0),
    .d0(freeB_d0),
    .q0(freeB_q0)
);

k2c_dot_permB #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
newshpA_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(newshpA_address0),
    .ce0(newshpA_ce0),
    .we0(newshpA_we0),
    .d0(newshpA_d0),
    .q0(newshpA_q0)
);

k2c_dot_permB #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
newshpB_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(newshpB_address0),
    .ce0(newshpB_ce0),
    .we0(newshpB_we0),
    .d0(newshpB_d0),
    .q0(newshpB_q0)
);

k2c_dot_permB #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
Asub_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Asub_address0),
    .ce0(Asub_ce0),
    .we0(Asub_we0),
    .d0(Asub_d0),
    .q0(Asub_q0)
);

k2c_dot_permB #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
Bsub_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Bsub_address0),
    .ce0(Bsub_ce0),
    .we0(Bsub_we0),
    .d0(Bsub_d0),
    .q0(Bsub_q0)
);

k2c_idx2sub grp_k2c_idx2sub_fu_977(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_idx2sub_fu_977_ap_start),
    .ap_done(grp_k2c_idx2sub_fu_977_ap_done),
    .ap_idle(grp_k2c_idx2sub_fu_977_ap_idle),
    .ap_ready(grp_k2c_idx2sub_fu_977_ap_ready),
    .idx(grp_k2c_idx2sub_fu_977_idx),
    .sub_address0(grp_k2c_idx2sub_fu_977_sub_address0),
    .sub_ce0(grp_k2c_idx2sub_fu_977_sub_ce0),
    .sub_we0(grp_k2c_idx2sub_fu_977_sub_we0),
    .sub_d0(grp_k2c_idx2sub_fu_977_sub_d0),
    .shape_address0(grp_k2c_idx2sub_fu_977_shape_address0),
    .shape_ce0(grp_k2c_idx2sub_fu_977_shape_ce0),
    .shape_q0(grp_k2c_idx2sub_fu_977_shape_q0),
    .ndim(grp_k2c_idx2sub_fu_977_ndim)
);

k2c_sub2idx grp_k2c_sub2idx_fu_989(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_sub2idx_fu_989_ap_start),
    .ap_done(grp_k2c_sub2idx_fu_989_ap_done),
    .ap_idle(grp_k2c_sub2idx_fu_989_ap_idle),
    .ap_ready(grp_k2c_sub2idx_fu_989_ap_ready),
    .sub_address0(grp_k2c_sub2idx_fu_989_sub_address0),
    .sub_ce0(grp_k2c_sub2idx_fu_989_sub_ce0),
    .sub_q0(grp_k2c_sub2idx_fu_989_sub_q0),
    .shape_address0(grp_k2c_sub2idx_fu_989_shape_address0),
    .shape_ce0(grp_k2c_sub2idx_fu_989_shape_ce0),
    .shape_q0(grp_k2c_sub2idx_fu_989_shape_q0),
    .ndim(grp_k2c_sub2idx_fu_989_ndim),
    .ap_return(grp_k2c_sub2idx_fu_989_ap_return)
);

sample_fadd_32ns_ocq #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample_fadd_32ns_ocq_U430(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(C_array_load_reg_2548),
    .din1(tmp_10_reg_2543),
    .ce(1'b1),
    .dout(grp_fu_997_p2)
);

sample_fmul_32ns_pcA #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sample_fmul_32ns_pcA_U431(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(fwork_load_reg_2533),
    .din1(fwork_load_1_reg_2538),
    .ce(1'b1),
    .dout(grp_fu_1001_p2)
);

sample_udiv_64ns_bzo #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 64 ))
sample_udiv_64ns_bzo_U432(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1124_ap_start),
    .done(grp_fu_1124_ap_done),
    .din0(A_numel_read),
    .din1(grp_fu_1124_p1),
    .ce(1'b1),
    .dout(grp_fu_1124_p2)
);

sample_mux_864_32rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
sample_mux_864_32rcU_U433(
    .din0(A_array_q0),
    .din1(A_array1_q0),
    .din2(A_array2_q0),
    .din3(A_array3_q0),
    .din4(A_array4_q0),
    .din5(A_array5_q0),
    .din6(A_array6_q0),
    .din7(A_array7_q0),
    .din8(tmp_5_fu_1428_p9),
    .dout(tmp_5_fu_1428_p10)
);

sample_mul_60ns_6sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 60 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sample_mul_60ns_6sc4_U434(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1461_p0),
    .din1(free_axesA_reg_2006),
    .ce(1'b1),
    .dout(grp_fu_1461_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_idx2sub_fu_977_ap_start_reg <= 1'b0;
    end else begin
        if ((((exitcond4_fu_1450_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state111)) | ((exitcond3_fu_1353_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state102)))) begin
            grp_k2c_idx2sub_fu_977_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_idx2sub_fu_977_ap_ready == 1'b1)) begin
            grp_k2c_idx2sub_fu_977_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_sub2idx_fu_989_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state109))) begin
            grp_k2c_sub2idx_fu_989_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_sub2idx_fu_989_ap_ready == 1'b1)) begin
            grp_k2c_sub2idx_fu_989_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_1050_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        count_1_1_reg_769 <= count_1_reg_757;
    end else if (((tmp_1_reg_1948 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        count_1_1_reg_769 <= count_4_1_fu_1054_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1022_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        if ((tmp_8_fu_1027_p2 == 1'd1)) begin
            count_1_reg_757 <= count_reg_732;
        end else if ((tmp_8_fu_1027_p2 == 1'd0)) begin
            count_1_reg_757 <= count_4_fu_1032_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & ((exitcond1_1_fu_1045_p2 == 1'd1) | (exitcond1_fu_1022_p2 == 1'd1)))) begin
        count_2_reg_781 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        count_2_reg_781 <= count_5_1_fu_1110_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_1066_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        if ((tmp_fu_1071_p2 == 1'd1)) begin
            count_3_reg_804 <= count_2_reg_781;
        end else if ((tmp_fu_1071_p2 == 1'd0)) begin
            count_3_reg_804 <= count_5_fu_1082_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        count_reg_732 <= count_1_1_reg_769;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        count_reg_732 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_1762_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state126))) begin
        i_10_reg_944 <= 64'd0;
    end else if (((exitcond_fu_1810_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state128))) begin
        i_10_reg_944 <= i_14_reg_2477;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & ((exitcond1_1_fu_1045_p2 == 1'd1) | (exitcond1_fu_1022_p2 == 1'd1)))) begin
        i_1_reg_792 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i_1_reg_792 <= i_15_1_reg_1981;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_1353_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state102))) begin
        i_3_reg_909 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        i_3_reg_909 <= i_13_reg_2331;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        i_4_reg_815 <= i_18_1_reg_2070;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        i_4_reg_815 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state78) & ((exitcond8_1_fu_1195_p2 == 1'd1) | (exitcond8_reg_2048 == 1'd1)))) begin
        i_5_reg_827 <= i_2_cast_reg_2038;
    end else if (((tmp_2_1_fu_1227_p2 == 1'd1) & (tmp_2_fu_1211_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
        i_5_reg_827 <= i_19_1_fu_1232_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_1762_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state126))) begin
        i_6_reg_933 <= i_11_fu_1767_p2;
    end else if ((1'b1 == ap_CS_fsm_state125)) begin
        i_6_reg_933 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & ((tmp_2_1_fu_1227_p2 == 1'd0) | (tmp_2_fu_1211_p2 == 1'd0)))) begin
        i_7_reg_836 <= 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        i_7_reg_836 <= i_21_1_reg_2113;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) & ((tmp_3_1_fu_1272_p2 == 1'd0) | (tmp_3_reg_2091 == 1'd0)))) begin
        i_8_reg_861 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        i_8_reg_861 <= i_22_1_reg_2155;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state88) & ((exitcond13_1_fu_1310_p2 == 1'd1) | (exitcond6_reg_2128 == 1'd1)))) begin
        i_9_reg_873 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        i_9_reg_873 <= i_23_1_reg_2207;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_reg_744 <= i_12_1_reg_1957;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_744 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state97) & ((exitcond12_1_fu_1342_p2 == 1'd1) | (exitcond7_reg_2175 == 1'd1)))) begin
        i_s_reg_885 <= 64'd0;
    end else if (((grp_k2c_sub2idx_fu_989_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state110))) begin
        i_s_reg_885 <= i_12_reg_2225;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & ((tmp_2_1_fu_1227_p2 == 1'd0) | (tmp_2_fu_1211_p2 == 1'd0)))) begin
        j_3_reg_848 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        j_3_reg_848 <= j_9_1_reg_2118;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        j_4_reg_897 <= j_10_1_reg_2268;
    end else if (((grp_k2c_idx2sub_fu_977_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state103))) begin
        j_4_reg_897 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        j_5_reg_921 <= j_11_1_reg_2368;
    end else if (((grp_k2c_idx2sub_fu_977_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state112))) begin
        j_5_reg_921 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_1810_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state128))) begin
        j_s_reg_966 <= 60'd0;
    end else if ((1'b1 == ap_CS_fsm_state146)) begin
        j_s_reg_966 <= j_reg_2513;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond11_fu_1844_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state129))) begin
        k_reg_955 <= k_1_reg_2495;
    end else if (((tmp_7_fu_1781_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state127))) begin
        k_reg_955 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond11_fu_1844_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state129))) begin
        C_array_addr_1_reg_2523 <= sum2_cast_fu_1870_p1;
        sum3_reg_2518 <= sum3_fu_1860_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        C_array_load_reg_2548 <= C_array_q0;
        tmp_10_reg_2543 <= grp_fu_1001_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_1066_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        count_3_cast_reg_1968[2 : 0] <= count_3_cast_fu_1089_p1[2 : 0];
        i_15_s_reg_1973[63 : 1] <= i_15_s_fu_1093_p2[63 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        dense_15_output_shap_6_reg_2165 <= dense_15_output_shap_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        dense_16_kernel_shap_2_reg_2189 <= dense_16_kernel_shap_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        dense_16_kernel_shap_4_reg_2217 <= dense_16_kernel_shap_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        exitcond10_reg_2341 <= exitcond10_fu_1470_p2;
        j_5_cast_reg_2336[2 : 0] <= j_5_cast_fu_1465_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        exitcond6_reg_2128 <= exitcond6_fu_1294_p2;
        i_8_cast_reg_2123[2 : 0] <= i_8_cast_fu_1289_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        exitcond7_reg_2175 <= exitcond7_fu_1326_p2;
        i_9_cast_reg_2170[2 : 0] <= i_9_cast_fu_1321_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        exitcond8_reg_2048 <= exitcond8_fu_1179_p2;
        i_4_cast_reg_2043[2 : 0] <= i_4_cast_fu_1174_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        exitcond9_reg_2241 <= exitcond9_fu_1372_p2;
        j_4_cast_reg_2236[2 : 0] <= j_4_cast_fu_1367_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        free_axesA_reg_2006 <= grp_fu_1124_p2;
        free_axesB_1_reg_2017[59 : 0] <= free_axesB_1_fu_1138_p1[59 : 0];
        free_axesB_cast5_reg_2027 <= {{B_numel_read[5:4]}};
        free_axesB_cast6_reg_2022 <= {{B_numel_read[10:4]}};
        free_axesB_reg_2012 <= {{B_numel_read[63:4]}};
        i_2_cast_reg_2038 <= i_2_cast_fu_1168_p2;
        i_2_reg_2032 <= i_2_fu_1163_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_1810_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state128))) begin
        fwork_addr_2_reg_2500 <= sum1_cast_fu_1826_p1;
        tmp_s_reg_2505 <= tmp_s_fu_1831_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state131)) begin
        fwork_load_1_reg_2538 <= fwork_q1;
        fwork_load_reg_2533 <= fwork_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_12_1_reg_1957 <= i_12_1_fu_1060_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        i_12_reg_2225 <= i_12_fu_1358_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1022_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_12_s_reg_1939[63 : 1] <= i_12_s_fu_1039_p2[63 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        i_13_reg_2331 <= i_13_fu_1455_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        i_14_reg_2477 <= i_14_fu_1786_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_1_fu_1099_p2 == 1'd0) & (exitcond2_fu_1066_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        i_15_1_reg_1981 <= i_15_1_fu_1104_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_reg_2091 == 1'd1) & (1'b1 == ap_CS_fsm_state82))) begin
        i_16_cast_reg_2100[2 : 0] <= i_16_cast_fu_1253_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_1_fu_1195_p2 == 1'd0) & (exitcond8_reg_2048 == 1'd0) & (1'b1 == ap_CS_fsm_state78))) begin
        i_18_1_reg_2070 <= i_18_1_fu_1200_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_reg_2048 == 1'd0) & (1'b1 == ap_CS_fsm_state78))) begin
        i_18_cast_reg_2057[2 : 1] <= i_18_cast_fu_1190_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_1_fu_1272_p2 == 1'd1) & (tmp_3_reg_2091 == 1'd1) & (1'b1 == ap_CS_fsm_state82))) begin
        i_21_1_reg_2113 <= i_21_1_fu_1277_p2;
        j_9_1_reg_2118 <= j_9_1_fu_1283_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond13_1_fu_1310_p2 == 1'd0) & (exitcond6_reg_2128 == 1'd0) & (1'b1 == ap_CS_fsm_state88))) begin
        i_22_1_reg_2155 <= i_22_1_fu_1315_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_reg_2128 == 1'd0) & (1'b1 == ap_CS_fsm_state88))) begin
        i_22_cast_reg_2142[2 : 1] <= i_22_cast_fu_1305_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond12_1_fu_1342_p2 == 1'd0) & (exitcond7_reg_2175 == 1'd0) & (1'b1 == ap_CS_fsm_state97))) begin
        i_23_1_reg_2207 <= i_23_1_fu_1347_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_reg_2175 == 1'd0) & (1'b1 == ap_CS_fsm_state97))) begin
        i_23_cast_reg_2194[2 : 1] <= i_23_cast_fu_1337_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        i_7_cast_reg_2086[2 : 0] <= i_7_cast_fu_1238_p1[2 : 0];
        tmp_3_reg_2091 <= tmp_3_fu_1242_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_7_fu_1781_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state127))) begin
        inneridx_reg_2487 <= inneridx_fu_1797_p2;
        outrowidx_reg_2482 <= outrowidx_fu_1792_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond11_1_fu_1388_p2 == 1'd0) & (exitcond9_reg_2241 == 1'd0) & (1'b1 == ap_CS_fsm_state106))) begin
        j_10_1_reg_2268 <= j_10_1_fu_1393_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond9_reg_2241 == 1'd0) & (1'b1 == ap_CS_fsm_state106))) begin
        j_10_cast_reg_2255[2 : 1] <= j_10_cast_fu_1383_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond10_1_fu_1486_p2 == 1'd0) & (exitcond10_reg_2341 == 1'd0) & (1'b1 == ap_CS_fsm_state115))) begin
        j_11_1_reg_2368 <= j_11_1_fu_1491_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond10_reg_2341 == 1'd0) & (1'b1 == ap_CS_fsm_state115))) begin
        j_11_cast_reg_2355[2 : 1] <= j_11_cast_fu_1481_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state129)) begin
        j_reg_2513 <= j_fu_1849_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        k_1_reg_2495 <= k_1_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_1005 <= dense_15_output_shap_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state85))) begin
        reg_1010 <= permA_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state94))) begin
        reg_1016 <= permB_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_k2c_sub2idx_fu_989_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state119))) begin
        sum_reg_2456 <= sum_fu_1710_p2;
        tmp_633_i_reg_2429[25 : 0] <= tmp_633_i_fu_1682_p3[25 : 0];
tmp_633_i_reg_2429[31] <= tmp_633_i_fu_1682_p3[31];
        tmp_634_i_reg_2434 <= tmp_634_i_fu_1690_p2;
        tmp_636_i_reg_2439 <= tmp_636_i_fu_1695_p2;
        tmp_638_i_reg_2445 <= tmp_638_i_fu_1700_p2;
        tmp_640_i_reg_2450 <= tmp_640_i_fu_1705_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state145)) begin
        tmp_11_reg_2553 <= grp_fu_997_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_18_reg_2001 <= tmp_18_fu_1120_p1;
        tmp_4_reg_1996 <= tmp_4_fu_1116_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_1_reg_1948 <= tmp_1_fu_1050_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_1353_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state102))) begin
        tmp_21_reg_2230 <= tmp_21_fu_1364_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state106) & ((exitcond11_1_fu_1388_p2 == 1'd1) | (exitcond9_reg_2241 == 1'd1)))) begin
        tmp_22_reg_2273 <= tmp_22_fu_1399_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state115) & ((exitcond10_1_fu_1486_p2 == 1'd1) | (exitcond10_reg_2341 == 1'd1)))) begin
        tmp_26_reg_2373 <= tmp_26_fu_1497_p1;
        tmp_27_reg_2378 <= i_3_reg_909[32'd3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        tmp_5_reg_2323 <= tmp_5_fu_1428_p10;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state118)) begin
        tmp_614_i_reg_2407 <= tmp_614_i_fu_1521_p2;
        tmp_616_i_reg_2412 <= tmp_616_i_fu_1527_p2;
        tmp_618_i_reg_2418 <= tmp_618_i_fu_1533_p2;
        tmp_620_i_reg_2423 <= tmp_620_i_fu_1539_p2;
        tmp_9_reg_2388 <= tmp_9_fu_1509_p3;
        tmp_i_reg_2402 <= tmp_i_fu_1515_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        tmp_6_reg_2461 <= grp_fu_1461_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        A_array1_ce0 = 1'b1;
    end else begin
        A_array1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        A_array2_ce0 = 1'b1;
    end else begin
        A_array2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        A_array3_ce0 = 1'b1;
    end else begin
        A_array3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        A_array4_ce0 = 1'b1;
    end else begin
        A_array4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        A_array5_ce0 = 1'b1;
    end else begin
        A_array5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        A_array6_ce0 = 1'b1;
    end else begin
        A_array6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        A_array7_ce0 = 1'b1;
    end else begin
        A_array7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        A_array_ce0 = 1'b1;
    end else begin
        A_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        Asub_address0 = j_11_cast_reg_2355;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        Asub_address0 = j_5_cast_reg_2336;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        Asub_address0 = permA_q1;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        Asub_address0 = permA_q0;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        Asub_address0 = grp_k2c_sub2idx_fu_989_sub_address0;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        Asub_address0 = grp_k2c_idx2sub_fu_977_sub_address0;
    end else begin
        Asub_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state117))) begin
        Asub_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        Asub_ce0 = grp_k2c_sub2idx_fu_989_sub_ce0;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        Asub_ce0 = grp_k2c_idx2sub_fu_977_sub_ce0;
    end else begin
        Asub_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state117))) begin
        Asub_d0 = Bsub_q0;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        Asub_d0 = grp_k2c_idx2sub_fu_977_sub_d0;
    end else begin
        Asub_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state117) | ((exitcond10_reg_2341 == 1'd0) & (1'b1 == ap_CS_fsm_state115)))) begin
        Asub_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        Asub_we0 = grp_k2c_idx2sub_fu_977_sub_we0;
    end else begin
        Asub_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state116)) begin
        Bsub_address0 = Bsub_addr_3_gep_fu_669_p3;
    end else if ((1'b1 == ap_CS_fsm_state114)) begin
        Bsub_address0 = permB_q0;
    end else if ((1'b1 == ap_CS_fsm_state108)) begin
        Bsub_address0 = j_10_cast_reg_2255;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        Bsub_address0 = j_4_cast_reg_2236;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        Bsub_address0 = grp_k2c_sub2idx_fu_989_sub_address0;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        Bsub_address0 = grp_k2c_idx2sub_fu_977_sub_address0;
    end else begin
        Bsub_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state108))) begin
        Bsub_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        Bsub_ce0 = grp_k2c_sub2idx_fu_989_sub_ce0;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        Bsub_ce0 = grp_k2c_idx2sub_fu_977_sub_ce0;
    end else begin
        Bsub_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state108))) begin
        Bsub_d0 = Asub_q0;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        Bsub_d0 = grp_k2c_idx2sub_fu_977_sub_d0;
    end else begin
        Bsub_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state108) | ((exitcond9_reg_2241 == 1'd0) & (1'b1 == ap_CS_fsm_state106)))) begin
        Bsub_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        Bsub_we0 = grp_k2c_idx2sub_fu_977_sub_we0;
    end else begin
        Bsub_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state146))) begin
        C_array_address0 = C_array_addr_1_reg_2523;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        C_array_address0 = i_6_cast_fu_1757_p1;
    end else begin
        C_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state146))) begin
        C_array_ce0 = 1'b1;
    end else begin
        C_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state146)) begin
        C_array_d0 = tmp_11_reg_2553;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        C_array_d0 = 32'd0;
    end else begin
        C_array_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state146) | ((exitcond5_fu_1762_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state126)))) begin
        C_array_we0 = 1'b1;
    end else begin
        C_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_7_fu_1781_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state127)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_fu_1066_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        if ((tmp_fu_1071_p2 == 1'd1)) begin
            ap_phi_mux_count_3_phi_fu_807_p4 = count_2_reg_781;
        end else if ((tmp_fu_1071_p2 == 1'd0)) begin
            ap_phi_mux_count_3_phi_fu_807_p4 = count_5_fu_1082_p2;
        end else begin
            ap_phi_mux_count_3_phi_fu_807_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_count_3_phi_fu_807_p4 = 'bx;
    end
end

always @ (*) begin
    if (((tmp_7_fu_1781_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state127))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        dense_15_output_shap_address0 = dense_15_output_shap_5_gep_fu_398_p3;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        dense_15_output_shap_address0 = reg_1010;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        dense_15_output_shap_address0 = p_read2;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        dense_15_output_shap_address0 = grp_k2c_idx2sub_fu_977_shape_address0;
    end else begin
        dense_15_output_shap_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state6))) begin
        dense_15_output_shap_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        dense_15_output_shap_ce0 = grp_k2c_idx2sub_fu_977_shape_ce0;
    end else begin
        dense_15_output_shap_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        dense_16_kernel_shap_address0 = dense_16_kernel_shap_3_gep_fu_452_p3;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        dense_16_kernel_shap_address0 = reg_1016;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        dense_16_kernel_shap_address0 = grp_k2c_idx2sub_fu_977_shape_address0;
    end else begin
        dense_16_kernel_shap_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state95))) begin
        dense_16_kernel_shap_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        dense_16_kernel_shap_ce0 = grp_k2c_idx2sub_fu_977_shape_ce0;
    end else begin
        dense_16_kernel_shap_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        freeA_address0 = i_18_cast_fu_1190_p1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        freeA_address0 = i_4_cast_fu_1174_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        freeA_address0 = count_1_reg_757;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        freeA_address0 = count_reg_732;
    end else begin
        freeA_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        freeA_ce0 = 1'b1;
    end else begin
        freeA_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        freeA_d0 = i_12_s_reg_1939;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        freeA_d0 = i_reg_744;
    end else begin
        freeA_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_1_reg_1948 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((tmp_8_fu_1027_p2 == 1'd0) & (exitcond1_fu_1022_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        freeA_we0 = 1'b1;
    end else begin
        freeA_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        freeB_address0 = j_9_cast_fu_1267_p1;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        freeB_address0 = j_3_reg_848;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        freeB_address0 = count_3_cast_reg_1968;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        freeB_address0 = count_2_cast_fu_1077_p1;
    end else begin
        freeB_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        freeB_ce0 = 1'b1;
    end else begin
        freeB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        freeB_d0 = i_15_s_reg_1973;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        freeB_d0 = i_1_reg_792;
    end else begin
        freeB_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((tmp_fu_1071_p2 == 1'd0) & (exitcond2_fu_1066_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        freeB_we0 = 1'b1;
    end else begin
        freeB_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state130)) begin
        fwork_address0 = fwork_addr_2_reg_2500;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        fwork_address0 = sum_cast_fu_1753_p1;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        fwork_address0 = grp_k2c_sub2idx_fu_989_ap_return;
    end else begin
        fwork_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state120) | ((grp_k2c_sub2idx_fu_989_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state110)))) begin
        fwork_ce0 = 1'b1;
    end else begin
        fwork_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state130)) begin
        fwork_ce1 = 1'b1;
    end else begin
        fwork_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        fwork_d0 = merge_i_fu_1744_p3;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        fwork_d0 = tmp_5_reg_2323;
    end else begin
        fwork_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state120) | ((grp_k2c_sub2idx_fu_989_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state110)))) begin
        fwork_we0 = 1'b1;
    end else begin
        fwork_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_1124_ap_start = 1'b1;
    end else begin
        grp_fu_1124_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        grp_k2c_idx2sub_fu_977_idx = i_3_reg_909;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_k2c_idx2sub_fu_977_idx = i_s_reg_885;
    end else begin
        grp_k2c_idx2sub_fu_977_idx = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        grp_k2c_idx2sub_fu_977_ndim = B_dim;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_k2c_idx2sub_fu_977_ndim = A_dim;
    end else begin
        grp_k2c_idx2sub_fu_977_ndim = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        grp_k2c_idx2sub_fu_977_shape_q0 = dense_16_kernel_shap_q0;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_k2c_idx2sub_fu_977_shape_q0 = dense_15_output_shap_q0;
    end else begin
        grp_k2c_idx2sub_fu_977_shape_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        grp_k2c_sub2idx_fu_989_ndim = B_dim;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        grp_k2c_sub2idx_fu_989_ndim = A_dim;
    end else begin
        grp_k2c_sub2idx_fu_989_ndim = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        grp_k2c_sub2idx_fu_989_shape_q0 = newshpB_q0;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        grp_k2c_sub2idx_fu_989_shape_q0 = newshpA_q0;
    end else begin
        grp_k2c_sub2idx_fu_989_shape_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        grp_k2c_sub2idx_fu_989_sub_q0 = Asub_q0;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        grp_k2c_sub2idx_fu_989_sub_q0 = Bsub_q0;
    end else begin
        grp_k2c_sub2idx_fu_989_sub_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        newshpA_address0 = i_22_cast_reg_2142;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        newshpA_address0 = i_8_cast_reg_2123;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        newshpA_address0 = grp_k2c_sub2idx_fu_989_shape_address0;
    end else begin
        newshpA_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state92))) begin
        newshpA_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        newshpA_ce0 = grp_k2c_sub2idx_fu_989_shape_ce0;
    end else begin
        newshpA_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        newshpA_d0 = dense_15_output_shap_6_reg_2165;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        newshpA_d0 = reg_1005;
    end else begin
        newshpA_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state92) | ((exitcond6_reg_2128 == 1'd0) & (1'b1 == ap_CS_fsm_state88)))) begin
        newshpA_we0 = 1'b1;
    end else begin
        newshpA_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        newshpB_address0 = i_23_cast_reg_2194;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        newshpB_address0 = i_9_cast_reg_2170;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        newshpB_address0 = grp_k2c_sub2idx_fu_989_shape_address0;
    end else begin
        newshpB_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state101))) begin
        newshpB_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        newshpB_ce0 = grp_k2c_sub2idx_fu_989_shape_ce0;
    end else begin
        newshpB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        newshpB_d0 = dense_16_kernel_shap_4_reg_2217;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        newshpB_d0 = dense_16_kernel_shap_2_reg_2189;
    end else begin
        newshpB_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state101) | ((exitcond7_reg_2175 == 1'd0) & (1'b1 == ap_CS_fsm_state97)))) begin
        newshpB_we0 = 1'b1;
    end else begin
        newshpB_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        permA_address0 = j_4_cast_fu_1367_p1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        permA_address0 = i_5_cast_fu_1206_p1;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        permA_address0 = i_18_cast_reg_2057;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        permA_address0 = i_4_cast_reg_2043;
    end else begin
        permA_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        permA_address1 = j_10_cast_fu_1383_p1;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        permA_address1 = i_22_cast_fu_1305_p1;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        permA_address1 = i_8_cast_fu_1289_p1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        permA_address1 = i_15_cast_fu_1222_p1;
    end else begin
        permA_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state78))) begin
        permA_ce0 = 1'b1;
    end else begin
        permA_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state80))) begin
        permA_ce1 = 1'b1;
    end else begin
        permA_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        permA_d0 = p_read2;
    end else if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78))) begin
        permA_d0 = freeA_q0;
    end else begin
        permA_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) | ((tmp_2_fu_1211_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80)) | ((exitcond8_reg_2048 == 1'd0) & (1'b1 == ap_CS_fsm_state78)))) begin
        permA_we0 = 1'b1;
    end else begin
        permA_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_1_fu_1227_p2 == 1'd1) & (tmp_2_fu_1211_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
        permA_we1 = 1'b1;
    end else begin
        permA_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        permB_address0 = j_11_cast_fu_1481_p1;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        permB_address0 = j_5_cast_fu_1465_p1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        permB_address0 = i_23_cast_fu_1337_p1;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        permB_address0 = i_9_cast_fu_1321_p1;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        permB_address0 = i_16_cast_reg_2100;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        permB_address0 = i_7_cast_reg_2086;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        permB_address0 = 64'd0;
    end else begin
        permB_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state83))) begin
        permB_ce0 = 1'b1;
    end else begin
        permB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state83))) begin
        permB_d0 = freeB_q0;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        permB_d0 = 64'd0;
    end else begin
        permB_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state83) | ((tmp_3_reg_2091 == 1'd1) & (1'b1 == ap_CS_fsm_state82)) | ((1'b1 == ap_CS_fsm_state80) & ((tmp_2_1_fu_1227_p2 == 1'd0) | (tmp_2_fu_1211_p2 == 1'd0))))) begin
        permB_we0 = 1'b1;
    end else begin
        permB_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & ((exitcond1_1_fu_1045_p2 == 1'd1) | (exitcond1_fu_1022_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state6 : begin
            if (((exitcond2_1_fu_1099_p2 == 1'd0) & (exitcond2_fu_1066_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            if (((1'b1 == ap_CS_fsm_state78) & ((exitcond8_1_fu_1195_p2 == 1'd1) | (exitcond8_reg_2048 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state80 : begin
            if (((1'b1 == ap_CS_fsm_state80) & ((tmp_2_1_fu_1227_p2 == 1'd0) | (tmp_2_fu_1211_p2 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            if (((1'b1 == ap_CS_fsm_state82) & ((tmp_3_1_fu_1272_p2 == 1'd0) | (tmp_3_reg_2091 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state84 : begin
            if (((exitcond6_fu_1294_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state84))) begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            if (((1'b1 == ap_CS_fsm_state88) & ((exitcond13_1_fu_1310_p2 == 1'd1) | (exitcond6_reg_2128 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state93 : begin
            if (((exitcond7_fu_1326_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state93))) begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            if (((1'b1 == ap_CS_fsm_state97) & ((exitcond12_1_fu_1342_p2 == 1'd1) | (exitcond7_reg_2175 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state102 : begin
            if (((exitcond3_fu_1353_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state102))) begin
                ap_NS_fsm = ap_ST_fsm_state111;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end
        end
        ap_ST_fsm_state103 : begin
            if (((grp_k2c_idx2sub_fu_977_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state103))) begin
                ap_NS_fsm = ap_ST_fsm_state104;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end
        end
        ap_ST_fsm_state104 : begin
            if (((exitcond9_fu_1372_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state104))) begin
                ap_NS_fsm = ap_ST_fsm_state106;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state105;
            end
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            if (((1'b1 == ap_CS_fsm_state106) & ((exitcond11_1_fu_1388_p2 == 1'd1) | (exitcond9_reg_2241 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state109;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            if (((grp_k2c_sub2idx_fu_989_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state110))) begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state110;
            end
        end
        ap_ST_fsm_state111 : begin
            if (((exitcond4_fu_1450_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state111))) begin
                ap_NS_fsm = ap_ST_fsm_state121;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state112;
            end
        end
        ap_ST_fsm_state112 : begin
            if (((grp_k2c_idx2sub_fu_977_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state112))) begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state112;
            end
        end
        ap_ST_fsm_state113 : begin
            if (((exitcond10_fu_1470_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state113))) begin
                ap_NS_fsm = ap_ST_fsm_state115;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state114;
            end
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            if (((1'b1 == ap_CS_fsm_state115) & ((exitcond10_1_fu_1486_p2 == 1'd1) | (exitcond10_reg_2341 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state118;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state116;
            end
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            if (((grp_k2c_sub2idx_fu_989_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state119))) begin
                ap_NS_fsm = ap_ST_fsm_state120;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state119;
            end
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            if (((exitcond5_fu_1762_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state126))) begin
                ap_NS_fsm = ap_ST_fsm_state127;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state126;
            end
        end
        ap_ST_fsm_state127 : begin
            if (((tmp_7_fu_1781_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state127))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state128;
            end
        end
        ap_ST_fsm_state128 : begin
            if (((exitcond_fu_1810_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state128))) begin
                ap_NS_fsm = ap_ST_fsm_state127;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state129;
            end
        end
        ap_ST_fsm_state129 : begin
            if (((exitcond11_fu_1844_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state129))) begin
                ap_NS_fsm = ap_ST_fsm_state128;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state130;
            end
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_array1_address0 = newIndex_cast_fu_1413_p1;

assign A_array2_address0 = newIndex_cast_fu_1413_p1;

assign A_array3_address0 = newIndex_cast_fu_1413_p1;

assign A_array4_address0 = newIndex_cast_fu_1413_p1;

assign A_array5_address0 = newIndex_cast_fu_1413_p1;

assign A_array6_address0 = newIndex_cast_fu_1413_p1;

assign A_array7_address0 = newIndex_cast_fu_1413_p1;

assign A_array_address0 = newIndex_cast_fu_1413_p1;

assign Bsub_addr_3_gep_fu_669_p3 = permB_q0;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd124];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd128];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd129];

assign ap_CS_fsm_state131 = ap_CS_fsm[32'd130];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd131];

assign ap_CS_fsm_state135 = ap_CS_fsm[32'd134];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd135];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd136];

assign ap_CS_fsm_state145 = ap_CS_fsm[32'd144];

assign ap_CS_fsm_state146 = ap_CS_fsm[32'd145];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

assign count_2_cast_fu_1077_p1 = count_2_reg_781;

assign count_3_cast_fu_1089_p1 = ap_phi_mux_count_3_phi_fu_807_p4;

assign count_4_1_fu_1054_p2 = (count_1_reg_757 + 64'd1);

assign count_4_fu_1032_p2 = (count_reg_732 + 64'd1);

assign count_5_1_fu_1110_p2 = (count_3_reg_804 + 3'd1);

assign count_5_fu_1082_p2 = (count_2_reg_781 + 3'd1);

assign dense_15_output_shap_5_gep_fu_398_p3 = reg_1010;

assign dense_16_kernel_shap_3_gep_fu_452_p3 = reg_1016;

assign exitcond10_1_fu_1486_p2 = ((j_11_cast_fu_1481_p1 == B_dim) ? 1'b1 : 1'b0);

assign exitcond10_fu_1470_p2 = ((j_5_cast_fu_1465_p1 == B_dim) ? 1'b1 : 1'b0);

assign exitcond11_1_fu_1388_p2 = ((j_10_cast_fu_1383_p1 == A_dim) ? 1'b1 : 1'b0);

assign exitcond11_fu_1844_p2 = ((j_s_reg_966 == free_axesB_reg_2012) ? 1'b1 : 1'b0);

assign exitcond12_1_fu_1342_p2 = ((i_23_cast_fu_1337_p1 == B_dim) ? 1'b1 : 1'b0);

assign exitcond13_1_fu_1310_p2 = ((i_22_cast_fu_1305_p1 == A_dim) ? 1'b1 : 1'b0);

assign exitcond1_1_fu_1045_p2 = ((i_12_s_fu_1039_p2 == A_dim) ? 1'b1 : 1'b0);

assign exitcond1_fu_1022_p2 = ((i_reg_744 == A_dim) ? 1'b1 : 1'b0);

assign exitcond2_1_fu_1099_p2 = ((i_15_s_fu_1093_p2 == B_dim) ? 1'b1 : 1'b0);

assign exitcond2_fu_1066_p2 = ((i_1_reg_792 == B_dim) ? 1'b1 : 1'b0);

assign exitcond3_fu_1353_p2 = ((i_s_reg_885 == A_numel_read) ? 1'b1 : 1'b0);

assign exitcond4_fu_1450_p2 = ((i_3_reg_909 == B_numel_read) ? 1'b1 : 1'b0);

assign exitcond5_fu_1762_p2 = ((i_6_cast_fu_1757_p1 == tmp_6_reg_2461) ? 1'b1 : 1'b0);

assign exitcond6_fu_1294_p2 = ((i_8_cast_fu_1289_p1 == A_dim) ? 1'b1 : 1'b0);

assign exitcond7_fu_1326_p2 = ((i_9_cast_fu_1321_p1 == B_dim) ? 1'b1 : 1'b0);

assign exitcond8_1_fu_1195_p2 = ((i_18_cast_fu_1190_p1 == i_2_reg_2032) ? 1'b1 : 1'b0);

assign exitcond8_fu_1179_p2 = ((i_4_cast_fu_1174_p1 == i_2_reg_2032) ? 1'b1 : 1'b0);

assign exitcond9_fu_1372_p2 = ((j_4_cast_fu_1367_p1 == A_dim) ? 1'b1 : 1'b0);

assign exitcond_fu_1810_p2 = ((k_cast_fu_1806_p1 == tmp_18_reg_2001) ? 1'b1 : 1'b0);

assign free_axesB_1_fu_1138_p1 = free_axesB_fu_1129_p4;

assign free_axesB_fu_1129_p4 = {{B_numel_read[63:4]}};

assign fwork_address1 = sum3_cast_fu_1875_p1;

assign grp_fu_1124_p1 = reg_1005;

assign grp_fu_1461_p0 = free_axesB_1_reg_2017;

assign grp_k2c_idx2sub_fu_977_ap_start = grp_k2c_idx2sub_fu_977_ap_start_reg;

assign grp_k2c_sub2idx_fu_989_ap_start = grp_k2c_sub2idx_fu_989_ap_start_reg;

assign i_11_fu_1767_p2 = (i_6_reg_933 ^ 1'd1);

assign i_12_1_fu_1060_p2 = (i_reg_744 + 64'd2);

assign i_12_fu_1358_p2 = (i_s_reg_885 + 64'd1);

assign i_12_s_fu_1039_p2 = (i_reg_744 | 64'd1);

assign i_13_fu_1455_p2 = (i_3_reg_909 + 64'd1);

assign i_14_fu_1786_p2 = (64'd1 + i_10_reg_944);

assign i_15_1_fu_1104_p2 = (i_1_reg_792 + 64'd2);

assign i_15_cast_fu_1222_p1 = i_15_fu_1216_p2;

assign i_15_fu_1216_p2 = (i_5_reg_827 + 3'd1);

assign i_15_s_fu_1093_p2 = (i_1_reg_792 | 64'd1);

assign i_16_cast_fu_1253_p1 = i_16_fu_1247_p2;

assign i_16_fu_1247_p2 = (3'd1 + i_7_reg_836);

assign i_18_1_fu_1200_p2 = (i_4_reg_815 + 3'd2);

assign i_18_cast_fu_1190_p1 = i_18_s_fu_1184_p2;

assign i_18_s_fu_1184_p2 = (i_4_reg_815 | 3'd1);

assign i_19_1_fu_1232_p2 = (i_5_reg_827 + 3'd2);

assign i_21_1_fu_1277_p2 = (i_7_reg_836 + 3'd2);

assign i_22_1_fu_1315_p2 = (i_8_reg_861 + 3'd2);

assign i_22_cast_fu_1305_p1 = i_22_s_fu_1299_p2;

assign i_22_s_fu_1299_p2 = (i_8_reg_861 | 3'd1);

assign i_23_1_fu_1347_p2 = (i_9_reg_873 + 3'd2);

assign i_23_cast_fu_1337_p1 = i_23_s_fu_1331_p2;

assign i_23_s_fu_1331_p2 = (i_9_reg_873 | 3'd1);

assign i_2_cast_fu_1168_p2 = ($signed(3'd7) + $signed(tmp_19_fu_1160_p1));

assign i_2_fu_1163_p2 = ($signed(64'd18446744073709551615) + $signed(A_dim));

assign i_4_cast_fu_1174_p1 = i_4_reg_815;

assign i_5_cast_fu_1206_p1 = i_5_reg_827;

assign i_6_cast_fu_1757_p1 = i_6_reg_933;

assign i_7_cast_fu_1238_p1 = i_7_reg_836;

assign i_8_cast_fu_1289_p1 = i_8_reg_861;

assign i_9_cast_fu_1321_p1 = i_9_reg_873;

assign inneridx_fu_1797_p2 = ($signed(tmp_4_reg_1996) * $signed(tmp_23_fu_1773_p1));

assign j_10_1_fu_1393_p2 = (j_4_reg_897 + 3'd2);

assign j_10_cast_fu_1383_p1 = j_10_s_fu_1377_p2;

assign j_10_s_fu_1377_p2 = (j_4_reg_897 | 3'd1);

assign j_11_1_fu_1491_p2 = (j_5_reg_921 + 3'd2);

assign j_11_cast_fu_1481_p1 = j_11_s_fu_1475_p2;

assign j_11_s_fu_1475_p2 = (j_5_reg_921 | 3'd1);

assign j_4_cast_fu_1367_p1 = j_4_reg_897;

assign j_5_cast_fu_1465_p1 = j_5_reg_921;

assign j_9_1_fu_1283_p2 = (j_3_reg_848 + 64'd2);

assign j_9_cast_fu_1267_p1 = j_9_s_fu_1261_p2;

assign j_9_s_fu_1261_p2 = (tmp_20_fu_1257_p1 | 4'd1);

assign j_fu_1849_p2 = (60'd1 + j_s_reg_966);

assign k_1_fu_1815_p2 = (k_reg_955 + 5'd1);

assign k_cast3_fu_1802_p1 = k_reg_955;

assign k_cast_fu_1806_p1 = k_reg_955;

assign merge_i_fu_1744_p3 = ((tmp_17_fu_1740_p2[0:0] === 1'b1) ? tmp_639_i_fu_1733_p3 : tmp_637_i_fu_1726_p3);

assign newIndex_cast_fu_1413_p1 = newIndex_fu_1403_p4;

assign newIndex_fu_1403_p4 = {{i_s_reg_885[5:3]}};

assign outrowidx_fu_1792_p2 = ($signed(tmp_24_fu_1777_p1) * $signed(free_axesB_cast5_reg_2027));

assign sum1_cast_fu_1826_p1 = sum1_fu_1821_p2;

assign sum1_fu_1821_p2 = (k_cast3_fu_1802_p1 + inneridx_reg_2487);

assign sum2_cast_fu_1870_p1 = sum2_fu_1865_p2;

assign sum2_fu_1865_p2 = (tmp_29_fu_1840_p1 + outrowidx_reg_2482);

assign sum3_cast_fu_1875_p1 = sum3_reg_2518;

assign sum3_fu_1860_p2 = (tmp1_fu_1855_p2 + tmp_s_reg_2505);

assign sum_cast_fu_1753_p1 = sum_reg_2456;

assign sum_fu_1710_p2 = (tmp_25_fu_1545_p1 + tmp_21_reg_2230);

assign tmp1_fu_1855_p2 = (tmp_28_fu_1836_p1 + tmp_21_reg_2230);

assign tmp_12_fu_1582_p2 = (tmp_620_i_reg_2423 | tmp_618_i_reg_2418);

assign tmp_13_fu_1612_p2 = (tmp_624_i_fu_1599_p2 | tmp_622_i_fu_1594_p2);

assign tmp_14_fu_1644_p2 = (tmp_628_i_fu_1631_p2 | tmp_626_i_fu_1626_p2);

assign tmp_15_fu_1676_p2 = (tmp_632_i_fu_1663_p2 | tmp_630_i_fu_1658_p2);

assign tmp_16_fu_1722_p2 = (tmp_636_i_reg_2439 | tmp_634_i_reg_2434);

assign tmp_17_fu_1740_p2 = (tmp_640_i_reg_2450 | tmp_638_i_reg_2445);

assign tmp_18_fu_1120_p1 = dense_15_output_shap_q0[5:0];

assign tmp_19_fu_1160_p1 = A_dim[2:0];

assign tmp_1_27_fu_1563_p2 = (tmp_616_i_reg_2412 | tmp_614_i_reg_2407);

assign tmp_1_fu_1050_p2 = ((i_12_s_reg_1939 == p_read2) ? 1'b1 : 1'b0);

assign tmp_20_fu_1257_p1 = j_3_reg_848[3:0];

assign tmp_21_fu_1364_p1 = A_numel_read[6:0];

assign tmp_22_fu_1399_p1 = i_s_reg_885[2:0];

assign tmp_23_fu_1773_p1 = i_10_reg_944[6:0];

assign tmp_24_fu_1777_p1 = i_10_reg_944[1:0];

assign tmp_25_fu_1545_p1 = grp_k2c_sub2idx_fu_989_ap_return[6:0];

assign tmp_26_fu_1497_p1 = i_3_reg_909[2:0];

assign tmp_28_fu_1836_p1 = j_s_reg_966[6:0];

assign tmp_29_fu_1840_p1 = j_s_reg_966[1:0];

assign tmp_2_1_fu_1227_p2 = ((i_15_cast_fu_1222_p1 < A_dim) ? 1'b1 : 1'b0);

assign tmp_2_fu_1211_p2 = ((i_5_cast_fu_1206_p1 < A_dim) ? 1'b1 : 1'b0);

assign tmp_3_1_fu_1272_p2 = ((i_16_cast_fu_1253_p1 < B_dim) ? 1'b1 : 1'b0);

assign tmp_3_fu_1242_p2 = ((i_7_cast_fu_1238_p1 < B_dim) ? 1'b1 : 1'b0);

assign tmp_4_fu_1116_p1 = dense_15_output_shap_q0[6:0];

assign tmp_5_fu_1428_p9 = tmp_22_reg_2273;

assign tmp_614_i_fu_1521_p2 = ((tmp_9_fu_1509_p3 == 4'd1) ? 1'b1 : 1'b0);

assign tmp_615_i_fu_1556_p3 = ((tmp_616_i_reg_2412[0:0] === 1'b1) ? 32'd1058126179 : 32'd1057276743);

assign tmp_616_i_fu_1527_p2 = ((tmp_9_fu_1509_p3 == 4'd2) ? 1'b1 : 1'b0);

assign tmp_617_i_fu_1567_p3 = ((tmp_1_27_fu_1563_p2[0:0] === 1'b1) ? tmp_615_i_fu_1556_p3 : tmp_i_26_fu_1549_p3);

assign tmp_618_i_fu_1533_p2 = ((tmp_9_fu_1509_p3 == 4'd3) ? 1'b1 : 1'b0);

assign tmp_619_i_fu_1575_p3 = ((tmp_620_i_reg_2423[0:0] === 1'b1) ? 32'd1057164230 : 32'd1033602835);

assign tmp_620_i_fu_1539_p2 = ((tmp_9_fu_1509_p3 == 4'd4) ? 1'b1 : 1'b0);

assign tmp_621_i_fu_1586_p3 = ((tmp_12_fu_1582_p2[0:0] === 1'b1) ? tmp_619_i_fu_1575_p3 : tmp_617_i_fu_1567_p3);

assign tmp_622_i_fu_1594_p2 = ((tmp_9_reg_2388 == 4'd5) ? 1'b1 : 1'b0);

assign tmp_623_i_fu_1604_p3 = ((tmp_624_i_fu_1599_p2[0:0] === 1'b1) ? 32'd3198119787 : 32'd3206721058);

assign tmp_624_i_fu_1599_p2 = ((tmp_9_reg_2388 == 4'd6) ? 1'b1 : 1'b0);

assign tmp_625_i_fu_1618_p3 = ((tmp_13_fu_1612_p2[0:0] === 1'b1) ? tmp_623_i_fu_1604_p3 : tmp_621_i_fu_1586_p3);

assign tmp_626_i_fu_1626_p2 = ((tmp_9_reg_2388 == 4'd7) ? 1'b1 : 1'b0);

assign tmp_627_i_fu_1636_p3 = ((tmp_628_i_fu_1631_p2[0:0] === 1'b1) ? 32'd3197618047 : 32'd1047518324);

assign tmp_628_i_fu_1631_p2 = ((tmp_9_reg_2388 == 4'd8) ? 1'b1 : 1'b0);

assign tmp_629_i_fu_1650_p3 = ((tmp_14_fu_1644_p2[0:0] === 1'b1) ? tmp_627_i_fu_1636_p3 : tmp_625_i_fu_1618_p3);

assign tmp_630_i_fu_1658_p2 = ((tmp_9_reg_2388 == 4'd9) ? 1'b1 : 1'b0);

assign tmp_631_i_fu_1668_p3 = ((tmp_632_i_fu_1663_p2[0:0] === 1'b1) ? 32'd1049656494 : 32'd3203172868);

assign tmp_632_i_fu_1663_p2 = ((tmp_9_reg_2388 == 4'd10) ? 1'b1 : 1'b0);

assign tmp_633_i_fu_1682_p3 = ((tmp_15_fu_1676_p2[0:0] === 1'b1) ? tmp_631_i_fu_1668_p3 : tmp_629_i_fu_1650_p3);

assign tmp_634_i_fu_1690_p2 = ((tmp_9_reg_2388 == 4'd11) ? 1'b1 : 1'b0);

assign tmp_635_i_fu_1715_p3 = ((tmp_636_i_reg_2439[0:0] === 1'b1) ? 32'd1024893795 : 32'd1043864867);

assign tmp_636_i_fu_1695_p2 = ((tmp_9_reg_2388 == 4'd12) ? 1'b1 : 1'b0);

assign tmp_637_i_fu_1726_p3 = ((tmp_16_fu_1722_p2[0:0] === 1'b1) ? tmp_635_i_fu_1715_p3 : tmp_633_i_reg_2429);

assign tmp_638_i_fu_1700_p2 = ((tmp_9_reg_2388 == 4'd13) ? 1'b1 : 1'b0);

assign tmp_639_i_fu_1733_p3 = ((tmp_640_i_reg_2450[0:0] === 1'b1) ? 32'd3177741676 : 32'd1055048469);

assign tmp_640_i_fu_1705_p2 = ((tmp_9_reg_2388 == 4'd14) ? 1'b1 : 1'b0);

assign tmp_7_fu_1781_p2 = ((i_10_reg_944 < free_axesA_reg_2006) ? 1'b1 : 1'b0);

assign tmp_8_fu_1027_p2 = ((i_reg_744 == p_read2) ? 1'b1 : 1'b0);

assign tmp_9_fu_1509_p3 = {{tmp_26_reg_2373}, {tmp_27_reg_2378}};

assign tmp_fu_1071_p2 = ((i_1_reg_792 == 64'd0) ? 1'b1 : 1'b0);

assign tmp_i_26_fu_1549_p3 = ((tmp_i_reg_2402[0:0] === 1'b1) ? 32'd1017080606 : 32'd1058332370);

assign tmp_i_fu_1515_p2 = ((tmp_9_fu_1509_p3 == 4'd0) ? 1'b1 : 1'b0);

assign tmp_s_fu_1831_p0 = k_cast3_fu_1802_p1;

assign tmp_s_fu_1831_p2 = ($signed({{1'b0}, {tmp_s_fu_1831_p0}}) * $signed(free_axesB_cast6_reg_2022));

always @ (posedge ap_clk) begin
    i_12_s_reg_1939[0] <= 1'b1;
    count_3_cast_reg_1968[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_15_s_reg_1973[0] <= 1'b1;
    free_axesB_1_reg_2017[63:60] <= 4'b0000;
    i_4_cast_reg_2043[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_18_cast_reg_2057[0] <= 1'b1;
    i_18_cast_reg_2057[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_7_cast_reg_2086[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_16_cast_reg_2100[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_8_cast_reg_2123[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_22_cast_reg_2142[0] <= 1'b1;
    i_22_cast_reg_2142[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_9_cast_reg_2170[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_23_cast_reg_2194[0] <= 1'b1;
    i_23_cast_reg_2194[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    j_4_cast_reg_2236[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    j_10_cast_reg_2255[0] <= 1'b1;
    j_10_cast_reg_2255[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    j_5_cast_reg_2336[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    j_11_cast_reg_2355[0] <= 1'b1;
    j_11_cast_reg_2355[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_633_i_reg_2429[30:26] <= 5'b01111;
end

endmodule //k2c_dot_3
