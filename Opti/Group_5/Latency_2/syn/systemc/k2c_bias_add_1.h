// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _k2c_bias_add_1_HH_
#define _k2c_bias_add_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sample_fadd_32ns_ocq.h"
#include "sample_mux_864_32rcU.h"
#include "k2c_bias_add_1_deXh4.h"

namespace ap_rtl {

struct k2c_bias_add_1 : public sc_module {
    // Port declarations 48
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<2> > A_array_address0;
    sc_out< sc_logic > A_array_ce0;
    sc_out< sc_logic > A_array_we0;
    sc_out< sc_lv<32> > A_array_d0;
    sc_in< sc_lv<32> > A_array_q0;
    sc_out< sc_lv<2> > A_array1_address0;
    sc_out< sc_logic > A_array1_ce0;
    sc_out< sc_logic > A_array1_we0;
    sc_out< sc_lv<32> > A_array1_d0;
    sc_in< sc_lv<32> > A_array1_q0;
    sc_out< sc_lv<2> > A_array2_address0;
    sc_out< sc_logic > A_array2_ce0;
    sc_out< sc_logic > A_array2_we0;
    sc_out< sc_lv<32> > A_array2_d0;
    sc_in< sc_lv<32> > A_array2_q0;
    sc_out< sc_lv<2> > A_array3_address0;
    sc_out< sc_logic > A_array3_ce0;
    sc_out< sc_logic > A_array3_we0;
    sc_out< sc_lv<32> > A_array3_d0;
    sc_in< sc_lv<32> > A_array3_q0;
    sc_out< sc_lv<2> > A_array4_address0;
    sc_out< sc_logic > A_array4_ce0;
    sc_out< sc_logic > A_array4_we0;
    sc_out< sc_lv<32> > A_array4_d0;
    sc_in< sc_lv<32> > A_array4_q0;
    sc_out< sc_lv<2> > A_array5_address0;
    sc_out< sc_logic > A_array5_ce0;
    sc_out< sc_logic > A_array5_we0;
    sc_out< sc_lv<32> > A_array5_d0;
    sc_in< sc_lv<32> > A_array5_q0;
    sc_out< sc_lv<2> > A_array6_address0;
    sc_out< sc_logic > A_array6_ce0;
    sc_out< sc_logic > A_array6_we0;
    sc_out< sc_lv<32> > A_array6_d0;
    sc_in< sc_lv<32> > A_array6_q0;
    sc_out< sc_lv<2> > A_array7_address0;
    sc_out< sc_logic > A_array7_ce0;
    sc_out< sc_logic > A_array7_we0;
    sc_out< sc_lv<32> > A_array7_d0;
    sc_in< sc_lv<32> > A_array7_q0;
    sc_in< sc_lv<64> > A_numel_read;
    sc_in< sc_lv<64> > b_numel_read;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    k2c_bias_add_1(sc_module_name name);
    SC_HAS_PROCESS(k2c_bias_add_1);

    ~k2c_bias_add_1();

    sc_trace_file* mVcdFile;

    k2c_bias_add_1_deXh4* dense_14_bias_array_U;
    sample_fadd_32ns_ocq<1,9,32,32,32>* sample_fadd_32ns_ocq_U206;
    sample_mux_864_32rcU<1,1,32,32,32,32,32,32,32,32,64,32>* sample_mux_864_32rcU_U207;
    sc_signal< sc_lv<14> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > dense_14_bias_array_address0;
    sc_signal< sc_logic > dense_14_bias_array_ce0;
    sc_signal< sc_lv<32> > dense_14_bias_array_q0;
    sc_signal< sc_lv<3> > tmp_90_fu_212_p1;
    sc_signal< sc_lv<3> > tmp_90_reg_316;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_fu_207_p2;
    sc_signal< sc_lv<64> > j_2_fu_225_p2;
    sc_signal< sc_lv<64> > j_2_reg_324;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > exitcond_fu_220_p2;
    sc_signal< sc_lv<3> > arrayNo_trunc_fu_245_p2;
    sc_signal< sc_lv<3> > arrayNo_trunc_reg_334;
    sc_signal< sc_lv<2> > A_array_addr_reg_339;
    sc_signal< sc_lv<2> > A_array1_addr_reg_344;
    sc_signal< sc_lv<2> > A_array2_addr_reg_349;
    sc_signal< sc_lv<2> > A_array3_addr_reg_354;
    sc_signal< sc_lv<2> > A_array4_addr_reg_359;
    sc_signal< sc_lv<2> > A_array5_addr_reg_364;
    sc_signal< sc_lv<2> > A_array6_addr_reg_369;
    sc_signal< sc_lv<2> > A_array7_addr_reg_374;
    sc_signal< sc_lv<64> > i_35_fu_272_p2;
    sc_signal< sc_lv<32> > dense_14_bias_array_1_reg_384;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > tmp_52_fu_280_p10;
    sc_signal< sc_lv<32> > tmp_52_reg_389;
    sc_signal< sc_lv<32> > grp_fu_203_p2;
    sc_signal< sc_lv<32> > tmp_s_reg_394;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<64> > i_reg_179;
    sc_signal< sc_lv<64> > j_reg_191;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<64> > newIndex_cast_fu_260_p1;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<7> > tmp_93_fu_235_p1;
    sc_signal< sc_lv<7> > tmp_91_fu_216_p1;
    sc_signal< sc_lv<3> > tmp_92_fu_231_p1;
    sc_signal< sc_lv<7> > sum_fu_239_p2;
    sc_signal< sc_lv<4> > newIndex_fu_250_p4;
    sc_signal< sc_lv<64> > tmp_52_fu_280_p9;
    sc_signal< sc_lv<14> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<14> ap_ST_fsm_state1;
    static const sc_lv<14> ap_ST_fsm_state2;
    static const sc_lv<14> ap_ST_fsm_state3;
    static const sc_lv<14> ap_ST_fsm_state4;
    static const sc_lv<14> ap_ST_fsm_state5;
    static const sc_lv<14> ap_ST_fsm_state6;
    static const sc_lv<14> ap_ST_fsm_state7;
    static const sc_lv<14> ap_ST_fsm_state8;
    static const sc_lv<14> ap_ST_fsm_state9;
    static const sc_lv<14> ap_ST_fsm_state10;
    static const sc_lv<14> ap_ST_fsm_state11;
    static const sc_lv<14> ap_ST_fsm_state12;
    static const sc_lv<14> ap_ST_fsm_state13;
    static const sc_lv<14> ap_ST_fsm_state14;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_A_array1_address0();
    void thread_A_array1_ce0();
    void thread_A_array1_d0();
    void thread_A_array1_we0();
    void thread_A_array2_address0();
    void thread_A_array2_ce0();
    void thread_A_array2_d0();
    void thread_A_array2_we0();
    void thread_A_array3_address0();
    void thread_A_array3_ce0();
    void thread_A_array3_d0();
    void thread_A_array3_we0();
    void thread_A_array4_address0();
    void thread_A_array4_ce0();
    void thread_A_array4_d0();
    void thread_A_array4_we0();
    void thread_A_array5_address0();
    void thread_A_array5_ce0();
    void thread_A_array5_d0();
    void thread_A_array5_we0();
    void thread_A_array6_address0();
    void thread_A_array6_ce0();
    void thread_A_array6_d0();
    void thread_A_array6_we0();
    void thread_A_array7_address0();
    void thread_A_array7_ce0();
    void thread_A_array7_d0();
    void thread_A_array7_we0();
    void thread_A_array_address0();
    void thread_A_array_ce0();
    void thread_A_array_d0();
    void thread_A_array_we0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_arrayNo_trunc_fu_245_p2();
    void thread_dense_14_bias_array_address0();
    void thread_dense_14_bias_array_ce0();
    void thread_exitcond_fu_220_p2();
    void thread_i_35_fu_272_p2();
    void thread_j_2_fu_225_p2();
    void thread_newIndex_cast_fu_260_p1();
    void thread_newIndex_fu_250_p4();
    void thread_sum_fu_239_p2();
    void thread_tmp_52_fu_280_p9();
    void thread_tmp_90_fu_212_p1();
    void thread_tmp_91_fu_216_p1();
    void thread_tmp_92_fu_231_p1();
    void thread_tmp_93_fu_235_p1();
    void thread_tmp_fu_207_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
