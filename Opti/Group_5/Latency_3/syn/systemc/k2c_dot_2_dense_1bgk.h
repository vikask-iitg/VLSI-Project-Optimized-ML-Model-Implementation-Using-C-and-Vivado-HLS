// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef __k2c_dot_2_dense_1bgk_H__
#define __k2c_dot_2_dense_1bgk_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct k2c_dot_2_dense_1bgk_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 64;
  static const unsigned AddressWidth = 6;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(k2c_dot_2_dense_1bgk_ram) {
        ram[0] = "0b00111011111110100100001010111110";
        ram[1] = "0b00111110001011111001001011100011";
        ram[2] = "0b10111110001101100011001011001000";
        ram[3] = "0b00111110010101011000111010100101";
        ram[4] = "0b10111110011001101010011100110100";
        ram[5] = "0b00111110010111001111010000101001";
        ram[6] = "0b10111101010010001010000111101110";
        ram[7] = "0b10111100001000101011111011000010";
        ram[8] = "0b00111110001100101001111010100101";
        ram[9] = "0b00111110101100100110010110111001";
        ram[10] = "0b10111110100011011010101101111100";
        ram[11] = "0b00111110100010101100101000001101";
        ram[12] = "0b10111100011000000010010110110110";
        ram[13] = "0b00111110010000101101100100111001";
        ram[14] = "0b10111110100011000000111110000111";
        ram[15] = "0b10111110011110001111110101100110";
        ram[16] = "0b10111110010010111010100110111000";
        ram[17] = "0b00111110100100101110101011100000";
        ram[18] = "0b00111110100100001010110010000100";
        ram[19] = "0b10111110001101110010111011111110";
        ram[20] = "0b00111101111111110000100011000011";
        ram[21] = "0b00111101011111110001000111101100";
        ram[22] = "0b10111101010001111101101010011001";
        ram[23] = "0b10111101000101101001010111000011";
        ram[24] = "0b10111101101100011111011011011110";
        ram[25] = "0b00111110011100011110110110001001";
        ram[26] = "0b10111110101001001100110101000000";
        ram[27] = "0b10111110100000110001011010111100";
        ram[28] = "0b00111110000110101110001100110110";
        ram[29] = "0b00111101101101001010100110101010";
        ram[30] = "0b00111110001110000111110110110110";
        ram[31] = "0b10111101001100101101100010001011";
        ram[32] = "0b10111110100010011001001010010011";
        ram[33] = "0b00111100101010010010101011111100";
        ram[34] = "0b10111110101010110110001010000011";
        ram[35] = "0b10111101011100000100000110010001";
        ram[36] = "0b10111110100010101101110101010010";
        ram[37] = "0b10111110011100011101110100110011";
        ram[38] = "0b00111110100101001101011110010101";
        ram[39] = "0b10111110100010111110011110000010";
        ram[40] = "0b00111101001011111110011110111110";
        ram[41] = "0b10111110100000101110111111000000";
        ram[42] = "0b00111011101111101111100110010001";
        ram[43] = "0b10111110000011111011000111100001";
        ram[44] = "0b10111101100111011000011101110101";
        ram[45] = "0b00111101110111001010011100110001";
        ram[46] = "0b10111110100001010111011100011101";
        ram[47] = "0b10111110010110110100000010110101";
        ram[48] = "0b00111110010011101001010110111000";
        ram[49] = "0b00111110011110100110101111110111";
        ram[50] = "0b10111110100111100101111100100111";
        ram[51] = "0b10111101011000111111100011111001";
        ram[52] = "0b00111110001001011011000001110011";
        ram[53] = "0b00111110011100110000000001001111";
        ram[54] = "0b00111110101001111010100101000001";
        ram[55] = "0b10111110100011110101101011110111";
        ram[56] = "0b10111110010101100000110011001001";
        ram[57] = "0b10111110001000010001111011000001";
        ram[58] = "0b10111110100100010110100111100111";
        ram[59] = "0b10111110001011001110010111010001";
        ram[60] = "0b00111101111001001010001100010000";
        ram[61] = "0b10111110100101000110100111111000";
        ram[62] = "0b00111110101100010001000001000111";
        ram[63] = "0b00111010100010111111110011000110";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(k2c_dot_2_dense_1bgk) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 64;
static const unsigned AddressWidth = 6;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


k2c_dot_2_dense_1bgk_ram* meminst;


SC_CTOR(k2c_dot_2_dense_1bgk) {
meminst = new k2c_dot_2_dense_1bgk_ram("k2c_dot_2_dense_1bgk_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~k2c_dot_2_dense_1bgk() {
    delete meminst;
}


};//endmodule
#endif
