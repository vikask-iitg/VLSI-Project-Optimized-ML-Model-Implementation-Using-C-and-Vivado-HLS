// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef __k2c_dot_2_dense_1bek_H__
#define __k2c_dot_2_dense_1bek_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct k2c_dot_2_dense_1bek_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 64;
  static const unsigned AddressWidth = 6;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(k2c_dot_2_dense_1bek_ram) {
        ram[0] = "0b10111101101000001110110000000111";
        ram[1] = "0b00111110010001100101111110111101";
        ram[2] = "0b00111110011001011100011101001111";
        ram[3] = "0b00111110100000101000000110101100";
        ram[4] = "0b00111110101111110101010111011010";
        ram[5] = "0b00111110100000101011011100011100";
        ram[6] = "0b00111110000110010111011101100010";
        ram[7] = "0b00111101100100010011101101101101";
        ram[8] = "0b00111110100001010000000111000100";
        ram[9] = "0b00111101001011110101110111011011";
        ram[10] = "0b10111110100111001111101000000001";
        ram[11] = "0b00111110010010111111010110011111";
        ram[12] = "0b10111101101000110001011010000010";
        ram[13] = "0b00111110101011000100100010011111";
        ram[14] = "0b10111100010011110001111011001100";
        ram[15] = "0b00111110100111000011001110100111";
        ram[16] = "0b10111110100010101011001011010000";
        ram[17] = "0b00111110001100011110001110000010";
        ram[18] = "0b00111101110011110100100111000101";
        ram[19] = "0b10111101101000110001011111100111";
        ram[20] = "0b10111110001010010111101111001110";
        ram[21] = "0b10111110001000111110100001000001";
        ram[22] = "0b00111110001011110001101010001110";
        ram[23] = "0b10111101011100111111011011000111";
        ram[24] = "0b10111110000000100110100111011100";
        ram[25] = "0b00111110011111100010100010010110";
        ram[26] = "0b00111110101111101110110000110000";
        ram[27] = "0b10111010111010100100101000000111";
        ram[28] = "0b00111100111101011011111101001010";
        ram[29] = "0b00111101011011100110101000100000";
        ram[30] = "0b10111110010010010101100000011110";
        ram[31] = "0b00111101110001010001001101000010";
        ram[32] = "0b00111100001101010101001010011010";
        ram[33] = "0b00111110000100101010100000010001";
        ram[34] = "0b10111101011010110000111100010110";
        ram[35] = "0b00111110011101111001000110001000";
        ram[36] = "0b10111101100000100100011110111001";
        ram[37] = "0b00111110101010010100110010100011";
        ram[38] = "0b00111011100110001011001010011110";
        ram[39] = "0b10111110011011111011101010001111";
        ram[40] = "0b00111110011010101010010111000110";
        ram[41] = "0b00111110100101101000010000011100";
        ram[42] = "0b10111110000111110010101010011100";
        ram[43] = "0b00111110011000010001111011100110";
        ram[44] = "0b10111100100100111100000101101011";
        ram[45] = "0b10111100100101111010101001110001";
        ram[46] = "0b00111110110001011101110101011010";
        ram[47] = "0b10111101100111011001000000001101";
        ram[48] = "0b10111110011000100011110010100100";
        ram[49] = "0b00111110101111100000011000100010";
        ram[50] = "0b00111110101010100010111110011000";
        ram[51] = "0b10111110010101101100000110000010";
        ram[52] = "0b00111110010010011001011101101101";
        ram[53] = "0b10111110100011111101010110000010";
        ram[54] = "0b10111101101000100010011000001100";
        ram[55] = "0b10111110001101101100011011011000";
        ram[56] = "0b10111110011000010110001101010101";
        ram[57] = "0b00111110001000111110010111111101";
        ram[58] = "0b00111110101000000100100011000110";
        ram[59] = "0b00111110100010100111101101111001";
        ram[60] = "0b10111110100111011100110011001111";
        ram[61] = "0b10111110001100101110000110001100";
        ram[62] = "0b10111110010101111001011010111111";
        ram[63] = "0b10111101111001111101110111100011";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(k2c_dot_2_dense_1bek) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 64;
static const unsigned AddressWidth = 6;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


k2c_dot_2_dense_1bek_ram* meminst;


SC_CTOR(k2c_dot_2_dense_1bek) {
meminst = new k2c_dot_2_dense_1bek_ram("k2c_dot_2_dense_1bek_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~k2c_dot_2_dense_1bek() {
    delete meminst;
}


};//endmodule
#endif
