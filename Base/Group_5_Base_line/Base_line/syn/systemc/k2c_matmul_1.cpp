// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "k2c_matmul_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic k2c_matmul_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic k2c_matmul_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state1 = "1";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state2 = "10";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state3 = "100";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state4 = "1000";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state5 = "10000";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state6 = "100000";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state7 = "1000000";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state8 = "10000000";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state9 = "100000000";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state10 = "1000000000";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state11 = "10000000000";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state12 = "100000000000";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<31> k2c_matmul_1::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<32> k2c_matmul_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> k2c_matmul_1::ap_const_lv32_5 = "101";
const sc_lv<32> k2c_matmul_1::ap_const_lv32_6 = "110";
const sc_lv<1> k2c_matmul_1::ap_const_lv1_1 = "1";
const sc_lv<32> k2c_matmul_1::ap_const_lv32_7 = "111";
const sc_lv<32> k2c_matmul_1::ap_const_lv32_9 = "1001";
const sc_lv<32> k2c_matmul_1::ap_const_lv32_A = "1010";
const sc_lv<1> k2c_matmul_1::ap_const_lv1_0 = "0";
const sc_lv<32> k2c_matmul_1::ap_const_lv32_C = "1100";
const sc_lv<32> k2c_matmul_1::ap_const_lv32_D = "1101";
const sc_lv<32> k2c_matmul_1::ap_const_lv32_E = "1110";
const sc_lv<32> k2c_matmul_1::ap_const_lv32_F = "1111";
const sc_lv<32> k2c_matmul_1::ap_const_lv32_14 = "10100";
const sc_lv<32> k2c_matmul_1::ap_const_lv32_1D = "11101";
const sc_lv<14> k2c_matmul_1::ap_const_lv14_0 = "00000000000000";
const sc_lv<64> k2c_matmul_1::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> k2c_matmul_1::ap_const_lv32_1E = "11110";
const sc_lv<32> k2c_matmul_1::ap_const_lv32_13 = "10011";
const sc_lv<32> k2c_matmul_1::ap_const_lv32_15 = "10101";
const sc_lv<32> k2c_matmul_1::ap_const_lv32_10 = "10000";
const sc_lv<14> k2c_matmul_1::ap_const_lv14_1 = "1";
const sc_lv<64> k2c_matmul_1::ap_const_lv64_1 = "1";
const bool k2c_matmul_1::ap_const_boolean_1 = true;

k2c_matmul_1::k2c_matmul_1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    sample0_fadd_32nscud_U70 = new sample0_fadd_32nscud<1,9,32,32,32>("sample0_fadd_32nscud_U70");
    sample0_fadd_32nscud_U70->clk(ap_clk);
    sample0_fadd_32nscud_U70->reset(ap_rst);
    sample0_fadd_32nscud_U70->din0(C_load_reg_424);
    sample0_fadd_32nscud_U70->din1(tmp_18_reg_419);
    sample0_fadd_32nscud_U70->ce(ap_var_for_const0);
    sample0_fadd_32nscud_U70->dout(grp_fu_137_p2);
    sample0_fmul_32nsdEe_U71 = new sample0_fmul_32nsdEe<1,5,32,32,32>("sample0_fmul_32nsdEe_U71");
    sample0_fmul_32nsdEe_U71->clk(ap_clk);
    sample0_fmul_32nsdEe_U71->reset(ap_rst);
    sample0_fmul_32nsdEe_U71->din0(B_load_3_reg_409);
    sample0_fmul_32nsdEe_U71->din1(B_load_reg_414);
    sample0_fmul_32nsdEe_U71->ce(ap_var_for_const0);
    sample0_fmul_32nsdEe_U71->dout(grp_fu_141_p2);
    sample0_mul_64s_6bkb_U72 = new sample0_mul_64s_6bkb<1,6,64,64,64>("sample0_mul_64s_6bkb_U72");
    sample0_mul_64s_6bkb_U72->clk(ap_clk);
    sample0_mul_64s_6bkb_U72->reset(ap_rst);
    sample0_mul_64s_6bkb_U72->din0(outcols);
    sample0_mul_64s_6bkb_U72->din1(outrows);
    sample0_mul_64s_6bkb_U72->ce(ap_var_for_const0);
    sample0_mul_64s_6bkb_U72->dout(grp_fu_145_p2);
    sample0_mul_mul_1eOg_U73 = new sample0_mul_mul_1eOg<1,3,15,15,15>("sample0_mul_mul_1eOg_U73");
    sample0_mul_mul_1eOg_U73->clk(ap_clk);
    sample0_mul_mul_1eOg_U73->reset(ap_rst);
    sample0_mul_mul_1eOg_U73->din0(grp_fu_261_p0);
    sample0_mul_mul_1eOg_U73->din1(tmp_22_reg_315);
    sample0_mul_mul_1eOg_U73->ce(ap_var_for_const0);
    sample0_mul_mul_1eOg_U73->dout(grp_fu_261_p2);
    sample0_mul_mul_1mb6_U74 = new sample0_mul_mul_1mb6<1,3,14,14,14>("sample0_mul_mul_1mb6_U74");
    sample0_mul_mul_1mb6_U74->clk(ap_clk);
    sample0_mul_mul_1mb6_U74->reset(ap_rst);
    sample0_mul_mul_1mb6_U74->din0(grp_fu_266_p0);
    sample0_mul_mul_1mb6_U74->din1(tmp_23_reg_320);
    sample0_mul_mul_1mb6_U74->ce(ap_var_for_const0);
    sample0_mul_mul_1mb6_U74->dout(grp_fu_266_p2);
    sample0_mac_muladncg_U75 = new sample0_mac_muladncg<1,3,14,14,14,14>("sample0_mac_muladncg_U75");
    sample0_mac_muladncg_U75->clk(ap_clk);
    sample0_mac_muladncg_U75->reset(ap_rst);
    sample0_mac_muladncg_U75->din0(tmp_28_fu_198_p1);
    sample0_mac_muladncg_U75->din1(tmp_24_reg_325);
    sample0_mac_muladncg_U75->din2(tmp_25_reg_330);
    sample0_mac_muladncg_U75->ce(ap_var_for_const0);
    sample0_mac_muladncg_U75->dout(grp_fu_271_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_B_address0);
    sensitive << ( B_addr_reg_376 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_B_address1);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( sum3_cast_fu_257_p1 );

    SC_METHOD(thread_B_ce0);
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_B_ce1);
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_C_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( C_addr_3_reg_399 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( i_cast_fu_151_p1 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_C_ce0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_C_d0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_20_reg_429 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_C_we0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond3_fu_156_p2 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond2_fu_187_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond2_fu_187_p2 );

    SC_METHOD(thread_exitcond1_fu_202_p2);
    sensitive << ( innerdim );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( k_reg_115 );

    SC_METHOD(thread_exitcond2_fu_187_p1);
    sensitive << ( outrows );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_exitcond2_fu_187_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( i_1_reg_104 );
    sensitive << ( exitcond2_fu_187_p1 );

    SC_METHOD(thread_exitcond3_fu_156_p2);
    sensitive << ( total_ele_reg_302 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( i_cast_fu_151_p1 );

    SC_METHOD(thread_exitcond_fu_231_p1);
    sensitive << ( outcols );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_exitcond_fu_231_p2);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( j_reg_126 );
    sensitive << ( exitcond_fu_231_p1 );

    SC_METHOD(thread_grp_fu_261_p0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( i_1_reg_104 );

    SC_METHOD(thread_grp_fu_266_p0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( i_1_reg_104 );

    SC_METHOD(thread_i_2_fu_161_p2);
    sensitive << ( i_reg_93 );

    SC_METHOD(thread_i_3_fu_192_p2);
    sensitive << ( i_1_reg_104 );

    SC_METHOD(thread_i_cast_fu_151_p1);
    sensitive << ( i_reg_93 );

    SC_METHOD(thread_j_1_fu_236_p2);
    sensitive << ( j_reg_126 );

    SC_METHOD(thread_k_1_fu_207_p2);
    sensitive << ( k_reg_115 );

    SC_METHOD(thread_sum2_cast_fu_252_p1);
    sensitive << ( sum2_fu_247_p2 );

    SC_METHOD(thread_sum2_fu_247_p2);
    sensitive << ( outrowidx_reg_353 );
    sensitive << ( tmp_29_fu_223_p1 );

    SC_METHOD(thread_sum3_cast_fu_257_p1);
    sensitive << ( sum3_reg_394 );

    SC_METHOD(thread_sum3_fu_242_p2);
    sensitive << ( tmp_reg_381 );
    sensitive << ( tmp_30_fu_227_p1 );

    SC_METHOD(thread_sum_cast_fu_218_p1);
    sensitive << ( sum_fu_213_p2 );

    SC_METHOD(thread_sum_fu_213_p2);
    sensitive << ( inneridx_reg_358 );
    sensitive << ( tmp_28_fu_198_p1 );

    SC_METHOD(thread_tmp_22_fu_167_p0);
    sensitive << ( outcols );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_tmp_22_fu_167_p1);
    sensitive << ( tmp_22_fu_167_p0 );

    SC_METHOD(thread_tmp_23_fu_170_p1);
    sensitive << ( innerdim );

    SC_METHOD(thread_tmp_24_fu_173_p0);
    sensitive << ( outcols );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_tmp_24_fu_173_p1);
    sensitive << ( tmp_24_fu_173_p0 );

    SC_METHOD(thread_tmp_25_fu_176_p1);
    sensitive << ( B_offset );

    SC_METHOD(thread_tmp_28_fu_198_p1);
    sensitive << ( k_reg_115 );

    SC_METHOD(thread_tmp_29_fu_223_p1);
    sensitive << ( j_reg_126 );

    SC_METHOD(thread_tmp_30_fu_227_p1);
    sensitive << ( j_reg_126 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond3_fu_156_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond1_fu_202_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( exitcond_fu_231_p2 );
    sensitive << ( exitcond2_fu_187_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "k2c_matmul_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, C_address0, "(port)C_address0");
    sc_trace(mVcdFile, C_ce0, "(port)C_ce0");
    sc_trace(mVcdFile, C_we0, "(port)C_we0");
    sc_trace(mVcdFile, C_d0, "(port)C_d0");
    sc_trace(mVcdFile, C_q0, "(port)C_q0");
    sc_trace(mVcdFile, B_address0, "(port)B_address0");
    sc_trace(mVcdFile, B_ce0, "(port)B_ce0");
    sc_trace(mVcdFile, B_q0, "(port)B_q0");
    sc_trace(mVcdFile, B_address1, "(port)B_address1");
    sc_trace(mVcdFile, B_ce1, "(port)B_ce1");
    sc_trace(mVcdFile, B_q1, "(port)B_q1");
    sc_trace(mVcdFile, B_offset, "(port)B_offset");
    sc_trace(mVcdFile, outrows, "(port)outrows");
    sc_trace(mVcdFile, outcols, "(port)outcols");
    sc_trace(mVcdFile, innerdim, "(port)innerdim");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_fu_145_p2, "grp_fu_145_p2");
    sc_trace(mVcdFile, total_ele_reg_302, "total_ele_reg_302");
    sc_trace(mVcdFile, i_2_fu_161_p2, "i_2_fu_161_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_22_fu_167_p1, "tmp_22_fu_167_p1");
    sc_trace(mVcdFile, tmp_22_reg_315, "tmp_22_reg_315");
    sc_trace(mVcdFile, exitcond3_fu_156_p2, "exitcond3_fu_156_p2");
    sc_trace(mVcdFile, tmp_23_fu_170_p1, "tmp_23_fu_170_p1");
    sc_trace(mVcdFile, tmp_23_reg_320, "tmp_23_reg_320");
    sc_trace(mVcdFile, tmp_24_fu_173_p1, "tmp_24_fu_173_p1");
    sc_trace(mVcdFile, tmp_24_reg_325, "tmp_24_reg_325");
    sc_trace(mVcdFile, tmp_25_fu_176_p1, "tmp_25_fu_176_p1");
    sc_trace(mVcdFile, tmp_25_reg_330, "tmp_25_reg_330");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, i_3_fu_192_p2, "i_3_fu_192_p2");
    sc_trace(mVcdFile, i_3_reg_348, "i_3_reg_348");
    sc_trace(mVcdFile, grp_fu_261_p2, "grp_fu_261_p2");
    sc_trace(mVcdFile, outrowidx_reg_353, "outrowidx_reg_353");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, grp_fu_266_p2, "grp_fu_266_p2");
    sc_trace(mVcdFile, inneridx_reg_358, "inneridx_reg_358");
    sc_trace(mVcdFile, tmp_28_fu_198_p1, "tmp_28_fu_198_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, k_1_fu_207_p2, "k_1_fu_207_p2");
    sc_trace(mVcdFile, k_1_reg_371, "k_1_reg_371");
    sc_trace(mVcdFile, B_addr_reg_376, "B_addr_reg_376");
    sc_trace(mVcdFile, exitcond1_fu_202_p2, "exitcond1_fu_202_p2");
    sc_trace(mVcdFile, grp_fu_271_p3, "grp_fu_271_p3");
    sc_trace(mVcdFile, tmp_reg_381, "tmp_reg_381");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, j_1_fu_236_p2, "j_1_fu_236_p2");
    sc_trace(mVcdFile, j_1_reg_389, "j_1_reg_389");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, sum3_fu_242_p2, "sum3_fu_242_p2");
    sc_trace(mVcdFile, sum3_reg_394, "sum3_reg_394");
    sc_trace(mVcdFile, exitcond_fu_231_p2, "exitcond_fu_231_p2");
    sc_trace(mVcdFile, C_addr_3_reg_399, "C_addr_3_reg_399");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, B_load_3_reg_409, "B_load_3_reg_409");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, B_load_reg_414, "B_load_reg_414");
    sc_trace(mVcdFile, grp_fu_141_p2, "grp_fu_141_p2");
    sc_trace(mVcdFile, tmp_18_reg_419, "tmp_18_reg_419");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, C_load_reg_424, "C_load_reg_424");
    sc_trace(mVcdFile, grp_fu_137_p2, "grp_fu_137_p2");
    sc_trace(mVcdFile, tmp_20_reg_429, "tmp_20_reg_429");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, i_reg_93, "i_reg_93");
    sc_trace(mVcdFile, i_1_reg_104, "i_1_reg_104");
    sc_trace(mVcdFile, k_reg_115, "k_reg_115");
    sc_trace(mVcdFile, j_reg_126, "j_reg_126");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, i_cast_fu_151_p1, "i_cast_fu_151_p1");
    sc_trace(mVcdFile, sum_cast_fu_218_p1, "sum_cast_fu_218_p1");
    sc_trace(mVcdFile, sum2_cast_fu_252_p1, "sum2_cast_fu_252_p1");
    sc_trace(mVcdFile, sum3_cast_fu_257_p1, "sum3_cast_fu_257_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, tmp_22_fu_167_p0, "tmp_22_fu_167_p0");
    sc_trace(mVcdFile, tmp_24_fu_173_p0, "tmp_24_fu_173_p0");
    sc_trace(mVcdFile, exitcond2_fu_187_p1, "exitcond2_fu_187_p1");
    sc_trace(mVcdFile, sum_fu_213_p2, "sum_fu_213_p2");
    sc_trace(mVcdFile, exitcond_fu_231_p1, "exitcond_fu_231_p1");
    sc_trace(mVcdFile, tmp_30_fu_227_p1, "tmp_30_fu_227_p1");
    sc_trace(mVcdFile, tmp_29_fu_223_p1, "tmp_29_fu_223_p1");
    sc_trace(mVcdFile, sum2_fu_247_p2, "sum2_fu_247_p2");
    sc_trace(mVcdFile, grp_fu_261_p0, "grp_fu_261_p0");
    sc_trace(mVcdFile, grp_fu_266_p0, "grp_fu_266_p0");
    sc_trace(mVcdFile, exitcond2_fu_187_p2, "exitcond2_fu_187_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

k2c_matmul_1::~k2c_matmul_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete sample0_fadd_32nscud_U70;
    delete sample0_fmul_32nsdEe_U71;
    delete sample0_mul_64s_6bkb_U72;
    delete sample0_mul_mul_1eOg_U73;
    delete sample0_mul_mul_1mb6_U74;
    delete sample0_mac_muladncg_U75;
}

void k2c_matmul_1::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void k2c_matmul_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_fu_202_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        i_1_reg_104 = i_3_reg_348.read();
    } else if ((esl_seteq<1,1,1>(exitcond3_fu_156_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        i_1_reg_104 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(exitcond3_fu_156_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        i_reg_93 = i_2_fu_161_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_reg_93 = ap_const_lv14_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        j_reg_126 = ap_const_lv64_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        j_reg_126 = j_1_reg_389.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_fu_231_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        k_reg_115 = k_1_reg_371.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        k_reg_115 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(exitcond1_fu_202_p2.read(), ap_const_lv1_0))) {
        B_addr_reg_376 =  (sc_lv<13>) (sum_cast_fu_218_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        B_load_3_reg_409 = B_q0.read();
        B_load_reg_414 = B_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(exitcond_fu_231_p2.read(), ap_const_lv1_0))) {
        C_addr_3_reg_399 =  (sc_lv<14>) (sum2_cast_fu_252_p1.read());
        sum3_reg_394 = sum3_fu_242_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        C_load_reg_424 = C_q0.read();
        tmp_18_reg_419 = grp_fu_141_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_3_reg_348 = i_3_fu_192_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        inneridx_reg_358 = grp_fu_266_p2.read();
        outrowidx_reg_353 = grp_fu_261_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        j_1_reg_389 = j_1_fu_236_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        k_1_reg_371 = k_1_fu_207_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        tmp_20_reg_429 = grp_fu_137_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond3_fu_156_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        tmp_22_reg_315 = tmp_22_fu_167_p1.read();
        tmp_23_reg_320 = tmp_23_fu_170_p1.read();
        tmp_24_reg_325 = tmp_24_fu_173_p1.read();
        tmp_25_reg_330 = tmp_25_fu_176_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        tmp_reg_381 = grp_fu_271_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        total_ele_reg_302 = grp_fu_145_p2.read();
    }
}

void k2c_matmul_1::thread_B_address0() {
    B_address0 = B_addr_reg_376.read();
}

void k2c_matmul_1::thread_B_address1() {
    B_address1 =  (sc_lv<13>) (sum3_cast_fu_257_p1.read());
}

void k2c_matmul_1::thread_B_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        B_ce0 = ap_const_logic_1;
    } else {
        B_ce0 = ap_const_logic_0;
    }
}

void k2c_matmul_1::thread_B_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        B_ce1 = ap_const_logic_1;
    } else {
        B_ce1 = ap_const_logic_0;
    }
}

void k2c_matmul_1::thread_C_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        C_address0 = C_addr_3_reg_399.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        C_address0 =  (sc_lv<14>) (i_cast_fu_151_p1.read());
    } else {
        C_address0 = "XXXXXXXXXXXXXX";
    }
}

void k2c_matmul_1::thread_C_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        C_ce0 = ap_const_logic_1;
    } else {
        C_ce0 = ap_const_logic_0;
    }
}

void k2c_matmul_1::thread_C_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        C_d0 = tmp_20_reg_429.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        C_d0 = ap_const_lv32_0;
    } else {
        C_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void k2c_matmul_1::thread_C_we0() {
    if (((esl_seteq<1,1,1>(exitcond3_fu_156_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()))) {
        C_we0 = ap_const_logic_1;
    } else {
        C_we0 = ap_const_logic_0;
    }
}

void k2c_matmul_1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void k2c_matmul_1::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void k2c_matmul_1::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void k2c_matmul_1::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void k2c_matmul_1::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void k2c_matmul_1::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void k2c_matmul_1::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void k2c_matmul_1::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void k2c_matmul_1::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void k2c_matmul_1::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void k2c_matmul_1::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void k2c_matmul_1::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void k2c_matmul_1::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void k2c_matmul_1::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void k2c_matmul_1::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void k2c_matmul_1::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void k2c_matmul_1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(exitcond2_fu_187_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void k2c_matmul_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void k2c_matmul_1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(exitcond2_fu_187_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void k2c_matmul_1::thread_exitcond1_fu_202_p2() {
    exitcond1_fu_202_p2 = (!k_reg_115.read().is_01() || !innerdim.read().is_01())? sc_lv<1>(): sc_lv<1>(k_reg_115.read() == innerdim.read());
}

void k2c_matmul_1::thread_exitcond2_fu_187_p1() {
    exitcond2_fu_187_p1 = outrows.read();
}

void k2c_matmul_1::thread_exitcond2_fu_187_p2() {
    exitcond2_fu_187_p2 = (!i_1_reg_104.read().is_01() || !exitcond2_fu_187_p1.read().is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_104.read() == exitcond2_fu_187_p1.read());
}

void k2c_matmul_1::thread_exitcond3_fu_156_p2() {
    exitcond3_fu_156_p2 = (!i_cast_fu_151_p1.read().is_01() || !total_ele_reg_302.read().is_01())? sc_lv<1>(): sc_lv<1>(i_cast_fu_151_p1.read() == total_ele_reg_302.read());
}

void k2c_matmul_1::thread_exitcond_fu_231_p1() {
    exitcond_fu_231_p1 = outcols.read();
}

void k2c_matmul_1::thread_exitcond_fu_231_p2() {
    exitcond_fu_231_p2 = (!j_reg_126.read().is_01() || !exitcond_fu_231_p1.read().is_01())? sc_lv<1>(): sc_lv<1>(j_reg_126.read() == exitcond_fu_231_p1.read());
}

void k2c_matmul_1::thread_grp_fu_261_p0() {
    grp_fu_261_p0 = i_1_reg_104.read().range(15-1, 0);
}

void k2c_matmul_1::thread_grp_fu_266_p0() {
    grp_fu_266_p0 = i_1_reg_104.read().range(14-1, 0);
}

void k2c_matmul_1::thread_i_2_fu_161_p2() {
    i_2_fu_161_p2 = (!i_reg_93.read().is_01() || !ap_const_lv14_1.is_01())? sc_lv<14>(): (sc_biguint<14>(i_reg_93.read()) + sc_biguint<14>(ap_const_lv14_1));
}

void k2c_matmul_1::thread_i_3_fu_192_p2() {
    i_3_fu_192_p2 = (!ap_const_lv64_1.is_01() || !i_1_reg_104.read().is_01())? sc_lv<64>(): (sc_biguint<64>(ap_const_lv64_1) + sc_biguint<64>(i_1_reg_104.read()));
}

void k2c_matmul_1::thread_i_cast_fu_151_p1() {
    i_cast_fu_151_p1 = esl_zext<64,14>(i_reg_93.read());
}

void k2c_matmul_1::thread_j_1_fu_236_p2() {
    j_1_fu_236_p2 = (!ap_const_lv64_1.is_01() || !j_reg_126.read().is_01())? sc_lv<64>(): (sc_biguint<64>(ap_const_lv64_1) + sc_biguint<64>(j_reg_126.read()));
}

void k2c_matmul_1::thread_k_1_fu_207_p2() {
    k_1_fu_207_p2 = (!ap_const_lv64_1.is_01() || !k_reg_115.read().is_01())? sc_lv<64>(): (sc_biguint<64>(ap_const_lv64_1) + sc_biguint<64>(k_reg_115.read()));
}

void k2c_matmul_1::thread_sum2_cast_fu_252_p1() {
    sum2_cast_fu_252_p1 = esl_zext<64,15>(sum2_fu_247_p2.read());
}

void k2c_matmul_1::thread_sum2_fu_247_p2() {
    sum2_fu_247_p2 = (!tmp_29_fu_223_p1.read().is_01() || !outrowidx_reg_353.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_29_fu_223_p1.read()) + sc_bigint<15>(outrowidx_reg_353.read()));
}

void k2c_matmul_1::thread_sum3_cast_fu_257_p1() {
    sum3_cast_fu_257_p1 = esl_zext<64,14>(sum3_reg_394.read());
}

void k2c_matmul_1::thread_sum3_fu_242_p2() {
    sum3_fu_242_p2 = (!tmp_reg_381.read().is_01() || !tmp_30_fu_227_p1.read().is_01())? sc_lv<14>(): (sc_bigint<14>(tmp_reg_381.read()) + sc_biguint<14>(tmp_30_fu_227_p1.read()));
}

void k2c_matmul_1::thread_sum_cast_fu_218_p1() {
    sum_cast_fu_218_p1 = esl_zext<64,14>(sum_fu_213_p2.read());
}

void k2c_matmul_1::thread_sum_fu_213_p2() {
    sum_fu_213_p2 = (!tmp_28_fu_198_p1.read().is_01() || !inneridx_reg_358.read().is_01())? sc_lv<14>(): (sc_bigint<14>(tmp_28_fu_198_p1.read()) + sc_bigint<14>(inneridx_reg_358.read()));
}

void k2c_matmul_1::thread_tmp_22_fu_167_p0() {
    tmp_22_fu_167_p0 = outcols.read();
}

void k2c_matmul_1::thread_tmp_22_fu_167_p1() {
    tmp_22_fu_167_p1 = tmp_22_fu_167_p0.read().range(15-1, 0);
}

void k2c_matmul_1::thread_tmp_23_fu_170_p1() {
    tmp_23_fu_170_p1 = innerdim.read().range(14-1, 0);
}

void k2c_matmul_1::thread_tmp_24_fu_173_p0() {
    tmp_24_fu_173_p0 = outcols.read();
}

void k2c_matmul_1::thread_tmp_24_fu_173_p1() {
    tmp_24_fu_173_p1 = tmp_24_fu_173_p0.read().range(14-1, 0);
}

void k2c_matmul_1::thread_tmp_25_fu_176_p1() {
    tmp_25_fu_176_p1 = B_offset.read().range(14-1, 0);
}

void k2c_matmul_1::thread_tmp_28_fu_198_p1() {
    tmp_28_fu_198_p1 = k_reg_115.read().range(14-1, 0);
}

void k2c_matmul_1::thread_tmp_29_fu_223_p1() {
    tmp_29_fu_223_p1 = j_reg_126.read().range(15-1, 0);
}

void k2c_matmul_1::thread_tmp_30_fu_227_p1() {
    tmp_30_fu_227_p1 = j_reg_126.read().range(14-1, 0);
}

void k2c_matmul_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(exitcond3_fu_156_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(exitcond2_fu_187_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(exitcond1_fu_202_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(exitcond_fu_231_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<31>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

