// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "k2c_affine_matmul.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic k2c_affine_matmul::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic k2c_affine_matmul::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state1 = "1";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state2 = "10";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state3 = "100";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state4 = "1000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state5 = "10000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state6 = "100000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state7 = "1000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state8 = "10000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state9 = "100000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state10 = "1000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state11 = "10000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state12 = "100000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<42> k2c_affine_matmul::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<32> k2c_affine_matmul::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> k2c_affine_matmul::ap_const_lv32_14 = "10100";
const sc_lv<32> k2c_affine_matmul::ap_const_lv32_1F = "11111";
const sc_lv<32> k2c_affine_matmul::ap_const_lv32_1D = "11101";
const sc_lv<32> k2c_affine_matmul::ap_const_lv32_28 = "101000";
const sc_lv<32> k2c_affine_matmul::ap_const_lv32_5 = "101";
const sc_lv<32> k2c_affine_matmul::ap_const_lv32_6 = "110";
const sc_lv<1> k2c_affine_matmul::ap_const_lv1_1 = "1";
const sc_lv<32> k2c_affine_matmul::ap_const_lv32_7 = "111";
const sc_lv<32> k2c_affine_matmul::ap_const_lv32_9 = "1001";
const sc_lv<32> k2c_affine_matmul::ap_const_lv32_A = "1010";
const sc_lv<1> k2c_affine_matmul::ap_const_lv1_0 = "0";
const sc_lv<32> k2c_affine_matmul::ap_const_lv32_B = "1011";
const sc_lv<32> k2c_affine_matmul::ap_const_lv32_D = "1101";
const sc_lv<32> k2c_affine_matmul::ap_const_lv32_E = "1110";
const sc_lv<32> k2c_affine_matmul::ap_const_lv32_F = "1111";
const sc_lv<14> k2c_affine_matmul::ap_const_lv14_0 = "00000000000000";
const sc_lv<64> k2c_affine_matmul::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> k2c_affine_matmul::ap_const_lv32_29 = "101001";
const sc_lv<32> k2c_affine_matmul::ap_const_lv32_1E = "11110";
const sc_lv<32> k2c_affine_matmul::ap_const_lv32_13 = "10011";
const sc_lv<32> k2c_affine_matmul::ap_const_lv32_15 = "10101";
const sc_lv<32> k2c_affine_matmul::ap_const_lv32_20 = "100000";
const sc_lv<32> k2c_affine_matmul::ap_const_lv32_10 = "10000";
const sc_lv<14> k2c_affine_matmul::ap_const_lv14_1 = "1";
const sc_lv<64> k2c_affine_matmul::ap_const_lv64_1 = "1";
const bool k2c_affine_matmul::ap_const_boolean_1 = true;

k2c_affine_matmul::k2c_affine_matmul(sc_module_name name) : sc_module(name), mVcdFile(0) {
    sample0_fadd_32nscud_U43 = new sample0_fadd_32nscud<1,9,32,32,32>("sample0_fadd_32nscud_U43");
    sample0_fadd_32nscud_U43->clk(ap_clk);
    sample0_fadd_32nscud_U43->reset(ap_rst);
    sample0_fadd_32nscud_U43->din0(reg_158);
    sample0_fadd_32nscud_U43->din1(grp_fu_150_p1);
    sample0_fadd_32nscud_U43->ce(ap_var_for_const0);
    sample0_fadd_32nscud_U43->dout(grp_fu_150_p2);
    sample0_fmul_32nsdEe_U44 = new sample0_fmul_32nsdEe<1,5,32,32,32>("sample0_fmul_32nsdEe_U44");
    sample0_fmul_32nsdEe_U44->clk(ap_clk);
    sample0_fmul_32nsdEe_U44->reset(ap_rst);
    sample0_fmul_32nsdEe_U44->din0(A_load_reg_403);
    sample0_fmul_32nsdEe_U44->din1(B_load_reg_408);
    sample0_fmul_32nsdEe_U44->ce(ap_var_for_const0);
    sample0_fmul_32nsdEe_U44->dout(grp_fu_154_p2);
    sample0_mul_64s_6bkb_U45 = new sample0_mul_64s_6bkb<1,6,64,64,64>("sample0_mul_64s_6bkb_U45");
    sample0_mul_64s_6bkb_U45->clk(ap_clk);
    sample0_mul_64s_6bkb_U45->reset(ap_rst);
    sample0_mul_64s_6bkb_U45->din0(outcols);
    sample0_mul_64s_6bkb_U45->din1(outrows);
    sample0_mul_64s_6bkb_U45->ce(ap_var_for_const0);
    sample0_mul_64s_6bkb_U45->dout(grp_fu_168_p2);
    sample0_mul_mul_1eOg_U46 = new sample0_mul_mul_1eOg<1,3,15,15,15>("sample0_mul_mul_1eOg_U46");
    sample0_mul_mul_1eOg_U46->clk(ap_clk);
    sample0_mul_mul_1eOg_U46->reset(ap_rst);
    sample0_mul_mul_1eOg_U46->din0(tmp_85_fu_196_p1);
    sample0_mul_mul_1eOg_U46->din1(tmp_83_reg_312);
    sample0_mul_mul_1eOg_U46->ce(ap_var_for_const0);
    sample0_mul_mul_1eOg_U46->dout(grp_fu_264_p2);
    sample0_mul_mul_1eOg_U47 = new sample0_mul_mul_1eOg<1,3,15,15,15>("sample0_mul_mul_1eOg_U47");
    sample0_mul_mul_1eOg_U47->clk(ap_clk);
    sample0_mul_mul_1eOg_U47->reset(ap_rst);
    sample0_mul_mul_1eOg_U47->din0(tmp_85_fu_196_p1);
    sample0_mul_mul_1eOg_U47->din1(tmp_84_reg_318);
    sample0_mul_mul_1eOg_U47->ce(ap_var_for_const0);
    sample0_mul_mul_1eOg_U47->dout(grp_fu_269_p2);
    sample0_mac_muladkbM_U48 = new sample0_mac_muladkbM<1,3,15,15,15,15>("sample0_mac_muladkbM_U48");
    sample0_mac_muladkbM_U48->clk(ap_clk);
    sample0_mac_muladkbM_U48->reset(ap_rst);
    sample0_mac_muladkbM_U48->din0(tmp_87_fu_236_p1);
    sample0_mac_muladkbM_U48->din1(tmp_83_reg_312);
    sample0_mac_muladkbM_U48->din2(tmp_86_reg_347);
    sample0_mac_muladkbM_U48->ce(ap_var_for_const0);
    sample0_mac_muladkbM_U48->dout(grp_fu_274_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_address0);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( sum5_cast_fu_256_p1 );

    SC_METHOD(thread_A_ce0);
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_B_address0);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( sum8_cast_fu_260_p1 );

    SC_METHOD(thread_B_ce0);
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_C_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( C_addr_5_reg_360 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( i_cast_fu_174_p1 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_C_ce0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_C_d0);
    sensitive << ( reg_163 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_C_we0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond3_fu_179_p2 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond2_fu_200_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond2_fu_200_p2 );

    SC_METHOD(thread_d_address0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( j_reg_126 );

    SC_METHOD(thread_d_ce0);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_exitcond1_fu_215_p1);
    sensitive << ( outcols );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_exitcond1_fu_215_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( j_reg_126 );
    sensitive << ( exitcond1_fu_215_p1 );

    SC_METHOD(thread_exitcond2_fu_200_p1);
    sensitive << ( outrows );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_exitcond2_fu_200_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( i_1_reg_115 );
    sensitive << ( exitcond2_fu_200_p1 );

    SC_METHOD(thread_exitcond3_fu_179_p2);
    sensitive << ( tmp_reg_299 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( i_cast_fu_174_p1 );

    SC_METHOD(thread_exitcond_fu_240_p2);
    sensitive << ( innerdim );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( k_reg_139 );

    SC_METHOD(thread_grp_fu_150_p1);
    sensitive << ( tmp_40_reg_413 );
    sensitive << ( d_load_reg_418 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_i_72_fu_184_p2);
    sensitive << ( i_reg_104 );

    SC_METHOD(thread_i_73_fu_205_p2);
    sensitive << ( i_1_reg_115 );

    SC_METHOD(thread_i_cast_fu_174_p1);
    sensitive << ( i_reg_104 );

    SC_METHOD(thread_j_12_fu_220_p2);
    sensitive << ( j_reg_126 );

    SC_METHOD(thread_k_2_fu_245_p2);
    sensitive << ( k_reg_139 );

    SC_METHOD(thread_sum2_cast_fu_231_p1);
    sensitive << ( sum2_fu_226_p2 );

    SC_METHOD(thread_sum2_fu_226_p2);
    sensitive << ( outrowidx_reg_337 );
    sensitive << ( tmp_86_fu_211_p1 );

    SC_METHOD(thread_sum5_cast_fu_256_p1);
    sensitive << ( sum5_reg_378 );

    SC_METHOD(thread_sum5_fu_251_p2);
    sensitive << ( inneridx_reg_342 );
    sensitive << ( tmp_87_fu_236_p1 );

    SC_METHOD(thread_sum8_cast_fu_260_p1);
    sensitive << ( sum8_reg_388 );

    SC_METHOD(thread_tmp_83_fu_190_p0);
    sensitive << ( outcols );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_tmp_83_fu_190_p1);
    sensitive << ( tmp_83_fu_190_p0 );

    SC_METHOD(thread_tmp_84_fu_193_p1);
    sensitive << ( innerdim );

    SC_METHOD(thread_tmp_85_fu_196_p1);
    sensitive << ( i_1_reg_115 );

    SC_METHOD(thread_tmp_86_fu_211_p1);
    sensitive << ( j_reg_126 );

    SC_METHOD(thread_tmp_87_fu_236_p1);
    sensitive << ( k_reg_139 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond3_fu_179_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond1_fu_215_p2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond_fu_240_p2 );
    sensitive << ( exitcond2_fu_200_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "k2c_affine_matmul_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, C_address0, "(port)C_address0");
    sc_trace(mVcdFile, C_ce0, "(port)C_ce0");
    sc_trace(mVcdFile, C_we0, "(port)C_we0");
    sc_trace(mVcdFile, C_d0, "(port)C_d0");
    sc_trace(mVcdFile, C_q0, "(port)C_q0");
    sc_trace(mVcdFile, A_address0, "(port)A_address0");
    sc_trace(mVcdFile, A_ce0, "(port)A_ce0");
    sc_trace(mVcdFile, A_q0, "(port)A_q0");
    sc_trace(mVcdFile, B_address0, "(port)B_address0");
    sc_trace(mVcdFile, B_ce0, "(port)B_ce0");
    sc_trace(mVcdFile, B_q0, "(port)B_q0");
    sc_trace(mVcdFile, d_address0, "(port)d_address0");
    sc_trace(mVcdFile, d_ce0, "(port)d_ce0");
    sc_trace(mVcdFile, d_q0, "(port)d_q0");
    sc_trace(mVcdFile, outrows, "(port)outrows");
    sc_trace(mVcdFile, outcols, "(port)outcols");
    sc_trace(mVcdFile, innerdim, "(port)innerdim");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_158, "reg_158");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, grp_fu_150_p2, "grp_fu_150_p2");
    sc_trace(mVcdFile, reg_163, "reg_163");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_fu_168_p2, "grp_fu_168_p2");
    sc_trace(mVcdFile, tmp_reg_299, "tmp_reg_299");
    sc_trace(mVcdFile, i_72_fu_184_p2, "i_72_fu_184_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_83_fu_190_p1, "tmp_83_fu_190_p1");
    sc_trace(mVcdFile, tmp_83_reg_312, "tmp_83_reg_312");
    sc_trace(mVcdFile, exitcond3_fu_179_p2, "exitcond3_fu_179_p2");
    sc_trace(mVcdFile, tmp_84_fu_193_p1, "tmp_84_fu_193_p1");
    sc_trace(mVcdFile, tmp_84_reg_318, "tmp_84_reg_318");
    sc_trace(mVcdFile, tmp_85_fu_196_p1, "tmp_85_fu_196_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, i_73_fu_205_p2, "i_73_fu_205_p2");
    sc_trace(mVcdFile, i_73_reg_332, "i_73_reg_332");
    sc_trace(mVcdFile, grp_fu_264_p2, "grp_fu_264_p2");
    sc_trace(mVcdFile, outrowidx_reg_337, "outrowidx_reg_337");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, grp_fu_269_p2, "grp_fu_269_p2");
    sc_trace(mVcdFile, inneridx_reg_342, "inneridx_reg_342");
    sc_trace(mVcdFile, tmp_86_fu_211_p1, "tmp_86_fu_211_p1");
    sc_trace(mVcdFile, tmp_86_reg_347, "tmp_86_reg_347");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, j_12_fu_220_p2, "j_12_fu_220_p2");
    sc_trace(mVcdFile, j_12_reg_355, "j_12_reg_355");
    sc_trace(mVcdFile, C_addr_5_reg_360, "C_addr_5_reg_360");
    sc_trace(mVcdFile, exitcond1_fu_215_p2, "exitcond1_fu_215_p2");
    sc_trace(mVcdFile, tmp_87_fu_236_p1, "tmp_87_fu_236_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, k_2_fu_245_p2, "k_2_fu_245_p2");
    sc_trace(mVcdFile, k_2_reg_373, "k_2_reg_373");
    sc_trace(mVcdFile, sum5_fu_251_p2, "sum5_fu_251_p2");
    sc_trace(mVcdFile, sum5_reg_378, "sum5_reg_378");
    sc_trace(mVcdFile, exitcond_fu_240_p2, "exitcond_fu_240_p2");
    sc_trace(mVcdFile, grp_fu_274_p3, "grp_fu_274_p3");
    sc_trace(mVcdFile, sum8_reg_388, "sum8_reg_388");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, A_load_reg_403, "A_load_reg_403");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, B_load_reg_408, "B_load_reg_408");
    sc_trace(mVcdFile, grp_fu_154_p2, "grp_fu_154_p2");
    sc_trace(mVcdFile, tmp_40_reg_413, "tmp_40_reg_413");
    sc_trace(mVcdFile, d_load_reg_418, "d_load_reg_418");
    sc_trace(mVcdFile, i_reg_104, "i_reg_104");
    sc_trace(mVcdFile, i_1_reg_115, "i_1_reg_115");
    sc_trace(mVcdFile, j_reg_126, "j_reg_126");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, k_reg_139, "k_reg_139");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, i_cast_fu_174_p1, "i_cast_fu_174_p1");
    sc_trace(mVcdFile, sum2_cast_fu_231_p1, "sum2_cast_fu_231_p1");
    sc_trace(mVcdFile, sum5_cast_fu_256_p1, "sum5_cast_fu_256_p1");
    sc_trace(mVcdFile, sum8_cast_fu_260_p1, "sum8_cast_fu_260_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, grp_fu_150_p1, "grp_fu_150_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, tmp_83_fu_190_p0, "tmp_83_fu_190_p0");
    sc_trace(mVcdFile, exitcond2_fu_200_p1, "exitcond2_fu_200_p1");
    sc_trace(mVcdFile, exitcond1_fu_215_p1, "exitcond1_fu_215_p1");
    sc_trace(mVcdFile, sum2_fu_226_p2, "sum2_fu_226_p2");
    sc_trace(mVcdFile, exitcond2_fu_200_p2, "exitcond2_fu_200_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

k2c_affine_matmul::~k2c_affine_matmul() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete sample0_fadd_32nscud_U43;
    delete sample0_fmul_32nsdEe_U44;
    delete sample0_mul_64s_6bkb_U45;
    delete sample0_mul_mul_1eOg_U46;
    delete sample0_mul_mul_1eOg_U47;
    delete sample0_mac_muladkbM_U48;
}

void k2c_affine_matmul::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void k2c_affine_matmul::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_215_p2.read(), ap_const_lv1_1))) {
        i_1_reg_115 = i_73_reg_332.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(exitcond3_fu_179_p2.read(), ap_const_lv1_1))) {
        i_1_reg_115 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_179_p2.read(), ap_const_lv1_0))) {
        i_reg_104 = i_72_fu_184_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_reg_104 = ap_const_lv14_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        j_reg_126 = j_12_reg_355.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        j_reg_126 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_215_p2.read(), ap_const_lv1_0))) {
        k_reg_139 = ap_const_lv64_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        k_reg_139 = k_2_reg_373.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        A_load_reg_403 = A_q0.read();
        B_load_reg_408 = B_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(exitcond1_fu_215_p2.read(), ap_const_lv1_0))) {
        C_addr_5_reg_360 =  (sc_lv<14>) (sum2_cast_fu_231_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        d_load_reg_418 = d_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_73_reg_332 = i_73_fu_205_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        inneridx_reg_342 = grp_fu_269_p2.read();
        outrowidx_reg_337 = grp_fu_264_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        j_12_reg_355 = j_12_fu_220_p2.read();
        tmp_86_reg_347 = tmp_86_fu_211_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        k_2_reg_373 = k_2_fu_245_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()))) {
        reg_158 = C_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()))) {
        reg_163 = grp_fu_150_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(exitcond_fu_240_p2.read(), ap_const_lv1_0))) {
        sum5_reg_378 = sum5_fu_251_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        sum8_reg_388 = grp_fu_274_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        tmp_40_reg_413 = grp_fu_154_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(exitcond3_fu_179_p2.read(), ap_const_lv1_1))) {
        tmp_83_reg_312 = tmp_83_fu_190_p1.read();
        tmp_84_reg_318 = tmp_84_fu_193_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        tmp_reg_299 = grp_fu_168_p2.read();
    }
}

void k2c_affine_matmul::thread_A_address0() {
    A_address0 =  (sc_lv<14>) (sum5_cast_fu_256_p1.read());
}

void k2c_affine_matmul::thread_A_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        A_ce0 = ap_const_logic_1;
    } else {
        A_ce0 = ap_const_logic_0;
    }
}

void k2c_affine_matmul::thread_B_address0() {
    B_address0 =  (sc_lv<14>) (sum8_cast_fu_260_p1.read());
}

void k2c_affine_matmul::thread_B_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        B_ce0 = ap_const_logic_1;
    } else {
        B_ce0 = ap_const_logic_0;
    }
}

void k2c_affine_matmul::thread_C_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        C_address0 = C_addr_5_reg_360.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        C_address0 =  (sc_lv<14>) (i_cast_fu_174_p1.read());
    } else {
        C_address0 = "XXXXXXXXXXXXXX";
    }
}

void k2c_affine_matmul::thread_C_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        C_ce0 = ap_const_logic_1;
    } else {
        C_ce0 = ap_const_logic_0;
    }
}

void k2c_affine_matmul::thread_C_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()))) {
        C_d0 = reg_163.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        C_d0 = ap_const_lv32_0;
    } else {
        C_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void k2c_affine_matmul::thread_C_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(exitcond3_fu_179_p2.read(), ap_const_lv1_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()))) {
        C_we0 = ap_const_logic_1;
    } else {
        C_we0 = ap_const_logic_0;
    }
}

void k2c_affine_matmul::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void k2c_affine_matmul::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void k2c_affine_matmul::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void k2c_affine_matmul::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void k2c_affine_matmul::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void k2c_affine_matmul::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void k2c_affine_matmul::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void k2c_affine_matmul::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void k2c_affine_matmul::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void k2c_affine_matmul::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void k2c_affine_matmul::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void k2c_affine_matmul::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void k2c_affine_matmul::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void k2c_affine_matmul::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void k2c_affine_matmul::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void k2c_affine_matmul::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void k2c_affine_matmul::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void k2c_affine_matmul::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void k2c_affine_matmul::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void k2c_affine_matmul::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void k2c_affine_matmul::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(exitcond2_fu_200_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void k2c_affine_matmul::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void k2c_affine_matmul::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_200_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void k2c_affine_matmul::thread_d_address0() {
    d_address0 =  (sc_lv<14>) (j_reg_126.read());
}

void k2c_affine_matmul::thread_d_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        d_ce0 = ap_const_logic_1;
    } else {
        d_ce0 = ap_const_logic_0;
    }
}

void k2c_affine_matmul::thread_exitcond1_fu_215_p1() {
    exitcond1_fu_215_p1 = outcols.read();
}

void k2c_affine_matmul::thread_exitcond1_fu_215_p2() {
    exitcond1_fu_215_p2 = (!j_reg_126.read().is_01() || !exitcond1_fu_215_p1.read().is_01())? sc_lv<1>(): sc_lv<1>(j_reg_126.read() == exitcond1_fu_215_p1.read());
}

void k2c_affine_matmul::thread_exitcond2_fu_200_p1() {
    exitcond2_fu_200_p1 = outrows.read();
}

void k2c_affine_matmul::thread_exitcond2_fu_200_p2() {
    exitcond2_fu_200_p2 = (!i_1_reg_115.read().is_01() || !exitcond2_fu_200_p1.read().is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_115.read() == exitcond2_fu_200_p1.read());
}

void k2c_affine_matmul::thread_exitcond3_fu_179_p2() {
    exitcond3_fu_179_p2 = (!i_cast_fu_174_p1.read().is_01() || !tmp_reg_299.read().is_01())? sc_lv<1>(): sc_lv<1>(i_cast_fu_174_p1.read() == tmp_reg_299.read());
}

void k2c_affine_matmul::thread_exitcond_fu_240_p2() {
    exitcond_fu_240_p2 = (!k_reg_139.read().is_01() || !innerdim.read().is_01())? sc_lv<1>(): sc_lv<1>(k_reg_139.read() == innerdim.read());
}

void k2c_affine_matmul::thread_grp_fu_150_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        grp_fu_150_p1 = d_load_reg_418.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_150_p1 = tmp_40_reg_413.read();
    } else {
        grp_fu_150_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void k2c_affine_matmul::thread_i_72_fu_184_p2() {
    i_72_fu_184_p2 = (!i_reg_104.read().is_01() || !ap_const_lv14_1.is_01())? sc_lv<14>(): (sc_biguint<14>(i_reg_104.read()) + sc_biguint<14>(ap_const_lv14_1));
}

void k2c_affine_matmul::thread_i_73_fu_205_p2() {
    i_73_fu_205_p2 = (!ap_const_lv64_1.is_01() || !i_1_reg_115.read().is_01())? sc_lv<64>(): (sc_biguint<64>(ap_const_lv64_1) + sc_biguint<64>(i_1_reg_115.read()));
}

void k2c_affine_matmul::thread_i_cast_fu_174_p1() {
    i_cast_fu_174_p1 = esl_zext<64,14>(i_reg_104.read());
}

void k2c_affine_matmul::thread_j_12_fu_220_p2() {
    j_12_fu_220_p2 = (!ap_const_lv64_1.is_01() || !j_reg_126.read().is_01())? sc_lv<64>(): (sc_biguint<64>(ap_const_lv64_1) + sc_biguint<64>(j_reg_126.read()));
}

void k2c_affine_matmul::thread_k_2_fu_245_p2() {
    k_2_fu_245_p2 = (!ap_const_lv64_1.is_01() || !k_reg_139.read().is_01())? sc_lv<64>(): (sc_biguint<64>(ap_const_lv64_1) + sc_biguint<64>(k_reg_139.read()));
}

void k2c_affine_matmul::thread_sum2_cast_fu_231_p1() {
    sum2_cast_fu_231_p1 = esl_zext<64,15>(sum2_fu_226_p2.read());
}

void k2c_affine_matmul::thread_sum2_fu_226_p2() {
    sum2_fu_226_p2 = (!tmp_86_fu_211_p1.read().is_01() || !outrowidx_reg_337.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_86_fu_211_p1.read()) + sc_bigint<15>(outrowidx_reg_337.read()));
}

void k2c_affine_matmul::thread_sum5_cast_fu_256_p1() {
    sum5_cast_fu_256_p1 = esl_zext<64,15>(sum5_reg_378.read());
}

void k2c_affine_matmul::thread_sum5_fu_251_p2() {
    sum5_fu_251_p2 = (!tmp_87_fu_236_p1.read().is_01() || !inneridx_reg_342.read().is_01())? sc_lv<15>(): (sc_bigint<15>(tmp_87_fu_236_p1.read()) + sc_bigint<15>(inneridx_reg_342.read()));
}

void k2c_affine_matmul::thread_sum8_cast_fu_260_p1() {
    sum8_cast_fu_260_p1 = esl_zext<64,15>(sum8_reg_388.read());
}

void k2c_affine_matmul::thread_tmp_83_fu_190_p0() {
    tmp_83_fu_190_p0 = outcols.read();
}

void k2c_affine_matmul::thread_tmp_83_fu_190_p1() {
    tmp_83_fu_190_p1 = tmp_83_fu_190_p0.read().range(15-1, 0);
}

void k2c_affine_matmul::thread_tmp_84_fu_193_p1() {
    tmp_84_fu_193_p1 = innerdim.read().range(15-1, 0);
}

void k2c_affine_matmul::thread_tmp_85_fu_196_p1() {
    tmp_85_fu_196_p1 = i_1_reg_115.read().range(15-1, 0);
}

void k2c_affine_matmul::thread_tmp_86_fu_211_p1() {
    tmp_86_fu_211_p1 = j_reg_126.read().range(15-1, 0);
}

void k2c_affine_matmul::thread_tmp_87_fu_236_p1() {
    tmp_87_fu_236_p1 = k_reg_139.read().range(15-1, 0);
}

void k2c_affine_matmul::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(exitcond3_fu_179_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(exitcond2_fu_200_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(exitcond1_fu_215_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(exitcond_fu_240_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state32;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state42;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<42>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

